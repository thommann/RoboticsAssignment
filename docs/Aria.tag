<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>ArMapComponents.h</name>
    <path>/home/reed/amrsw/Aria/include/</path>
    <filename>ArMapComponents_8h</filename>
    <includes id="ArMapInterface_8h" name="ArMapInterface.h" local="yes" imported="no">ArMapInterface.h</includes>
    <class kind="struct">ArDataTagCaseCmpOp</class>
    <class kind="class">ArMapInfo</class>
    <class kind="class">ArMapObjects</class>
    <class kind="class">ArMapScan</class>
    <class kind="class">ArMapSimple</class>
    <class kind="class">ArMapSupplement</class>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string, ArDataTagCaseCmpOp &gt;</type>
      <name>ArDataTagToScanTypeMap</name>
      <anchorfile>ArMapComponents_8h.html</anchorfile>
      <anchor>abc87457cd938984b09722f14c498d133</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, ArMapScan *, ArStrCaseCmpOp &gt;</type>
      <name>ArTypeToScanMap</name>
      <anchorfile>ArMapComponents_8h.html</anchorfile>
      <anchor>a17cdf8ddf71ca4c1a334921ee0aa321b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArMapInterface.h</name>
    <path>/home/reed/amrsw/Aria/include/</path>
    <filename>ArMapInterface_8h</filename>
    <class kind="class">ArMapInfoInterface</class>
    <class kind="class">ArMapInterface</class>
    <class kind="class">ArMapObjectsInterface</class>
    <class kind="class">ArMapScanInterface</class>
    <class kind="class">ArMapSupplementInterface</class>
    <member kind="define">
      <type>#define</type>
      <name>ARMAP_DEFAULT_SCAN_TYPE</name>
      <anchorfile>ArMapInterface_8h.html</anchorfile>
      <anchor>ac9bfc47ae45cd704d0c287fa69f56686</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ARMAP_SUMMARY_SCAN_TYPE</name>
      <anchorfile>ArMapInterface_8h.html</anchorfile>
      <anchor>ad81fb545e96e45e92a2065b7fdfe02c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArMD5Calculator.h</name>
    <path>/home/reed/amrsw/Aria/include/</path>
    <filename>ArMD5Calculator_8h</filename>
    <class kind="class">ArMD5Calculator</class>
  </compound>
  <compound kind="class">
    <name>Ar3DPoint</name>
    <filename>classAr3DPoint.html</filename>
    <member kind="function">
      <type>Ar3DPoint</type>
      <name>cross</name>
      <anchorfile>classAr3DPoint.html</anchorfile>
      <anchor>a176e2509098336b368a8d82e4cc801cd</anchor>
      <arglist>(Ar3DPoint c)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dot</name>
      <anchorfile>classAr3DPoint.html</anchorfile>
      <anchor>a645f4653b08f137059ea3f535692dcd4</anchor>
      <arglist>(Ar3DPoint c)</arglist>
    </member>
    <member kind="function">
      <type>Ar3DPoint</type>
      <name>operator*</name>
      <anchorfile>classAr3DPoint.html</anchorfile>
      <anchor>a1063eff601a4337a2733ffcd38b90e26</anchor>
      <arglist>(double c)</arglist>
    </member>
    <member kind="function">
      <type>Ar3DPoint</type>
      <name>operator+</name>
      <anchorfile>classAr3DPoint.html</anchorfile>
      <anchor>a66fc6b77ff106044a73b6a63dd55d981</anchor>
      <arglist>(Ar3DPoint c)</arglist>
    </member>
    <member kind="function">
      <type>Ar3DPoint</type>
      <name>operator-</name>
      <anchorfile>classAr3DPoint.html</anchorfile>
      <anchor>a6854e8551459c29746caa5a7b4d24771</anchor>
      <arglist>(Ar3DPoint c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classAr3DPoint.html</anchorfile>
      <anchor>a156b1646e591cdd746e824f94016c279</anchor>
      <arglist>(const char *head=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Ar3DPoint</name>
      <anchorfile>classAr3DPoint.html</anchorfile>
      <anchor>aac83bb65cce9871a88a13b799cde5d0b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArAction</name>
    <filename>classArAction.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a758f6d649620747c5fa743d4f7a8b53e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArAction</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a4341cda2464899c839e370b514af929b</anchor>
      <arglist>(const char *name, const char *description=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deactivate</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>aeca3135308234a8224643541090bea2b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArActionDesired *</type>
      <name>fire</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a900675ede8563489ccc2e7e0934670bb</anchor>
      <arglist>(ArActionDesired currentDesired)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ArArg *</type>
      <name>getArg</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>adf64e5031c86d059500b93f402aa70d9</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArArg *</type>
      <name>getArg</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a6620d41b1e490476796696e8a70e7544</anchor>
      <arglist>(int number)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getDescription</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a5a19edfe254b794aa2dddb163d095905</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionDesired *</type>
      <name>getDesired</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a384dabb573f3aa461def4691e7b24bd3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ArActionDesired *</type>
      <name>getDesired</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a82161955e57452fdb2a03288ff0cd1e8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getName</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a77fd754d342d7662090f462e27971e08</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumArgs</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a512f3a727095b1240f30558d32fe0f5b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArRobot *</type>
      <name>getRobot</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>ae62a517795a31625bf3a2bb2ea8abac0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isActive</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a72db278f558206fdec03cbc15ac72104</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>log</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a5e1aaaf9de9b50f7732043a3772f53d7</anchor>
      <arglist>(bool verbose=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRobot</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a51b27da0403d43cd916cbf49ba7ddc23</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArAction</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a05bc460d965589515a007f136a03d15a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getDefaultActivationState</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>aceff6f8ad785ab52a79c6d847ed0ea61</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDefaultActivationState</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a3543892f92fbbfa9bb3f9e0b0d199f51</anchor>
      <arglist>(bool defaultActivationState)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setNextArgument</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>ad6e1c757a5232752a9b05b18e8ef5091</anchor>
      <arglist>(ArArg const &amp;arg)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArAction.html</anchorfile>
      <anchor>a265851e04729e51a2a72d1ab4f1c5ed8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionAvoidFront</name>
    <filename>classArActionAvoidFront.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionAvoidFront</name>
      <anchorfile>classArActionAvoidFront.html</anchorfile>
      <anchor>a393fe8ff0e3044044d28ea30978632a6</anchor>
      <arglist>(const char *name=&quot;avoid front obstacles&quot;, double obstacleDistance=450, double avoidVelocity=200, double turnAmount=15, bool useTableIRIfAvail=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionAvoidFront</name>
      <anchorfile>classArActionAvoidFront.html</anchorfile>
      <anchor>a215840d8c6a7d34427a662862b50e864</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionAvoidSide</name>
    <filename>classArActionAvoidSide.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionAvoidSide</name>
      <anchorfile>classArActionAvoidSide.html</anchorfile>
      <anchor>aba7cc9b39a0d0f11cf206c7d9e4642f6</anchor>
      <arglist>(const char *name=&quot;Avoid side&quot;, double obstacleDistance=300, double turnAmount=5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionAvoidSide</name>
      <anchorfile>classArActionAvoidSide.html</anchorfile>
      <anchor>a1e06ad142ceed27316f9e0777affb508</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionBumpers</name>
    <filename>classArActionBumpers.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionBumpers</name>
      <anchorfile>classArActionBumpers.html</anchorfile>
      <anchor>a5fa0e63d37558d5b90c859272eb903f3</anchor>
      <arglist>(const char *name=&quot;bumpers&quot;, double backOffSpeed=100, int backOffTime=3000, int turnTime=3000, bool setMaximums=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionBumpers</name>
      <anchorfile>classArActionBumpers.html</anchorfile>
      <anchor>acc7233195c85033b671d88893fd31d07</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionColorFollow</name>
    <filename>classArActionColorFollow.html</filename>
    <base>ArAction</base>
  </compound>
  <compound kind="class">
    <name>ArActionConstantVelocity</name>
    <filename>classArActionConstantVelocity.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionConstantVelocity</name>
      <anchorfile>classArActionConstantVelocity.html</anchorfile>
      <anchor>ab379c34e0a03311db5699ecff798a10c</anchor>
      <arglist>(const char *name=&quot;Constant Velocity&quot;, double velocity=400)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionConstantVelocity</name>
      <anchorfile>classArActionConstantVelocity.html</anchorfile>
      <anchor>a00fabe72a4e8870c6e2bf151992634e0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionDeceleratingLimiter</name>
    <filename>classArActionDeceleratingLimiter.html</filename>
    <base>ArAction</base>
    <member kind="enumvalue">
      <name>BACKWARDS</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a9f56735c03f29b8944f971685679b585a079120e097fa9c79ad0de688a36bd544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORWARDS</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a9f56735c03f29b8944f971685679b585afa1c53c01bede226ecdd47286485204c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LATERAL_LEFT</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a9f56735c03f29b8944f971685679b585ab1c9f0a1dbf7f181b5c520a24faafff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LATERAL_RIGHT</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a9f56735c03f29b8944f971685679b585a35c67c52ca401fdb991cd58e54c0eaa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LimiterType</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a9f56735c03f29b8944f971685679b585</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORWARDS</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a9f56735c03f29b8944f971685679b585afa1c53c01bede226ecdd47286485204c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BACKWARDS</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a9f56735c03f29b8944f971685679b585a079120e097fa9c79ad0de688a36bd544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LATERAL_LEFT</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a9f56735c03f29b8944f971685679b585ab1c9f0a1dbf7f181b5c520a24faafff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LATERAL_RIGHT</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a9f56735c03f29b8944f971685679b585a35c67c52ca401fdb991cd58e54c0eaa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a6ba2d5dd80d9bb2f39ea2820399bbec4</anchor>
      <arglist>(ArConfig *config, const char *section, const char *prefix=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArActionDeceleratingLimiter</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a58ac6476c6348f0d94488f1d81e77b17</anchor>
      <arglist>(const char *name=&quot;limitAndDecel&quot;, LimiterType type=FORWARDS)</arglist>
    </member>
    <member kind="function">
      <type>LimiterType</type>
      <name>getType</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a232b186cd821f89e6087bd0a244e3727</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseLocationDependentDevices</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>af0e8a10b3f73faf6cfbb5ea9f4d772fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>af54fb416493f4eba5d55cb2bbb7d951a</anchor>
      <arglist>(double clearance=100, double sideClearanceAtSlowSpeed=50, double paddingAtSlowSpeed=50, double slowSpeed=200, double sideClearanceAtFastSpeed=400, double paddingAtFastSpeed=300, double fastSpeed=1000, double preferredDecel=600, bool useEStop=false, double maxEmergencyDecel=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a6d6f7167c0b915a9c37f4bcdda560bcc</anchor>
      <arglist>(LimiterType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseLocationDependentDevices</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>adec65a9108516ec2c762acae78687924</anchor>
      <arglist>(bool useLocationDependentDevices)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionDeceleratingLimiter</name>
      <anchorfile>classArActionDeceleratingLimiter.html</anchorfile>
      <anchor>a3f327e08a9c4075e932e7c85735298e9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionDesired</name>
    <filename>classArActionDesired.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accountForRobotHeading</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>aa086565d6eaecc78eea0db224ef7d9b4</anchor>
      <arglist>(double robotHeading)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addAverage</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a807d6f1c606a5107cdbfa86f4c9752f7</anchor>
      <arglist>(ArActionDesired *actDesired)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArActionDesired</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a0e834543254c059429776e00cb0bb6f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endAverage</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>adb9c18300aadb55a24fccd27af7a1e6c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDeltaHeading</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a9d9d1a8d25226939a189970873974653</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDeltaHeadingStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a6d2ee11a27e4d8a2e5bff71b7b326870</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getHeading</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>ac2025f62c567d362bd0c507197a07854</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getHeadingStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>aa5febbdccbbdaf324ea2661866d8e083</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLatAccel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a96d77804937842556ea5b498c963e6f8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLatAccelSlowestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a8c4cf9071b1fbb363fa0c3876b2f9917</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLatAccelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a08179d07b4e533a87916e3cf813c40ad</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLatDecel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a487089f28628494b3b35cd6ef8214e32</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLatDecelFastestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a6a85d5366d20b901d7be49b240875db0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLatDecelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a7fef5aba63b7d51f4fa1555bb713e028</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLatVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>ac9714eb97703ed41bd99aba92302a8f0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLatVelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a82e76d292aa5683cafaf5ed519453afe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxLeftLatVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a20e3184ab551bf4147e5ae5a964b7885</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxLeftLatVelSlowestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a4a4aed22cd3d3cceeac02ca90f8b4a94</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxLeftLatVelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a12366c2323e8efec86af66737727223b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxNegVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a0a6724f5c39c3a0238c6d5830ab930e6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxNegVelSlowestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a5cc8e9b5570f44e3738fc08feb8a8482</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxNegVelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>abe503380a6d094161004bfdafaf476ce</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRightLatVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a7d233f24cd659c1143b993cf6d919268</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRightLatVelSlowestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a4e34c528fbf5c4fe298a82eef903b758</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRightLatVelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a18ed97ec90d19007e4f5ea0a4bc0ec17</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRotVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a9ee092e4a5283b0afedd1d9564712ce7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRotVelNeg</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a6a301d8cb85dd0ff40d95d08e02ac12b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRotVelNegSlowestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a71b65e3cdf979b7434956543a39f250d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRotVelNegStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>ac336200d0decef1ff482648c98910c9d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRotVelPos</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a855c9b9a6e06a0ffd32f287b362f3893</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRotVelPosSlowestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>adc9e78695dd3c690e9af1ac116bd8e9f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRotVelPosStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>ab6ab9583570e600b50041106028aa147</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRotVelSlowestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>ab3e250aa228634a8ceb6876a1d6fa21b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxRotVelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a035221fbf91f8147de302719516bd39a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>abdc1b155b1ebe4c34289df0cfd48fc5a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxVelSlowestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>aba8a8cb9519212487587c613edbad0c5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxVelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a3fb105812928de6dadd6a337a5f87570</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRotAccel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a0c742e33ae45855929fccf0ccfb8e969</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRotAccelSlowestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a3591f6a6551971596cb0387136cead17</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRotAccelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a115bebef24de50a9df4aa133c354990e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRotDecel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a840d84d8265d9261b99e02dae1be5aec</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRotDecelFastestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a7b8785e5f0b0777b2c987208b676f213</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRotDecelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>ad5a92ff6fa8c0361412c29920f81b1b3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRotVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>adf2a73b1be20caf341b8a42fb869f24e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRotVelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a2187f4663a6787e397bf55c3cd3631f3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTransAccel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>af49797f619b3a3adf74257c69978ad09</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTransAccelSlowestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>afddae849278950778c28d61137d2046b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTransAccelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>aebdee1ed60ff85ee945b9f8d0792ec46</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTransDecel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>aafd31fc14f901c8eafe8aa662e478edc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTransDecelFastestUsed</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a3d4898dbf51c92563b19e55020482d81</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTransDecelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a3e916c53f0431201622d9eb8d228aaa5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a9e8f96740132541a2529daf23bf892f4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getVelStrength</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a2ed0d7e66af6949ff81c6ef475511264</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAnythingDesired</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a7af45f55f701efbf67a7b4b69b0a31ce</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>log</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>ad7632f5e059444661b1b5a161cbfa346</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>merge</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a3d7d5e7a28582b1d7f64e7e95631374b</anchor>
      <arglist>(ArActionDesired *actDesired)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>ade8f095f408b4ed5e638bb4a72ad070b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sanityCheck</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>ac5115c0fd42ffa52dd83ad1c3a2fc6b8</anchor>
      <arglist>(const char *actionName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDeltaHeading</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>aa61902c9c5835a8757dd8f2c41978b19</anchor>
      <arglist>(double deltaHeading, double strength=MAX_STRENGTH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHeading</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a85f311a6d30abaae6f588bcfc039c5b3</anchor>
      <arglist>(double heading, double strength=MAX_STRENGTH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLatAccel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a55823864115b7b3b311720e18273ff2c</anchor>
      <arglist>(double latAccel, double strength=MAX_STRENGTH, bool useSlowest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLatDecel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a0f9e98fa3cf2b755171a93362f5f7bec</anchor>
      <arglist>(double latDecel, double strength=MAX_STRENGTH, bool useFastest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLeftLatVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a4fcf03668f161e679cfecdce652c428c</anchor>
      <arglist>(double latVel, double strength=MAX_STRENGTH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxLeftLatVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a17a9df7cb8d6552e96713096095fc573</anchor>
      <arglist>(double maxVel, double strength=MAX_STRENGTH, bool useSlowest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxNegVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a248cf3dfd1aa49b821c0f1ea7a23d1db</anchor>
      <arglist>(double maxVel, double strength=MAX_STRENGTH, bool useSlowest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxRightLatVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>af73b6723019969ddb84773de37ac7cf7</anchor>
      <arglist>(double maxVel, double strength=MAX_STRENGTH, bool useSlowest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxRotVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>acb13a7b648d4c549dcf03a91a7e9bca6</anchor>
      <arglist>(double maxVel, double strength=MAX_STRENGTH, bool useSlowest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxRotVelNeg</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>ad8bb8ed098c00643bd3b5848d70aa89e</anchor>
      <arglist>(double maxVel, double strength=MAX_STRENGTH, bool useSlowest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxRotVelPos</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>ad7c39b219f2b88e49b2e352be4fb8154</anchor>
      <arglist>(double maxVel, double strength=MAX_STRENGTH, bool useSlowest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a4e8ddd5f5aeef35bd297708c5832d528</anchor>
      <arglist>(double maxVel, double strength=MAX_STRENGTH, bool useSlowest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRightLatVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a3608f3a081c15f005ec8eb2ea20f9376</anchor>
      <arglist>(double latVel, double strength=MAX_STRENGTH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRotAccel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a88529940886f3506fba3db9b20d07fb8</anchor>
      <arglist>(double rotAccel, double strength=MAX_STRENGTH, bool useSlowest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRotDecel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a9375e2cccf009a78bbc8346d14477b14</anchor>
      <arglist>(double rotDecel, double strength=MAX_STRENGTH, bool useFastest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRotVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a5d05268afb57ee157a86c7fec419bdb4</anchor>
      <arglist>(double rotVel, double strength=MAX_STRENGTH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransAccel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>aa4436dc6e6ec3c6726cb3d1d7c652066</anchor>
      <arglist>(double transAccel, double strength=MAX_STRENGTH, bool useSlowest=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransDecel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a96334ed40349bf1362f3842e4aae58da</anchor>
      <arglist>(double transDecel, double strength=MAX_STRENGTH, bool useFastestDecel=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVel</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a4c21aa3360c1e549d3d73df017ec68c7</anchor>
      <arglist>(double vel, double strength=MAX_STRENGTH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startAverage</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>abe6f6ebad5228a6570b9b60f8e8a0e46</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionDesired</name>
      <anchorfile>classArActionDesired.html</anchorfile>
      <anchor>a1ef41ee44ba6366c9a18db44362c0dfe</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionDesiredChannel</name>
    <filename>classArActionDesiredChannel.html</filename>
    <member kind="function">
      <type>void</type>
      <name>checkLowerBound</name>
      <anchorfile>classArActionDesiredChannel.html</anchorfile>
      <anchor>aab560843bc71a6435760a626a159822c</anchor>
      <arglist>(const char *actionName, const char *typeName, int lowerBound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkUpperBound</name>
      <anchorfile>classArActionDesiredChannel.html</anchorfile>
      <anchor>a91fa84aac9b1f1063b2499a2bf7f18a4</anchor>
      <arglist>(const char *actionName, const char *typeName, int upperBound)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionDriveDistance</name>
    <filename>classArActionDriveDistance.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type>void</type>
      <name>cancelDistance</name>
      <anchorfile>classArActionDriveDistance.html</anchorfile>
      <anchor>adbc94dab9bd3c0ba42f07b572bf6b173</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDeceleration</name>
      <anchorfile>classArActionDriveDistance.html</anchorfile>
      <anchor>a59b99e1003426ba1dcb6bf37af9bf999</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpeed</name>
      <anchorfile>classArActionDriveDistance.html</anchorfile>
      <anchor>a9348d500659523fd7d06785ccd25e727</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveAchievedDistance</name>
      <anchorfile>classArActionDriveDistance.html</anchorfile>
      <anchor>ae3b8b88401699bc2fcc668207bee7749</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeceleration</name>
      <anchorfile>classArActionDriveDistance.html</anchorfile>
      <anchor>a4d92618d2ed563d5b340b8ad654466f1</anchor>
      <arglist>(double deceleration=200)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistance</name>
      <anchorfile>classArActionDriveDistance.html</anchorfile>
      <anchor>ad5a679feebfe17f8b9601557704ac23e</anchor>
      <arglist>(double distance, bool useEncoders=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrinting</name>
      <anchorfile>classArActionDriveDistance.html</anchorfile>
      <anchor>a9a081b6d9ac1a8f6e1b31f3140b1beec</anchor>
      <arglist>(bool printing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeed</name>
      <anchorfile>classArActionDriveDistance.html</anchorfile>
      <anchor>a4856971d3c4e655164f56e69f410c28a</anchor>
      <arglist>(double speed=400)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usingEncoders</name>
      <anchorfile>classArActionDriveDistance.html</anchorfile>
      <anchor>aaa50f3c11633c7034fa3c3caaa9ee492</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionGoto</name>
    <filename>classArActionGoto.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type>void</type>
      <name>cancelGoal</name>
      <anchorfile>classArActionGoto.html</anchorfile>
      <anchor>ad45b33599e54febc0747cf1bc297d13f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionDesired *</type>
      <name>fire</name>
      <anchorfile>classArActionGoto.html</anchorfile>
      <anchor>a837a2f07dac56e996bca506e0b9bfe5c</anchor>
      <arglist>(ArActionDesired currentDesired)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCloseDist</name>
      <anchorfile>classArActionGoto.html</anchorfile>
      <anchor>ada4d595bdc5098cdf0f05dcd7cbcd75e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionDesired *</type>
      <name>getDesired</name>
      <anchorfile>classArActionGoto.html</anchorfile>
      <anchor>a82225f8a145636eee8541e36cba8d72b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getGoal</name>
      <anchorfile>classArActionGoto.html</anchorfile>
      <anchor>aa9e29645f95df07e0ceec4bb41a5bcd3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpeed</name>
      <anchorfile>classArActionGoto.html</anchorfile>
      <anchor>a4e693417edf04c526ac8eb66e9dbf187</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveAchievedGoal</name>
      <anchorfile>classArActionGoto.html</anchorfile>
      <anchor>a76321cb23733d0a7f324eeb0d52c4f11</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCloseDist</name>
      <anchorfile>classArActionGoto.html</anchorfile>
      <anchor>a2e660006c6d4e02fb6b3bac03c76c81c</anchor>
      <arglist>(double closeDist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGoal</name>
      <anchorfile>classArActionGoto.html</anchorfile>
      <anchor>a3f955f164e6592fa13124f39292be2b8</anchor>
      <arglist>(ArPose goal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeed</name>
      <anchorfile>classArActionGoto.html</anchorfile>
      <anchor>ab12b85e0c6e770b7b44fa689b4e80418</anchor>
      <arglist>(double speed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionGotoStraight</name>
    <filename>classArActionGotoStraight.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type>void</type>
      <name>cancelGoal</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>a660426998612c5e9219c55e5429d7f2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBacking</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>a6bed5a5e1ab26fec90873090229f0d1a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCloseDist</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>a6a4bd3c304e87daaa74e71fbb9a660d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getEncoderGoal</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>a30b86c00bef60445c8222bacba3ddfc7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getGoal</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>a1b5285ccf2a2ce6878d742c2c146b4e8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpeed</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>ad36a1076a9392ce1d0cdbf8c98764512</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveAchievedGoal</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>a6bd583eb347714097d7cf9a56cbaadeb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCloseDist</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>a0cae9a8506c5916fdbbe56383a1b4f17</anchor>
      <arglist>(double closeDist=100)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEncoderGoal</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>a7063598fcfd3a6321f90dbd2b140f3aa</anchor>
      <arglist>(ArPose encoderGoal, bool backwards=false, bool justDistance=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEncoderGoalRel</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>a1877c924429811f6727f223d7d54335c</anchor>
      <arglist>(double dist, double deltaHeading, bool backwards=false, bool justDistance=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGoal</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>aaf5bf26c33ea8ac9817f0cede8987e48</anchor>
      <arglist>(ArPose goal, bool backwards=false, bool justDistance=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGoalRel</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>ad4b386dc0cde7d449e7d189099399f7c</anchor>
      <arglist>(double dist, double deltaHeading, bool backwards=false, bool justDistance=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeed</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>a2d1bff268dc209df35742a677cbaa947</anchor>
      <arglist>(double speed)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usingEncoderGoal</name>
      <anchorfile>classArActionGotoStraight.html</anchorfile>
      <anchor>a1feef75985ee3a37ed2c3f2b8e682e2c</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionGroup</name>
    <filename>classArActionGroup.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchorfile>classArActionGroup.html</anchorfile>
      <anchor>aec09612f0cb7b4d89a45c9f1f3055197</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activateExclusive</name>
      <anchorfile>classArActionGroup.html</anchorfile>
      <anchor>a94901a8d3aeb7a812c6f2fba86c31977</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addAction</name>
      <anchorfile>classArActionGroup.html</anchorfile>
      <anchor>a5f3d085b62be2261877f12ff711cab74</anchor>
      <arglist>(ArAction *action, int priority)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArActionGroup</name>
      <anchorfile>classArActionGroup.html</anchorfile>
      <anchor>a08b6e094e2fe56c26170370dbaa02326</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deactivate</name>
      <anchorfile>classArActionGroup.html</anchorfile>
      <anchor>a383cd886e43d9bdf5a6707f200b8f163</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteActions</name>
      <anchorfile>classArActionGroup.html</anchorfile>
      <anchor>a1e46d425848bf3fe66ca31527df16070</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; ArAction * &gt; *</type>
      <name>getActionList</name>
      <anchorfile>classArActionGroup.html</anchorfile>
      <anchor>a52e2aa803c5f0e5041bf4bd7a8f1ef94</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remAction</name>
      <anchorfile>classArActionGroup.html</anchorfile>
      <anchor>a14f824640c04a80f116d82e2ea91671c</anchor>
      <arglist>(ArAction *action)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeActions</name>
      <anchorfile>classArActionGroup.html</anchorfile>
      <anchor>adffb026a63c594d1f620a03392d2c128</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionGroup</name>
      <anchorfile>classArActionGroup.html</anchorfile>
      <anchor>ad0585f15fe4b40a714000cba75665730</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionGroupColorFollow</name>
    <filename>classArActionGroupColorFollow.html</filename>
    <base>ArActionGroup</base>
  </compound>
  <compound kind="class">
    <name>ArActionGroupInput</name>
    <filename>classArActionGroupInput.html</filename>
    <base>ArActionGroup</base>
  </compound>
  <compound kind="class">
    <name>ArActionGroupRatioDrive</name>
    <filename>classArActionGroupRatioDrive.html</filename>
    <base>ArActionGroup</base>
  </compound>
  <compound kind="class">
    <name>ArActionGroupRatioDriveUnsafe</name>
    <filename>classArActionGroupRatioDriveUnsafe.html</filename>
    <base>ArActionGroup</base>
  </compound>
  <compound kind="class">
    <name>ArActionGroupStop</name>
    <filename>classArActionGroupStop.html</filename>
    <base>ArActionGroup</base>
  </compound>
  <compound kind="class">
    <name>ArActionGroupTeleop</name>
    <filename>classArActionGroupTeleop.html</filename>
    <base>ArActionGroup</base>
  </compound>
  <compound kind="class">
    <name>ArActionGroupUnguardedTeleop</name>
    <filename>classArActionGroupUnguardedTeleop.html</filename>
    <base>ArActionGroup</base>
  </compound>
  <compound kind="class">
    <name>ArActionGroupWander</name>
    <filename>classArActionGroupWander.html</filename>
    <base>ArActionGroup</base>
  </compound>
  <compound kind="class">
    <name>ArActionInput</name>
    <filename>classArActionInput.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionInput</name>
      <anchorfile>classArActionInput.html</anchorfile>
      <anchor>ae4e6c668c854e62b9fc1e718a1e00d20</anchor>
      <arglist>(const char *name=&quot;Input&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classArActionInput.html</anchorfile>
      <anchor>a752302f72209c9bcbed3f779679d960e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deltaHeadingFromCurrent</name>
      <anchorfile>classArActionInput.html</anchorfile>
      <anchor>aeb91fe3c39c67856db918ebe0abc7991</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeading</name>
      <anchorfile>classArActionInput.html</anchorfile>
      <anchor>a66152f8488e30e04c1c4f6bf0d7146c7</anchor>
      <arglist>(double heading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotVel</name>
      <anchorfile>classArActionInput.html</anchorfile>
      <anchor>a7218e6a9fd4b2f46a6b3788b315b72dd</anchor>
      <arglist>(double rotVel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVel</name>
      <anchorfile>classArActionInput.html</anchorfile>
      <anchor>a491baaa7e675b358188bb8fdf7b083b2</anchor>
      <arglist>(double vel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionInput</name>
      <anchorfile>classArActionInput.html</anchorfile>
      <anchor>a9a30bb98aa497b550084dc8b3f37b967</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionIRs</name>
    <filename>classArActionIRs.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionIRs</name>
      <anchorfile>classArActionIRs.html</anchorfile>
      <anchor>a9ba3075b7dd4669541341ef36566bd4c</anchor>
      <arglist>(const char *name=&quot;IRs&quot;, double backOffSpeed=100, int backOffTime=5000, int turnTime=3000, bool setMaximums=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionIRs</name>
      <anchorfile>classArActionIRs.html</anchorfile>
      <anchor>ab51b188d523c7efafd161450ba6781c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionJoydrive</name>
    <filename>classArActionJoydrive.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionJoydrive</name>
      <anchorfile>classArActionJoydrive.html</anchorfile>
      <anchor>a5796b4d6a3f260312e68982267beb8d4</anchor>
      <arglist>(const char *name=&quot;joydrive&quot;, double transVelMax=400, double turnAmountMax=15, bool stopIfNoButtonPressed=true, bool useOSCalForJoystick=true)</arglist>
    </member>
    <member kind="function">
      <type>ArJoyHandler *</type>
      <name>getJoyHandler</name>
      <anchorfile>classArActionJoydrive.html</anchorfile>
      <anchor>a9bfb87ceded10e06d0b34052ca692711</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getStopIfNoButtonPressed</name>
      <anchorfile>classArActionJoydrive.html</anchorfile>
      <anchor>ad054d118754418ced755b85489ac0b8c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseOSCal</name>
      <anchorfile>classArActionJoydrive.html</anchorfile>
      <anchor>afa9cc09bc39a110bd6375b1dbccb67ec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>joystickInited</name>
      <anchorfile>classArActionJoydrive.html</anchorfile>
      <anchor>aadc5a4816e3c69bb0c7b57f72bbadde5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeeds</name>
      <anchorfile>classArActionJoydrive.html</anchorfile>
      <anchor>a06811cc5f29954696410ce18fd645f85</anchor>
      <arglist>(double transVelMax, double turnAmountMax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStopIfNoButtonPressed</name>
      <anchorfile>classArActionJoydrive.html</anchorfile>
      <anchor>a2d2e8053a6a49487c5dbeadcbcc44556</anchor>
      <arglist>(bool stopIfNoButtonPressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThrottleParams</name>
      <anchorfile>classArActionJoydrive.html</anchorfile>
      <anchor>a9b07f959ebe2a6193c8c7f3aee98913f</anchor>
      <arglist>(double lowSpeed, double highSpeed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseOSCal</name>
      <anchorfile>classArActionJoydrive.html</anchorfile>
      <anchor>abde56674b5adc9d52ab1d0db362beb61</anchor>
      <arglist>(bool useOSCal)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionJoydrive</name>
      <anchorfile>classArActionJoydrive.html</anchorfile>
      <anchor>a41e613b087e51236aa736335e6aba356</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionKeydrive</name>
    <filename>classArActionKeydrive.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionKeydrive</name>
      <anchorfile>classArActionKeydrive.html</anchorfile>
      <anchor>afe859b10f54efc65cccd51fcdb51bcbf</anchor>
      <arglist>(const char *name=&quot;keydrive&quot;, double transVelMax=400, double turnAmountMax=24, double velIncrement=25, double turnIncrement=8)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>down</name>
      <anchorfile>classArActionKeydrive.html</anchorfile>
      <anchor>a5c7d67c6cee4aa6e3f70612f248f8f68</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>giveUpKeys</name>
      <anchorfile>classArActionKeydrive.html</anchorfile>
      <anchor>af491b64c40bb7c5890c8f59cb7e30c42</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>left</name>
      <anchorfile>classArActionKeydrive.html</anchorfile>
      <anchor>ae53fe68ce086359c0a82a4f6c2f8f29f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>right</name>
      <anchorfile>classArActionKeydrive.html</anchorfile>
      <anchor>a9248222467e61098f5870421bb87a3a1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIncrements</name>
      <anchorfile>classArActionKeydrive.html</anchorfile>
      <anchor>aebf44fbec331b5830ad03611c7c312a7</anchor>
      <arglist>(double velIncrement, double turnIncrement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeeds</name>
      <anchorfile>classArActionKeydrive.html</anchorfile>
      <anchor>a360203c5de8ab6a058f088dc79068101</anchor>
      <arglist>(double transVelMax, double turnAmountMax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>space</name>
      <anchorfile>classArActionKeydrive.html</anchorfile>
      <anchor>aae411002272ac25f98e3468878f9f24e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>takeKeys</name>
      <anchorfile>classArActionKeydrive.html</anchorfile>
      <anchor>aad4f8c4f77971c18c08122cfb4c93955</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>up</name>
      <anchorfile>classArActionKeydrive.html</anchorfile>
      <anchor>aced8bb2f567c66ee86f1b39601cbd0a3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionKeydrive</name>
      <anchorfile>classArActionKeydrive.html</anchorfile>
      <anchor>a602e873cbed267423ad561226c971623</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionLimiterBackwards</name>
    <filename>classArActionLimiterBackwards.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionLimiterBackwards</name>
      <anchorfile>classArActionLimiterBackwards.html</anchorfile>
      <anchor>a98f9f74231b804b7772e39734e8c0266</anchor>
      <arglist>(const char *name=&quot;speed limiter&quot;, double stopDistance=-250, double slowDistance=-600, double maxBackwardsSpeed=-250, double widthRatio=1.5, bool avoidLocationDependentObstacles=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionLimiterBackwards</name>
      <anchorfile>classArActionLimiterBackwards.html</anchorfile>
      <anchor>a826b28bd0e722d81f2105aa02181f97c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionLimiterForwards</name>
    <filename>classArActionLimiterForwards.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionLimiterForwards</name>
      <anchorfile>classArActionLimiterForwards.html</anchorfile>
      <anchor>a50e8362751c562ec41493b0f3ebabb3f</anchor>
      <arglist>(const char *name=&quot;speed limiter&quot;, double stopDistance=250, double slowDistance=1000, double slowSpeed=200, double widthRatio=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classArActionLimiterForwards.html</anchorfile>
      <anchor>a0075b494a6435fa3f19f047967977ff7</anchor>
      <arglist>(double stopDistance=250, double slowDistance=1000, double slowSpeed=200, double widthRatio=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionLimiterForwards</name>
      <anchorfile>classArActionLimiterForwards.html</anchorfile>
      <anchor>a4a064b964902b0e9101975a79e04c340</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionLimiterRot</name>
    <filename>classArActionLimiterRot.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArActionLimiterRot.html</anchorfile>
      <anchor>a87fe6a8d24e55e0b9681d09a06bf2f2a</anchor>
      <arglist>(ArConfig *config, const char *section, const char *prefix=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArActionLimiterRot</name>
      <anchorfile>classArActionLimiterRot.html</anchorfile>
      <anchor>a417c69dd87b6250ca59aa300aaf1b73c</anchor>
      <arglist>(const char *name=&quot;limitRot&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseLocationDependentDevices</name>
      <anchorfile>classArActionLimiterRot.html</anchorfile>
      <anchor>a5bebf16636d31c296d16552b053841bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classArActionLimiterRot.html</anchorfile>
      <anchor>a2edc6617f5f018bb59f72b9898f672c7</anchor>
      <arglist>(bool checkRadius=false, double inRadiusSpeed=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseLocationDependentDevices</name>
      <anchorfile>classArActionLimiterRot.html</anchorfile>
      <anchor>a228a08778a9bd66b866bcbc0886e081e</anchor>
      <arglist>(bool useLocationDependentDevices)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionLimiterRot</name>
      <anchorfile>classArActionLimiterRot.html</anchorfile>
      <anchor>aae81ad6f7c65f16bd229208adb3c6fad</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionLimiterTableSensor</name>
    <filename>classArActionLimiterTableSensor.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionLimiterTableSensor</name>
      <anchorfile>classArActionLimiterTableSensor.html</anchorfile>
      <anchor>a5fb471ea606a54478e64012d774ee3bf</anchor>
      <arglist>(const char *name=&quot;TableSensorLimiter&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionLimiterTableSensor</name>
      <anchorfile>classArActionLimiterTableSensor.html</anchorfile>
      <anchor>af98ee0170ce2365f8bb9481311e57f3a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionMovementParameters</name>
    <filename>classArActionMovementParameters.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArActionMovementParameters.html</anchorfile>
      <anchor>a00a8175023e3de11e9a4367d0b729227</anchor>
      <arglist>(ArConfig *config, const char *section, const char *prefix=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArActionMovementParameters</name>
      <anchorfile>classArActionMovementParameters.html</anchorfile>
      <anchor>ad2ae0e2ca1820229ecb25dfcaec1dbd6</anchor>
      <arglist>(const char *name=&quot;MovementParameters&quot;, bool overrideFaster=true, bool addLatVelIfAvailable=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classArActionMovementParameters.html</anchorfile>
      <anchor>a577e8ee521b88d7171bb1abf8d1c1622</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classArActionMovementParameters.html</anchorfile>
      <anchor>a913e684eed58058ef69e8e9edec9c33a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableOnceFromSector</name>
      <anchorfile>classArActionMovementParameters.html</anchorfile>
      <anchor>ae3257dd6d50b2d8d9b1348844e6a1e71</anchor>
      <arglist>(ArMapObject *mapObject)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classArActionMovementParameters.html</anchorfile>
      <anchor>ab6304b30cb5a1850f6bfcf7d84c79e0c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classArActionMovementParameters.html</anchorfile>
      <anchor>ae32f8de32756a3d3ba5177f15814b912</anchor>
      <arglist>(double maxVel=0, double maxNegVel=0, double transAccel=0, double transDecel=0, double rotVelMax=0, double rotAccel=0, double rotDecel=0, double latVelMax=0, double latAccel=0, double latDecel=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionMovementParameters</name>
      <anchorfile>classArActionMovementParameters.html</anchorfile>
      <anchor>aefa1cd7a6142e5c54268102a2001fc3d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionMovementParametersDebugging</name>
    <filename>classArActionMovementParametersDebugging.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArActionMovementParametersDebugging.html</anchorfile>
      <anchor>ac1256987a1479e0f6bf5afa7ceefda4a</anchor>
      <arglist>(ArConfig *config, const char *section, const char *prefix=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArActionMovementParametersDebugging</name>
      <anchorfile>classArActionMovementParametersDebugging.html</anchorfile>
      <anchor>a14d9bbf3149cf118386d1aea92360304</anchor>
      <arglist>(const char *name=&quot;MovementParametersDebugging&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classArActionMovementParametersDebugging.html</anchorfile>
      <anchor>a62be2122fc0f32ea324aa59183a0dc1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classArActionMovementParametersDebugging.html</anchorfile>
      <anchor>a47da389946a1479be2d951960fe33713</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableOnceFromSector</name>
      <anchorfile>classArActionMovementParametersDebugging.html</anchorfile>
      <anchor>a890dcdbf9c753eb39cd6dda5516d498d</anchor>
      <arglist>(ArMapObject *mapObject)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classArActionMovementParametersDebugging.html</anchorfile>
      <anchor>a9358b161ccb738174a242e356189c107</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionMovementParametersDebugging</name>
      <anchorfile>classArActionMovementParametersDebugging.html</anchorfile>
      <anchor>ad5b4365a2806fccda56c3915dfc30a6b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionRatioInput</name>
    <filename>classArActionRatioInput.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type>void</type>
      <name>addActivateCallback</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>ac0625d1c138483d1765f956a8f62cb18</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDeactivateCallback</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>ad9ac799d916d5f34418408d261105340</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFireCallback</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>a3067568cfba7f17e62380a84e0a122b7</anchor>
      <arglist>(int priority, ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>a9a84ada69d5cdf2cf8f9b6e430a03fd4</anchor>
      <arglist>(ArConfig *config, const char *section)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArActionRatioInput</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>a49ab4d91580689bd9d319f8e15cc738c</anchor>
      <arglist>(const char *name=&quot;RatioInput&quot;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRotRatio</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>ab8d9b67b44c6dc5a51cec8602a2fd177</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getThrottleRatio</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>af8bf61587794dcc9a2812488d08e56e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTransRatio</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>a9854412b952421590c06526024a7176c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remActivateCallback</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>a87cfbb34c2700f0f5667319ae4974cc5</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDeactivateCallback</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>aa558177797e8db883b6217dba6b916ff</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remFireCallback</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>a7fc87f5bc5017df35173041df3e3325e</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatRatio</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>ad6bf656b11a38b48404eff0347d4bd64</anchor>
      <arglist>(double latRatio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>a0d32d2e1a0342367365755d57946a74c</anchor>
      <arglist>(double fullThrottleForwards, double fullThrottleBackwards, double rotAtFullForwards, double rotAtFullBackwards, double rotAtStopped, double latAtFullForwards=0, double latAtFullBackwards=0, double latAtStopped=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRatios</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>ac046fae8264b429a4f29fd6f28e772f8</anchor>
      <arglist>(double transRatio, double rotRatio, double throttleRatio, double latRatio=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotRatio</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>a7eb50f3995111925e616894c2cf2477b</anchor>
      <arglist>(double rotRatio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThrottleRatio</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>a4dba0ad9a21a28211750fc4e055619dc</anchor>
      <arglist>(double throttleRatio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransRatio</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>adc9ebadb3a800c45742575a772780b51</anchor>
      <arglist>(double transRatio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionRatioInput</name>
      <anchorfile>classArActionRatioInput.html</anchorfile>
      <anchor>accfca20902a0f332c28e355254ee63fb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionRobotJoydrive</name>
    <filename>classArActionRobotJoydrive.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionRobotJoydrive</name>
      <anchorfile>classArActionRobotJoydrive.html</anchorfile>
      <anchor>ab7dd0afb57e6b38a56aed1aed54c8216</anchor>
      <arglist>(const char *name=&quot;robotJoyDrive&quot;, bool requireDeadmanPushed=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionRobotJoydrive</name>
      <anchorfile>classArActionRobotJoydrive.html</anchorfile>
      <anchor>ae2a1d1b1e91edd46c7e3c00de0a385b6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionStallRecover</name>
    <filename>classArActionStallRecover.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionStallRecover</name>
      <anchorfile>classArActionStallRecover.html</anchorfile>
      <anchor>ad557c66045527426b193c433bfbe5215</anchor>
      <arglist>(const char *name=&quot;stall recover&quot;, double obstacleDistance=225, int cyclesToMove=50, double speed=150, double degreesToTurn=45, bool enabled=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionStallRecover</name>
      <anchorfile>classArActionStallRecover.html</anchorfile>
      <anchor>ab78548506683e33d86bcb567ff133993</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionStop</name>
    <filename>classArActionStop.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionStop</name>
      <anchorfile>classArActionStop.html</anchorfile>
      <anchor>aff58bdc19137c6065678cec0ae4efcbd</anchor>
      <arglist>(const char *name=&quot;stop&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionStop</name>
      <anchorfile>classArActionStop.html</anchorfile>
      <anchor>a32cbae599003601b3573880a7e84363a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionTriangleDriveTo</name>
    <filename>classArActionTriangleDriveTo.html</filename>
    <base>ArAction</base>
    <class kind="class">ArActionTriangleDriveTo::Data</class>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_INACTIVE</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a24bdb19b129f2a115e2c3903b388b536</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_ACQUIRE</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523ad31af38c43d69419090e6572a0cea757</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_SEARCHING</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a89e68ff809843d2d4c45b0590a80b40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_GOTO_APPROACH</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a81affe449fce9a2591cbf76060aee04c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_ALIGN_APPROACH</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a6d69f8dc43584477366b335426c3bef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_GOTO_VERTEX</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a7eb612668129caadf169231325691219</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_GOTO_FINAL</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523acfe8ebd3937a29a03442dfa529794502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_ALIGN_FINAL</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523aa72cbe81fd9d7b5bb8cea8aec50a3d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_SUCCEEDED</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a51396f591ce32b5bfef05152af1f9782</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FAILED</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523ad79b71c54d9dea63ac6d5783bdabeb2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_ACQUIRE</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523ad31af38c43d69419090e6572a0cea757</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_ALIGN_APPROACH</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a6d69f8dc43584477366b335426c3bef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_ALIGN_FINAL</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523aa72cbe81fd9d7b5bb8cea8aec50a3d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FAILED</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523ad79b71c54d9dea63ac6d5783bdabeb2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_GOTO_APPROACH</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a81affe449fce9a2591cbf76060aee04c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_GOTO_FINAL</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523acfe8ebd3937a29a03442dfa529794502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_GOTO_VERTEX</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a7eb612668129caadf169231325691219</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_INACTIVE</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a24bdb19b129f2a115e2c3903b388b536</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_SEARCHING</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a89e68ff809843d2d4c45b0590a80b40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_SUCCEEDED</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1d204c6d37ce38249793cd5407102523a51396f591ce32b5bfef05152af1f9782</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArActionTriangleDriveTo</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>ac123fd24efbab3df33a55cbe5f0ee279</anchor>
      <arglist>(const char *name=&quot;triangleDriveTo&quot;, double finalDistFromVertex=400, double approachDistFromVertex=1000, double speed=200, double closeDist=100, double acquireTurnSpeed=30)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAcquire</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>af8bca5171adca068b51f15b7523f2d59</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAdjustVertex</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a46ec3a10421362cae3caf69a4ffa0333</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Data *</type>
      <name>getData</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>ad57a8a308dd251836094ca70820c2413</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFinalDistFromVertex</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a05c11ffbdb569c31cc74b7105aa49e18</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getGotoVertex</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a6c8a336fb37fe00e4bf246a3924203e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIgnoreTriangleDist</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a1eceb21d3f0ad041ed9582c72f8281ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArLineFinder *</type>
      <name>getLineFinder</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a5d45add4822f293fa518a4db55293d1e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSaveData</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>af8372345e1e762e08b7a828b8c23ce4c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>getState</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a813ccec4337ca004a4f23d9fc2ebc911</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseIgnoreInGotoVertexMode</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>aa4394591c5a8d4c2785defbd23a870c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseLegacyVertexOffset</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a447cffcffc7df6e23d74c3285c4fcb08</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getVertexSeen</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>ad5c3650c7b75e28a7f1ac3f49573933a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getVertexUnseenStopMSecs</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>acc76b4012b10a1df2ed4ce5f5683f1b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcquire</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a58525f2680ec280dfe49ae352667c138</anchor>
      <arglist>(bool acquire=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAdjustVertex</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a6c9e9b76e983f859e4d210f7cdeb7c97</anchor>
      <arglist>(bool adjustVertex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFinalDistFromVertex</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>abc529ac734f43c5e10f25b4143461675</anchor>
      <arglist>(double dist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGotoVertex</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a56a778a38617a6d235c93834d80602ba</anchor>
      <arglist>(bool gotoVertex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreTriangleDist</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a636749d2060ee0d20cd284a59531aee2</anchor>
      <arglist>(double dist=250, bool useIgnoreInGotoVertexMode=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLineFinder</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>ae015f564f4139225786bd607cc2ecfdd</anchor>
      <arglist>(ArLineFinder *lineFinder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogging</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>acd461418e143bd6627aabc79111e3adc</anchor>
      <arglist>(bool logging)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setLogging</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a5421403bdd26881b879c20852370c041</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxAngleMisalignment</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>ab20911f041b16eecec41eb5225766de0</anchor>
      <arglist>(int maxAngleMisalignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxDistBetweenLinePoints</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>ae9d51b0c840d7faa320efd263ff19b1a</anchor>
      <arglist>(int maxDistBetweenLinePoints=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxLateralDist</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a08e59e9b2380c0895d7344ef530ef731</anchor>
      <arglist>(int maxLateralDist=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSaveData</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a23d6612e6f7609436ef41d532a9b0220</anchor>
      <arglist>(bool saveData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTriangleParams</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a45a2750de92a6b9d9fa415e64d3532d6</anchor>
      <arglist>(double line1Length=254, double angleBetween=135, double line2Length=254)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseLegacyVertexOffset</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>ac2f3479ce4c81707e439879193b79d7d</anchor>
      <arglist>(bool useLegacyVertexOffset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertexOffset</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>abbf1a6c65201457e47a7bc7329c4c69b</anchor>
      <arglist>(int localXOffset, int localYOffset, double thOffset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertexUnseenStopMSecs</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>abf651bd0149476e2370e4f933a33c5f1</anchor>
      <arglist>(int vertexUnseenStopMSecs=4000)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionTriangleDriveTo</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a918393a196ca1395951579b8ef2abf08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>findTriangle</name>
      <anchorfile>classArActionTriangleDriveTo.html</anchorfile>
      <anchor>a43188c1bb0883ed472866bdfddb6da1e</anchor>
      <arglist>(bool initial, bool goStraight=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionTurn</name>
    <filename>classArActionTurn.html</filename>
    <base>ArAction</base>
    <member kind="function">
      <type></type>
      <name>ArActionTurn</name>
      <anchorfile>classArActionTurn.html</anchorfile>
      <anchor>addbeb3b17436595fbc1250df513b6846</anchor>
      <arglist>(const char *name=&quot;turn&quot;, double speedStartTurn=200, double speedFullTurn=100, double turnAmount=15)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArActionTurn</name>
      <anchorfile>classArActionTurn.html</anchorfile>
      <anchor>afe8f960da39368f27765c0f0751d9642</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArACTS_1_2</name>
    <filename>classArACTS__1__2.html</filename>
    <member kind="enumvalue">
      <name>ACTS_BLOB_DATA_SIZE</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>abd29db5baf1b65fcb73019f664adc996a86786afa4bc66d8c7088303e553a2326</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ActsConstants</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>abd29db5baf1b65fcb73019f664adc996</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_CHANNELS</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>abd29db5baf1b65fcb73019f664adc996a75ffa2bd0d4e4952f00f77c5ed3ea4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_BLOBS</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>abd29db5baf1b65fcb73019f664adc996af6c99b75ad05914e005c5db93a732fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTS_BLOB_DATA_SIZE</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>abd29db5baf1b65fcb73019f664adc996a86786afa4bc66d8c7088303e553a2326</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATA_HEADER</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>abd29db5baf1b65fcb73019f664adc996abd8907130fc2d622144308c5ac63cca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_DATA</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>abd29db5baf1b65fcb73019f664adc996ab75ade71bd424503d225793229f90d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATA_HEADER</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>abd29db5baf1b65fcb73019f664adc996abd8907130fc2d622144308c5ac63cca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_BLOBS</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>abd29db5baf1b65fcb73019f664adc996af6c99b75ad05914e005c5db93a732fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_DATA</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>abd29db5baf1b65fcb73019f664adc996ab75ade71bd424503d225793229f90d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_CHANNELS</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>abd29db5baf1b65fcb73019f664adc996a75ffa2bd0d4e4952f00f77c5ed3ea4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>actsHandler</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>aef210abbea4beab6a6d623785a01470a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArACTS_1_2</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>a911e0790deeebecd0230d4897ce358d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closePort</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>aaeca4faf0f1f1a8afd7983adf58c425b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBlob</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>a57395fd33f712b59165ff7b197f4c870</anchor>
      <arglist>(int channel, int blobNumber, ArACTSBlob *blob)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumBlobs</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>af1ca25fb989c8eb337d0e73c85ce002c</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>ArRobot *</type>
      <name>getRobot</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>a6963b481dfc92c0cfcb782f7ac2a2699</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invert</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>a63ef80618c3185c1e0f7cb7ab1ab257c</anchor>
      <arglist>(int width=160, int height=120)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>aa596d9a4b51f0be9240bdf80221ce938</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openPort</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>a5ce088ec894e3154910f0e5149668f80</anchor>
      <arglist>(ArRobot *robot, const char *host=&quot;localhost&quot;, int port=5001)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>receiveBlobInfo</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>a0d5b6646adeb993c29eb2c488bcfcf6f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestPacket</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>a19619869795236e1515433d68b109e27</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestQuit</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>a1062eabaf1a1bd382367571cfbbe1ac4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRobot</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>a9334d60577679960fb386815d5010f25</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArACTS_1_2</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>aa64837c7954303ee48bf10218800d9cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getData</name>
      <anchorfile>classArACTS__1__2.html</anchorfile>
      <anchor>ad3613546d721bfa9349410b9dbbbd91a</anchor>
      <arglist>(char *rawData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArACTSBlob</name>
    <filename>classArACTSBlob.html</filename>
    <member kind="function">
      <type></type>
      <name>ArACTSBlob</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a302e482bfbef0b769cc6055a7556bfd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getArea</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>ae93d582aad025b14cb07da1c8f6fc254</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBottom</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a8d202877d450de1d25770800601afad1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLeft</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a881c863440e9d83fcd968049a5b223f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRight</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a13f23085c9b0c0ae78f51cd08a5cb661</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTop</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a4d5ed62db566ff9086c0e30dbfed89e2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getXCG</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a5f6eb283420c455186090bd339c63289</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getYCG</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a713ba6721a03e97d7722db58c729e817</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a35d5b404396d5e2ca1fdc115c3474920</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArea</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>aa65217b03d86a49b9101e77d88089247</anchor>
      <arglist>(int area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a667d3e2023a5ceb0c8c4583e90d2b7f0</anchor>
      <arglist>(int bottom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeft</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a9a09032a5f080a1c9d9f1a8955a88436</anchor>
      <arglist>(int left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRight</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a4ec2416ef0809de49e2ae034f0b7d1d6</anchor>
      <arglist>(int right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a5cf7d36814349cd89fe55f97c3448b6f</anchor>
      <arglist>(int top)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXCG</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a456cb51b853d08a57433df67314be404</anchor>
      <arglist>(int xcg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYCG</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>a9ecec1db31525641f495cc3b7b7aa4b4</anchor>
      <arglist>(int ycg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArACTSBlob</name>
      <anchorfile>classArACTSBlob.html</anchorfile>
      <anchor>ab385b40fcc6f79baf42e0382be310809</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArAMPTU</name>
    <filename>classArAMPTU.html</filename>
    <base>ArPTZ</base>
    <member kind="function">
      <type></type>
      <name>ArAMPTU</name>
      <anchorfile>classArAMPTU.html</anchorfile>
      <anchor>acfb99f61d4bac54bc713792e4faebf9f</anchor>
      <arglist>(ArRobot *robot, int unitNumber=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPan_i</name>
      <anchorfile>classArAMPTU.html</anchorfile>
      <anchor>a200e04efdc4c9352cb0ba14c74e505c3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTilt_i</name>
      <anchorfile>classArAMPTU.html</anchorfile>
      <anchor>ab1b36fde16e241006c9aa22d1b661aea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>panSlew</name>
      <anchorfile>classArAMPTU.html</anchorfile>
      <anchor>ab712511099e4da101db7be62c0f0708a</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pause</name>
      <anchorfile>classArAMPTU.html</anchorfile>
      <anchor>ac4e49a2d54410e829873b194650a1ea4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>purge</name>
      <anchorfile>classArAMPTU.html</anchorfile>
      <anchor>a4449466e5979ec94d31c48874191f40f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestStatus</name>
      <anchorfile>classArAMPTU.html</anchorfile>
      <anchor>a7d8be1c8c9aca9ce25f05c21fa0468f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resume</name>
      <anchorfile>classArAMPTU.html</anchorfile>
      <anchor>a53070848582dae90da2b3a339263aca5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tiltSlew</name>
      <anchorfile>classArAMPTU.html</anchorfile>
      <anchor>a6486bb79c5459a6887e9c0fc766997a1</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArAMPTU</name>
      <anchorfile>classArAMPTU.html</anchorfile>
      <anchor>a10495344bb45fd2212a49440c87a1701</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArAMPTUCommands</name>
    <filename>classArAMPTUCommands.html</filename>
    <member kind="enumvalue">
      <name>ABSTILT</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a211ed23296e28a57cdf03c65283e79d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELTILTU</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a5cbdcc1bbc030dec079d7baf0130adf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELTILTD</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a52851a9795edf2492ab1c2c48387a840</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSPAN</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794ab3ea25c9044fe28593ab1d209d18cc1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELPANCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a09341a2aa46e5f35a79ad9f3cdb831bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELPANCCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a6a743ab0e84a80a88cba95811bc2c215</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILT</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794ae6a73371fbf14d0a3576fb6a0f7c311d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILTUCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a5729493ced372162a30a75b1950288ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILTDCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a9ce266029665156540b90d992ffb139b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILTUCCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794afa6d3fe1d40d2949b75aa4de84d5fbe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILTDCCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794af9a58aa472304b15973fa0d0f80b6678</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZOOM</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794aaa18a51898fd46d61800acdadcfe76cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAUSE</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a8d01cb851ca3ade4d198985ffe509e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONT</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794abd83546cefd986267b168a340660aa96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PURGE</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a1ba26cae18f1175ca0b502c95a97f95e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a5f5ccc93d1318c19f784fef55a4a6906</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INIT</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a3330c8fb1fe7b38d302da9cce02e25dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESP</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a3fab499aa38b2ac9d7f25059ee2cfca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANSLEW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a6e6e41f93033e7423e61515cf41f8d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TILTSLEW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a01943fd95485c1bbbf89897eadfd57a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSPAN</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794ab3ea25c9044fe28593ab1d209d18cc1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTILT</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a211ed23296e28a57cdf03c65283e79d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONT</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794abd83546cefd986267b168a340660aa96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INIT</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a3330c8fb1fe7b38d302da9cce02e25dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANSLEW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a6e6e41f93033e7423e61515cf41f8d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILT</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794ae6a73371fbf14d0a3576fb6a0f7c311d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILTDCCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794af9a58aa472304b15973fa0d0f80b6678</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILTDCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a9ce266029665156540b90d992ffb139b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILTUCCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794afa6d3fe1d40d2949b75aa4de84d5fbe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILTUCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a5729493ced372162a30a75b1950288ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAUSE</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a8d01cb851ca3ade4d198985ffe509e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PURGE</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a1ba26cae18f1175ca0b502c95a97f95e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELPANCCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a6a743ab0e84a80a88cba95811bc2c215</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELPANCW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a09341a2aa46e5f35a79ad9f3cdb831bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELTILTD</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a52851a9795edf2492ab1c2c48387a840</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELTILTU</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a5cbdcc1bbc030dec079d7baf0130adf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESP</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a3fab499aa38b2ac9d7f25059ee2cfca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a5f5ccc93d1318c19f784fef55a4a6906</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TILTSLEW</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794a01943fd95485c1bbbf89897eadfd57a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZOOM</name>
      <anchorfile>classArAMPTUCommands.html</anchorfile>
      <anchor>a5b786cb37fc7a3d9f244de9728b7f794aaa18a51898fd46d61800acdadcfe76cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArAMPTUPacket</name>
    <filename>classArAMPTUPacket.html</filename>
    <base>ArBasePacket</base>
    <member kind="function">
      <type></type>
      <name>ArAMPTUPacket</name>
      <anchorfile>classArAMPTUPacket.html</anchorfile>
      <anchor>af296c432b064776437c39628b60977c5</anchor>
      <arglist>(ArTypes::UByte2 bufferSize=30)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getUnitNumber</name>
      <anchorfile>classArAMPTUPacket.html</anchorfile>
      <anchor>a10374267660b2ec16907f893c5013712</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setUnitNumber</name>
      <anchorfile>classArAMPTUPacket.html</anchorfile>
      <anchor>a8cb4960cd8a443f9f62d2feb25521fe8</anchor>
      <arglist>(unsigned char unitNumber)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArAMPTUPacket</name>
      <anchorfile>classArAMPTUPacket.html</anchorfile>
      <anchor>add9d55fb93bd109b7e0764d1d6b8f452</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArAnalogGyro</name>
    <filename>classArAnalogGyro.html</filename>
    <member kind="function">
      <type>void</type>
      <name>activate</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a348f63883ab1ea70b09ef64c1b6a7346</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activateGyroOnly</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a181a493d95d37309d3618cab02ea863c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArAnalogGyro</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>afcb9db5ed1efd9206d0574c30c44fd75</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deactivate</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a952a03f5014a7df96bf26affeb5bcbde</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>encoderCorrect</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>ab34c3db403e16d49a670aae37e263600</anchor>
      <arglist>(ArPoseWithTime deltaPose)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAverage</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a8b2789ea6b66d06a23a39a6ed6d8318d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getAverageTaken</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>aa6b554cbebb933a4ac40d994d79e33fc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getHeading</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a09b59b5296ee7a23a13ccc708924fe55</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPacCount</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>ad70f6c7696a987ef7cf61f191d5683d3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getScalingFactor</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a78a487966ec9c1b29ac64411179b8b33</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTemperature</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>aef6791135cfab49f24ebd05bf39a4775</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleGyroPacket</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a8690af8a89ed3a7c10dd1a85d6631ea2</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGyroOnlyMode</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>af2be799c353c1dfc70a300506513a5c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNoInternalData</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a787910e4d8d9f0d4da8bb0d9dbdca3d8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveGottenData</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>ae1b9bf579a6c3c93fb14a1993221515f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>aa52421c328826c1bffe9a2dac22c189c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGyroOnlyActive</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a592159b97420b2a3734aaa2678c7d191</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterModel</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>adf79bb9ba052a50318737c5346f6ea1a</anchor>
      <arglist>(double gyroSigma, double inertialVar, double rotVar, double transVar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogAnomalies</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>aea926050ec8475bb5bb00285accfbebb</anchor>
      <arglist>(bool logAnomalies)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScalingFactor</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>afdd085205f33f012913cf2fc46d4b5dd</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stabilizingCallback</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a2c3271e785a2257533f14517b8dbc0cf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userTaskCallback</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>aef48ac60334a055b5c9b1f2eec2c9146</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArAnalogGyro</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>adcadb27031049ae191f31164a4ddc412</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>GYRO_ANALOG_COMPUTER</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a6151dc37d9f0cd16117b1c3f80f39715af67cf1e1d44e92489f591a3e37f63a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>GYRO_ANALOG_CONTROLLER</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a6151dc37d9f0cd16117b1c3f80f39715aefdf538347ba0ee6431506b8fcb6f570</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>GYRO_NONE</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a6151dc37d9f0cd16117b1c3f80f39715a5699b9b8f84a724aaca07a1c83ac84e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>GyroType</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a6151dc37d9f0cd16117b1c3f80f39715</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>GYRO_NONE</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a6151dc37d9f0cd16117b1c3f80f39715a5699b9b8f84a724aaca07a1c83ac84e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>GYRO_ANALOG_COMPUTER</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a6151dc37d9f0cd16117b1c3f80f39715af67cf1e1d44e92489f591a3e37f63a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>GYRO_ANALOG_CONTROLLER</name>
      <anchorfile>classArAnalogGyro.html</anchorfile>
      <anchor>a6151dc37d9f0cd16117b1c3f80f39715aefdf538347ba0ee6431506b8fcb6f570</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArArg</name>
    <filename>classArArg.html</filename>
    <member kind="enumvalue">
      <name>TYPE_COUNT</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>aa34e89e31a2957a7966c85f15f82c625a5c08e556acef344b196dc6bdf5e0c0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba55fa4f7ed305e0e1362acd5280a6a58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DESCRIPTION_HOLDER</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba2203dfcbe9165c3b737fa92476e04077</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba1c9d5a82c790c5e8b182afd56316173d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTOR</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba1601d51f58d4b06228096c1eafcc2c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dbaf5cbede93e0728c4962f2c2fb8188c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba07763b1a9cd6b1df7c84f0f1b492b2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_TYPE</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dbad3ffcff46c0a5522021a0d667f6ab679</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POSE</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba4e06d574996893d7b298e9eb67870999</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba00a31db4b5e914c3e3f4d5be7e501feb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba07763b1a9cd6b1df7c84f0f1b492b2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dbaf5cbede93e0728c4962f2c2fb8188c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba1c9d5a82c790c5e8b182afd56316173d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba00a31db4b5e914c3e3f4d5be7e501feb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba55fa4f7ed305e0e1362acd5280a6a58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POSE</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba4e06d574996893d7b298e9eb67870999</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTOR</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba1601d51f58d4b06228096c1eafcc2c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DESCRIPTION_HOLDER</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dba2203dfcbe9165c3b737fa92476e04077</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_TYPE</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad3874ce82232b3fd733e6c73d16af3dbad3ffcff46c0a5522021a0d667f6ab679</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_COUNT</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>aa34e89e31a2957a7966c85f15f82c625a5c08e556acef344b196dc6bdf5e0c0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArg</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a8d2f37f0bf185bb782655fcc535f80d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArg</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>af95c23b9ad936c75e549092f87afb086</anchor>
      <arglist>(const char *name, int *pointer, const char *description=&quot;&quot;, int minInt=INT_MIN, int maxInt=INT_MAX)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArg</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a68926e5b78fca078359d1c9037909fb2</anchor>
      <arglist>(const char *name, double *pointer, const char *description=&quot;&quot;, double minDouble=-HUGE_VAL, double maxDouble=HUGE_VAL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArg</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a57df6d250866febfd24af81b96de701f</anchor>
      <arglist>(const char *name, bool *pointer, const char *description=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArg</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a8fc3431a24b88957e1e83fac532b7e01</anchor>
      <arglist>(const char *name, ArPose *pointer, const char *description=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArg</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a563268486fb40053c8dce837c2b08a1e</anchor>
      <arglist>(const char *name, char *pointer, const char *description, size_t maxStrLen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArg</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a427631aafe4d8700af5a242b00ef41aa</anchor>
      <arglist>(const char *name, ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt; *setFunctor, ArRetFunctor&lt; const std::list&lt; ArArgumentBuilder * &gt; * &gt; *getFunctor, const char *description)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArg</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a2d8a7c16f01e736bd17a69be0675e207</anchor>
      <arglist>(const char *description)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArg</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ae4eb6c318ff7947935947a7207761d61</anchor>
      <arglist>(const ArArg &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; ArArgumentBuilder * &gt; *</type>
      <name>getArgsWithFunctor</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a952f4d77d66a97ed6ad811fd1976fa37</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBool</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a21a1f1bc7462b3e491b43b0fa1eeaffb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPriority::Priority</type>
      <name>getConfigPriority</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>aa13732e55bbeed23977e9c12ee18d093</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getConfigPrioritySet</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a1b4059006e57d0af2da0ed3fb8e92147</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDescription</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a84a575abc8353fb841da62fd72d19966</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDouble</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad53c81b068b63119ccc0319a43c490ed</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInt</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a2bdbe7e069c85f826075f594322d3765</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxDouble</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a93e5a1f556669176f6b860f82cd27bb3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxInt</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a2a070ff9c14e4e4320524ed21ec49950</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinDouble</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a0675ce2e81415722350cb8fbf78f7bd7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinInt</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ae84782732f47b689f92080ce2b9225da</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a4c0855a3fe92281fac4daf02cab725ad</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getPose</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a4584b3a93430740f89ea8c3c016f66c4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getString</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a74e9722be1c682c47fd613c9f5532e5b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>getType</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a027bb47b6b3a00e274012dc7298a0fb2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ad9c55540eb58b8e9faf840a1d030ffbc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArArg &amp;</type>
      <name>operator=</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a1728b83481c4776b701b2e564b44fc24</anchor>
      <arglist>(const ArArg &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setArgWithFunctor</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>aba629ed2bc1905e6e0a7ea92647030c0</anchor>
      <arglist>(ArArgumentBuilder *argument)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setBool</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a3b019957120bf55fedbd17f4c4a7ec83</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfigPriority</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a03061a96b2773313fa028ca5cec2fa47</anchor>
      <arglist>(ArPriority::Priority priority)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDouble</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a9e5192e14ca6032c2f47c377487d447b</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setInt</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a9930b9f6885beec117f41baa1e1e724b</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPose</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a9c324c4ba7d605182e64db40b0beff65</anchor>
      <arglist>(ArPose pose)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setString</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>a5bd56d7a46e8cc9c71f79865216b6b83</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArArg</name>
      <anchorfile>classArArg.html</anchorfile>
      <anchor>ac46207408c4b5cd31aa3060f643dfad3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArArgumentBuilder</name>
    <filename>classArArgumentBuilder.html</filename>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a0dd0beff26b51095f6cdc2fd85c024d2</anchor>
      <arglist>(const char *str,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPlain</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>aab55a9e9cd820fb6a1d9e6515bdecef7</anchor>
      <arglist>(const char *str, int position=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPlainAsIs</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a9347ef4f8173baeaed8c095bf5df7177</anchor>
      <arglist>(const char *str, int position=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStrings</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a58499b763c30590d3194ffa2988a4b88</anchor>
      <arglist>(char **argv, int argc, int position=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStrings</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a7ddf583e6eb139c9df2cc1e1a3aa7686</anchor>
      <arglist>(int argc, char **argv, int position=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStringsAsIs</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ab7720aedea0d4126ef4084e19a9748fc</anchor>
      <arglist>(int argc, char **argv, int position=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArgumentBuilder</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ad73480bd86aad72418fb786494cda06f</anchor>
      <arglist>(size_t argvLen=512, char extraSpaceChar= &apos;\0&apos;, bool ignoreNormalSpaces=false, bool isPreCompressQuotes=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArgumentBuilder</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a116e2a878b9fb1197af611b9acfc262b</anchor>
      <arglist>(const ArArgumentBuilder &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressQuoted</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ad0640e440c2258dff602fb7e0e422afa</anchor>
      <arglist>(bool stripQuotationMarks=false)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getArg</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a54398df165b38457a14168bfb5285645</anchor>
      <arglist>(size_t whichArg) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getArgBool</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a5993293a9bfee689aca789a217003a62</anchor>
      <arglist>(size_t whichArg, bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getArgc</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a42fb3acfb7ebbd419a888fff9ebbb147</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getArgDouble</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a6b21b326129b44488dd3474be5955c80</anchor>
      <arglist>(size_t whichArg, bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getArgInt</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a81b40235c0ed25ac9f4c9c2d707850ae</anchor>
      <arglist>(size_t whichArg, bool *ok=NULL, bool forceHex=false) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getArgLongLongInt</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ae540216773d7d4e27d9a926270456be4</anchor>
      <arglist>(size_t whichArg, bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>char **</type>
      <name>getArgv</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a420159406e9932f9a170f00afffee8b1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtraString</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a441030cb05152f3f77ea2ecb062cb0cd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFullString</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a3d0f4e9a6510a02877c59492229d9aaa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArgBool</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ad37d23fc43340235b85e74d2820e0546</anchor>
      <arglist>(size_t whichArg) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArgDouble</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ad1de9163bc9e3fa60ba6de3bf14c1eef</anchor>
      <arglist>(size_t whichArg) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArgInt</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ac85211fd03729be71fa74b7587b68fe4</anchor>
      <arglist>(size_t whichArg, bool forceHex=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArgLongLongInt</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a50673311f74164148eb98a2a23f984e0</anchor>
      <arglist>(size_t whichArg) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ae421cb185e8efc121e7c54efd03f99f3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeArg</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a2dbe5a174056a599f9a1cce4a43daa89</anchor>
      <arglist>(size_t which, bool isRebuildFullString=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraString</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>af19e25653c809803790be6de4f1f2bdd</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFullString</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ad5e8ccfea6e31f93869c4cfc0af833a3</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuiet</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a107e88b063c7ef6087b5889d785e996a</anchor>
      <arglist>(bool isQuiet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArArgumentBuilder</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a08f6ae33d714449ac2baf733cad9f624</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ArgSeparatorType</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>afd4245098081d1f1a9bf4ee785928a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>internalAdd</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ab5a98c6f31a25f62460d7dc65d6a281b</anchor>
      <arglist>(const char *str, int position=-1)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isEndArg</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ab8b9cb576c527bd5765a96d78047d932</anchor>
      <arglist>(const char *buf, int len, int &amp;indexInOut, int endArgFlags)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isSpace</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ab009accd84288f4504e0b02a2032ab77</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isStartArg</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>ae0b9aeb44ca48152499cc3e4c3fdcd34</anchor>
      <arglist>(const char *buf, int len, int index, int *endArgFlagsOut)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsPreCompressQuotes</name>
      <anchorfile>classArArgumentBuilder.html</anchorfile>
      <anchor>a9b424439a351c2768ee59e00457e4837</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArArgumentBuilderCompareOp</name>
    <filename>structArArgumentBuilderCompareOp.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structArArgumentBuilderCompareOp.html</anchorfile>
      <anchor>a37384a1f65129e47bc7288c677e36acd</anchor>
      <arglist>(ArArgumentBuilder *arg1, ArArgumentBuilder *arg2) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArArgumentParser</name>
    <filename>classArArgumentParser.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addDefaultArgument</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a10192496ef5473e47b93123cf7c4fc7a</anchor>
      <arglist>(const char *argument, int position=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDefaultArgumentAsIs</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>aa338f7162b9429445df6b5f3cb457769</anchor>
      <arglist>(const char *argument, int position=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArgumentParser</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>aa977bb9b6b998956a39e4a4cc513eaaa</anchor>
      <arglist>(int *argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArArgumentParser</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a02244bac60951e47267e7a034ac0caea</anchor>
      <arglist>(ArArgumentBuilder *builder)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkArgument</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a08d0d87154763e4869f0342a47059886</anchor>
      <arglist>(const char *argument)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkArgumentVar</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>adb2c8381cfd3982b5230ab0e345d48d8</anchor>
      <arglist>(const char *argument,...)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkHelp</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a7f49e13ab287d2aaaa571b8dde116d78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkHelpAndWarnUnparsed</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>ac3889cbdfa862031c51bf80e06954914</anchor>
      <arglist>(unsigned int numArgsOkay=0)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>checkParameterArgument</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>aca9661c6e8ef423337590bc5c2336dec</anchor>
      <arglist>(const char *argument, bool returnFirst=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkParameterArgumentBool</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a19bde315a3456ae1034e4f6f84b46f62</anchor>
      <arglist>(const char *argument, bool *dest, bool *wasReallySet=NULL, bool returnFirst=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkParameterArgumentBoolVar</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>aebf5e0ef3e5f5a86bac1f8f2af1e7829</anchor>
      <arglist>(bool *wasReallySet, bool *dest, const char *argument,...)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkParameterArgumentDouble</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>ae2d26852c3f2eb5306c4a88c240109f9</anchor>
      <arglist>(const char *argument, double *dest, bool *wasReallySet=NULL, bool returnFirst=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkParameterArgumentDoubleVar</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a281054a5e44b0c88ae1a192eec502ab9</anchor>
      <arglist>(bool *wasReallySet, double *dest, const char *argument,...)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkParameterArgumentFloat</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a8c93c1494a6aee16434722119b3bd99d</anchor>
      <arglist>(const char *argument, float *dest, bool *wasReallySet=NULL, bool returnFirst=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkParameterArgumentFloatVar</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>ad3a465c37d7d51bd013368fab963745f</anchor>
      <arglist>(bool *wasReallySet, float *dest, const char *argument,...)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkParameterArgumentInteger</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a6cbddc515e1be6d901b1a0c846f19ef8</anchor>
      <arglist>(const char *argument, int *dest, bool *wasReallySet=NULL, bool returnFirst=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkParameterArgumentIntegerVar</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a8704f7fd54d22c68256cb36315136a37</anchor>
      <arglist>(bool *wasReallySet, int *dest, const char *argument,...)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkParameterArgumentString</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a7b3a82b02b077f3c86d7a9e62322946f</anchor>
      <arglist>(const char *argument, const char **dest, bool *wasReallySet=NULL, bool returnFirst=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkParameterArgumentStringVar</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a6d1edcc90fa221ac61233b091cbd2c37</anchor>
      <arglist>(bool *wasReallySet, const char **dest, const char *argument,...)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>checkParameterArgumentVar</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a88450be1f9acdb05fed7a3df47bdaf69</anchor>
      <arglist>(const char *argument,...)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getArg</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a47aa47b8a59cdea0142a728db11ccbf9</anchor>
      <arglist>(size_t whichArg) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getArgc</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>ad3221128461a8f3a84c78ec6e37ce82a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const ArArgumentBuilder *</type>
      <name>getArgumentBuilder</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a21e93fdbbf7f473a606417e855e1067a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>char **</type>
      <name>getArgv</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>adb4699fd41b8ca2365a18f68230dabf5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStartingArguments</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a1bc40616bdfedbc3b0cd3cd4ca270ed9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getWasReallySetOnlyTrue</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>ae6bdff0e8039200dcf4413292639650b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadDefaultArguments</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a501694b62a7f8b0c3cadd84aeafe1b35</anchor>
      <arglist>(int positon=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a97aa0dbbb24ff0c278e44ead1606b581</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeArg</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a48452e7f122ec469d37bfeabef2928a8</anchor>
      <arglist>(size_t which)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWasReallySetOnlyTrue</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a088077c44dafcd8b1a11deb821155f47</anchor>
      <arglist>(bool wasReallySetOnlyTrue)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArArgumentParser</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a37eeb68abd40fe5eefa15632f2c19381</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addDefaultArgumentEnv</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a334695df6617f4d2137d367b9203c890</anchor>
      <arglist>(const char *env)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addDefaultArgumentFile</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a3829748cdf17452be8c5fdd8a9638be5</anchor>
      <arglist>(const char *file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logDefaultArgumentLocations</name>
      <anchorfile>classArArgumentParser.html</anchorfile>
      <anchor>a364f0c490c93dd59dfe3ba7f9b384803</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArASyncTask</name>
    <filename>classArASyncTask.html</filename>
    <base>ArThread</base>
    <member kind="function">
      <type></type>
      <name>ArASyncTask</name>
      <anchorfile>classArASyncTask.html</anchorfile>
      <anchor>a2f8d322b93edf16edd3253692e130480</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>create</name>
      <anchorfile>classArASyncTask.html</anchorfile>
      <anchor>a1219f8fc48adfc07ab59ea414585c479</anchor>
      <arglist>(bool joinable=true, bool lowerPriority=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getThreadActivity</name>
      <anchorfile>classArASyncTask.html</anchorfile>
      <anchor>acd6307214f0bfdcd9f1c89664b2a7ad1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>run</name>
      <anchorfile>classArASyncTask.html</anchorfile>
      <anchor>a9da8602419f2c52f001f130fe489b387</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runAsync</name>
      <anchorfile>classArASyncTask.html</anchorfile>
      <anchor>a3d9b25fe57d5d4c4a7146827798dcbe0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>runInThisThread</name>
      <anchorfile>classArASyncTask.html</anchorfile>
      <anchor>ab1b9692583669e973fcb70fe843e556f</anchor>
      <arglist>(void *arg=0)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArASyncTask.html</anchorfile>
      <anchor>a370bd38ad2a285af30cf722a9e3f4532</anchor>
      <arglist>(void *arg)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopRunning</name>
      <anchorfile>classArASyncTask.html</anchorfile>
      <anchor>adb6a00c292ff5aa6e8db8cd9d33747ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArASyncTask</name>
      <anchorfile>classArASyncTask.html</anchorfile>
      <anchor>a9a7a9aafc788b3a03fbaf71a87e1ee44</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArBasePacket</name>
    <filename>classArBasePacket.html</filename>
    <member kind="function">
      <type></type>
      <name>ArBasePacket</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a0a7bbc1ab8cc9f53b01880dc53f1e92b</anchor>
      <arglist>(ArTypes::UByte2 bufferSize=0, ArTypes::UByte2 headerLength=0, char *buf=NULL, ArTypes::UByte2 footerLength=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArBasePacket</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a6a95a94a27b1ee433aeeb914970f603b</anchor>
      <arglist>(const ArBasePacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::Byte</type>
      <name>bufToByte</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a3006b1fbf239cea0013d0a9e0c0c1baf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::Byte2</type>
      <name>bufToByte2</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ab300d387c442be9ab025e2c089bbd620</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::Byte4</type>
      <name>bufToByte4</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a80571dd0c49cfb0717b1fc1e81176672</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::Byte8</type>
      <name>bufToByte8</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ababfcda88abb1a994b6e903a2472ba28</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bufToData</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ab36d3542331e2e288747cbcc0d36333e</anchor>
      <arglist>(char *data, int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bufToData</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a885a0bdc2036056abadd3a3eafe4bdeb</anchor>
      <arglist>(unsigned char *data, int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bufToStr</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a8f1536daa451024715fe82cec495e826</anchor>
      <arglist>(char *buf, int maxlen)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bufToString</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>aa4209161923996ad1e69469d32cfc6b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::UByte</type>
      <name>bufToUByte</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a32d7bab938c3fcc1929890282eb5bec6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::UByte2</type>
      <name>bufToUByte2</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ac2d63293b9a983d18430eceb0edbf0b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::UByte4</type>
      <name>bufToUByte4</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a18d3e098635ec49ee8b7b43dc5c65c77</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::UByte8</type>
      <name>bufToUByte8</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a2960ee8861663c791a93d4de6c6d2954</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>byte2ToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a4a1712c143161298c10235a7739c73af</anchor>
      <arglist>(ArTypes::Byte2 val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>byte4ToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a6ab2c8b1224dc27fc96f22ff8f027e28</anchor>
      <arglist>(ArTypes::Byte4 val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>byte8ToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a63bdb1748be6214d1b9e98179f1692d6</anchor>
      <arglist>(ArTypes::Byte8 val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>byteToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a9afdff469545e32649067ed0db391046</anchor>
      <arglist>(ArTypes::Byte val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dataToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a832d8c09ea2dc84a0df317ad2b24008d</anchor>
      <arglist>(const char *data, int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dataToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ae7d63546b6f9057b91bc3fd7b8661d1c</anchor>
      <arglist>(const unsigned char *data, int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>duplicatePacket</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a1071623748c7c8f37ebc03d4f8c00559</anchor>
      <arglist>(ArBasePacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>empty</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ae9fedf1e94cbed1ffabbbbf8ed8e94d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finalizePacket</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>af279f7795e92c1c5f80edaa018a89345</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ab647b14794b49dc6e34cdb8b82275cfe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char *</type>
      <name>getBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>adce8426ca9eda8ea59114265afe0a294</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::UByte2</type>
      <name>getDataLength</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>adc317a80a2a2ed97529455016b615c88</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::UByte2</type>
      <name>getDataReadLength</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a9f2cace3e90269774854a24c04cf20ef</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::UByte2</type>
      <name>getFooterLength</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ae79313eb5ee1618c53e971b048e5d9b7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::UByte2</type>
      <name>getHeaderLength</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ad7fae5c87596d533a8621a849867dafd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::UByte2</type>
      <name>getLength</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a1ffc091d20ab361fe67a664b322976a3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::UByte2</type>
      <name>getMaxLength</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a51def2aaa583901ebb347c8e5c8ce03c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTypes::UByte2</type>
      <name>getReadLength</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ae46601e750b76486525b09f7898dda94</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isValid</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a7080a7c3199abf5a82ec932de7e733cb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>log</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>acfab2e91ed6914dd58240994972c6963</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArBasePacket &amp;</type>
      <name>operator=</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a6901dadc212e751d1cb18b60236820ab</anchor>
      <arglist>(const ArBasePacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printHex</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a6ee1ecf55dce762dae0c0ac068201798</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetRead</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>af46bfa2d7acc95bc6524e70bd6d4a0ba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetValid</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ac0c74c5811fa4737ed5cd8a6beccda3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a4dfffabbb57e00e4a18a651cd3f4796a</anchor>
      <arglist>(char *buf, ArTypes::UByte2 bufferSize)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderLength</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>adef8ef187c739064cb6095a4b7464f06</anchor>
      <arglist>(ArTypes::UByte2 length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setLength</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a18bd814008fa96d4a1c0873190268198</anchor>
      <arglist>(ArTypes::UByte2 length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxLength</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a9d5e1ea36751d0c213354fe6d0db573d</anchor>
      <arglist>(ArTypes::UByte2 bufferSize)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setReadLength</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a424e064fc126ffde410b70efdb3a2f57</anchor>
      <arglist>(ArTypes::UByte2 readLength)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>strNToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a92dcff8e2eef538109a9b9c9ad5e46f3</anchor>
      <arglist>(const char *str, int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>strToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a1367558f1c0ce2830072a649ad935d21</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>strToBufPadded</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>aac138405a70ebebb31813581716b48fe</anchor>
      <arglist>(const char *str, int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>uByte2ToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>aeec1b2c2dc6902e3c2b820fb2ddbf0e2</anchor>
      <arglist>(ArTypes::UByte2 val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>uByte4ToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>abeb94fdd3729b05abb4574903887876c</anchor>
      <arglist>(ArTypes::UByte4 val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>uByte8ToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a984b96d570c5631ca362fb0d5c05b9c2</anchor>
      <arglist>(ArTypes::UByte8 val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>uByteToBuf</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>ab909290dd24db16046bdf792a20eb6da</anchor>
      <arglist>(ArTypes::UByte val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArBasePacket</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a68b5e82d2b35ad901e54b0e76ed5f9e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>hasWriteCapacity</name>
      <anchorfile>classArBasePacket.html</anchorfile>
      <anchor>a8ae7b4cc029d9c60b510b55b87bb7432</anchor>
      <arglist>(int bytes)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArBatteryConnector</name>
    <filename>classArBatteryConnector.html</filename>
    <class kind="class">ArBatteryConnector::BatteryData</class>
    <member kind="function">
      <type>bool</type>
      <name>addBattery</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>ab1829cccfc25cd121e6f6df497c6740c</anchor>
      <arglist>(ArBatteryMTX *battery, int batteryNumber=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArBatteryConnector</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>aa89558b9ab3d847639802db304868928</anchor>
      <arglist>(ArArgumentParser *parser, ArRobot *robot, ArRobotConnector *robotConnector, bool autoParseArgs=true, ArLog::LogLevel infoLogLevel=ArLog::Verbose)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectBatteries</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>a86c0f6642bf77a4851d78005733fa2b2</anchor>
      <arglist>(bool continueOnFailedConnect=false, bool addConnectedBatteriesToRobot=true, bool addAllBatteriesToRobot=false, bool turnOnBatteries=true, bool powerCycleBatteryOnFailedConnect=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectBattery</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>acbbf503c513c718a834a17553cb33eee</anchor>
      <arglist>(ArBatteryMTX *battery, int batteryNumber=1, bool forceConnection=true)</arglist>
    </member>
    <member kind="function">
      <type>ArBatteryMTX *</type>
      <name>getBattery</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>a2b8b57a4d0eb035b0312ebfbffbc3ed4</anchor>
      <arglist>(int batteryNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOptions</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>af77b40503f813da3aecb42ada66880a1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>a8bdc4715c9bea24cb2bb3452ae914ff6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>afab281000dabec675c0e96d1ab186723</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>replaceBattery</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>a56f8cb91427dcbb9422eb53b083f4265</anchor>
      <arglist>(ArBatteryMTX *battery, int batteryNumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupBattery</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>ad41cf7447885b064496056368efcb9f3</anchor>
      <arglist>(ArBatteryMTX *battery, int batteryNumber=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArBatteryConnector</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>a01a13e72f73c076a8320b365aa26cf33</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logBatteryOptions</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>a419e0cd87afb7f6ef79d6f25d05efa35</anchor>
      <arglist>(BatteryData *batterydata, bool header=true, bool metaOpts=true) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>parseBatteryArgs</name>
      <anchorfile>classArBatteryConnector.html</anchorfile>
      <anchor>a19445ab34b054709cbc2dfe77625c354</anchor>
      <arglist>(ArArgumentParser *parser, BatteryData *batteryData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArBatteryMTX</name>
    <filename>classArBatteryMTX.html</filename>
    <base>ArASyncTask</base>
    <member kind="enumvalue">
      <name>STATUS_MASTER_SWITCH_ON</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>aa3d1f12f970619a4ec40d0746ea4cdaeae2065d58d01daa191c0e8d9bc87b8b4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StatusFlags</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>aa3d1f12f970619a4ec40d0746ea4cdae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_MASTER_SWITCH_ON</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>aa3d1f12f970619a4ec40d0746ea4cdaeae2065d58d01daa191c0e8d9bc87b8b4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBatteryPoweringOffCancelledCB</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>aa434aa7e6c16018536ddf5fe8f8ba793</anchor>
      <arglist>(ArFunctor *functor, int position=51)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBatteryPoweringOffCB</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a8fcd304d78b4a0f45a5132020424fb98</anchor>
      <arglist>(ArFunctor *functor, int position=51)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDisconnectOnErrorCB</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>ae002a3b2569d639ca67945fd2746a972</anchor>
      <arglist>(ArFunctor *functor, int position=51)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArBatteryMTX</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>aec9ce3b72d0dc814cb33909d69555c54</anchor>
      <arglist>(int batteryBoardNum=0, const char *name=&quot;MTXBattery&quot;, ArDeviceConnection *conn=NULL, ArRobot *robot=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkLostConnection</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>abadd3e55093a5198c569a03bec2d59e9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectOnError</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a26b0d8e8b21c74f4e63c4687554a4e94</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getChargeEstimate</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a84fa687394ec8a2a57d4fd3007913550</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConnectionTimeoutSeconds</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>ab9e453e751f0e3e85ff0e8bfc107afb2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentDraw</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a0c3d09cb68bf1d05bf98596e31e5d3ee</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDefaultPortType</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a5076bd6858dbdaeb0b1676cae3db3597</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDefaultTcpPort</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a577fface56dca74367462bcbfdc18fa4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a32091f1309f4cb09bfbf32b9349e0319</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastReadingTime</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a166b16576b6c1f64ecf8afc7f560cbce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArRobotPacketReceiver *</type>
      <name>getPacketReceiver</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a22a87390eeea43d0d4001e1cc833268a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArRobotPacketSender *</type>
      <name>getPacketSender</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>ae6cacbb08eb8d5af0d40025c1b0614e6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPackVoltage</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>ab6e4e415c9bee8c1be96c1f7971e4ca6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getReadingCount</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>abbcb7205b412135181de6a67e375a1b7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveRequestedCellInfoPackets</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a5d89d9484425e5ffe16762cb3e0523c1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveRequestedSysInfoPackets</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a62a04e3c893deb55057232444fe7f05d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lockDevice</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>aaeaa64ea6c64fe97823c7261fc81fc40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remBatteryPoweringOffCancelledCB</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a0dad46c56284e4f1244a5ce4bd26b172</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remBatteryPoweringOffCB</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a612029226671bfb187e61b06cc12ea89</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDisconnectOnErrorCB</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>ac61a839118bbb256579e9696a56bc0b9</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestContinuousCellInfoPackets</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>aba308c09c689a5caa48199b94bfd33b9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestContinuousSysInfoPackets</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>ac486077d930e52e6e5d20789bf47da2d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConnectionTimeoutSeconds</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>ac5d5fd4c6d12f1a5f761d29a6ce70368</anchor>
      <arglist>(double seconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a4806dd66ff0ef034b68438b4506729ed</anchor>
      <arglist>(ArDeviceConnection *conn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRobot</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a4502d97eee29a97ff85f8add711b5715</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopCellInfoPackets</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a000dd52bf52afe3c29101783e57cce9f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopSysInfoPackets</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a697b26715da0a67ba08f3f10ab456a07</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tryLockDevice</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>af3b86a4b0f4beb1309c3db834e4fcd3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>unlockDevice</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a93cfce4d9951df268f487e5bc5834a33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArBatteryMTX</name>
      <anchorfile>classArBatteryMTX.html</anchorfile>
      <anchor>a56fda49cc2ef53e173857f0ecddcccb8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArBumpers</name>
    <filename>classArBumpers.html</filename>
    <base>ArRangeDevice</base>
    <member kind="function">
      <type>void</type>
      <name>addBumpToBuffer</name>
      <anchorfile>classArBumpers.html</anchorfile>
      <anchor>a2a4f152e4b1645154149b7e43598f612</anchor>
      <arglist>(int bumpValue, int whichBumper)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArBumpers</name>
      <anchorfile>classArBumpers.html</anchorfile>
      <anchor>a972290147ff89906adc9c8b7c28f46b0</anchor>
      <arglist>(size_t currentBufferSize=30, size_t cumulativeBufferSize=30, const char *name=&quot;bumpers&quot;, int maxSecondsToKeepCurrent=15, double angleRange=135)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processReadings</name>
      <anchorfile>classArBumpers.html</anchorfile>
      <anchor>ab8220abe0a1e2b273c0e26b3ce91b631</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArCallbackList</name>
    <filename>classArCallbackList.html</filename>
    <base>ArGenericCallbackList&lt; ArFunctor * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArCallbackList</name>
      <anchorfile>classArCallbackList.html</anchorfile>
      <anchor>a85e28dc9076a279fc35e2e6e64c38723</anchor>
      <arglist>(const char *name=&quot;&quot;, ArLog::LogLevel logLevel=ArLog::Verbose, bool singleShot=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invoke</name>
      <anchorfile>classArCallbackList.html</anchorfile>
      <anchor>a47c8a5851b89254713ac5297cf539754</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArCallbackList</name>
      <anchorfile>classArCallbackList.html</anchorfile>
      <anchor>af5971c5861b73f8e9cfcd1abff2153f2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArCallbackList1</name>
    <filename>classArCallbackList1.html</filename>
    <templarg>P1</templarg>
    <base>ArGenericCallbackList&lt; ArFunctor1&lt; P1 &gt; * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArCallbackList1</name>
      <anchorfile>classArCallbackList1.html</anchorfile>
      <anchor>a243ce79b4555294674af1709f9bf37dd</anchor>
      <arglist>(const char *name=&quot;&quot;, ArLog::LogLevel logLevel=ArLog::Verbose, bool singleShot=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invoke</name>
      <anchorfile>classArCallbackList1.html</anchorfile>
      <anchor>af20685d52e0bc6517e857638e5fb82a4</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArCallbackList1</name>
      <anchorfile>classArCallbackList1.html</anchorfile>
      <anchor>adb31d232211b4bbdccbe492b938dc497</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArCallbackList2</name>
    <filename>classArCallbackList2.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArGenericCallbackList&lt; ArFunctor2&lt; P1, P2 &gt; * &gt;</base>
  </compound>
  <compound kind="class">
    <name>ArCallbackList3</name>
    <filename>classArCallbackList3.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArGenericCallbackList&lt; ArFunctor3&lt; P1, P2, P3 &gt; * &gt;</base>
  </compound>
  <compound kind="class">
    <name>ArCallbackList4</name>
    <filename>classArCallbackList4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArGenericCallbackList&lt; ArFunctor4&lt; P1, P2, P3, P4 &gt; * &gt;</base>
  </compound>
  <compound kind="class">
    <name>ArCameraCollection</name>
    <filename>classArCameraCollection.html</filename>
    <class kind="struct">ArCameraCollection::CameraInfo</class>
    <class kind="struct">ArCameraCollection::CommandInfo</class>
    <class kind="struct">ArCameraCollection::ParamInfo</class>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addCamera</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a4298508408621d2db978f1408a8dc27e</anchor>
      <arglist>(const char *cameraName, const char *cameraType, const char *displayName, const char *displayType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addCameraCommand</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>af387beddb1c2d7f726eb9f1dd3da7af8</anchor>
      <arglist>(const char *cameraName, const char *command, const char *cameraCommandName, int requestInterval=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addModifiedCB</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a30de505a8e8b4a63fd85f956834cb6fb</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addParameter</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a15505acddd8e8161d4d72b3e16a83bef</anchor>
      <arglist>(const char *cameraName, ArCameraParameterSource *source, const ArConfigArg &amp;param)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArCameraCollection</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a02b8d3ef249800ef72c4fcc048a7e9f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endUpdate</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a447ff6c56721473fb869e7b62517b5b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>exists</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a075b9bafeb4c62a9fe6d020430a84f53</anchor>
      <arglist>(const char *cameraName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>exists</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>ae4dc3f06819b719a2f7cdaf2a516a566</anchor>
      <arglist>(const char *cameraName, const char *command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCameraCommands</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a9094a899935e26a3f68fdea0400be86f</anchor>
      <arglist>(const char *cameraName, std::list&lt; std::string &gt; &amp;outList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCameraNames</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>aff719b3e8ccac27c25d0bbc78365c8f9</anchor>
      <arglist>(std::list&lt; std::string &gt; &amp;outList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getCameraType</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a188639b7899aa19abfc116e1c8877cb3</anchor>
      <arglist>(const char *cameraName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getCommandName</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a961abaec7de6902236edce0b5f12e9c9</anchor>
      <arglist>(const char *cameraName, const char *command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getDisplayName</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a3f54f932eb88464704e13b628e06e32c</anchor>
      <arglist>(const char *cameraName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getDisplayType</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a7bc41ee3e717b585c01ad7e83cc77d9c</anchor>
      <arglist>(const char *cameraName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getParameter</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a454aed3e6aacf1bd3e8f2876a79135ff</anchor>
      <arglist>(const char *cameraName, const char *parameterName, ArConfigArg &amp;paramOut)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameterNames</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>ade9037c99e194bb03b85769f23552485</anchor>
      <arglist>(const char *cameraName, std::list&lt; std::string &gt; &amp;outList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getRequestInterval</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>ae6f37a0241fbc83cf430bc5e4216cb12</anchor>
      <arglist>(const char *cameraName, const char *command)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lock</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a2fdce4aac90d919e7097a1e2b2b3fe6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>parameterExists</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a815aa3dbc20310cc8b2b9b151db1d112</anchor>
      <arglist>(const char *cameraName, const char *paramName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeCamera</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>af596938f5848c0ad389e532e320995ef</anchor>
      <arglist>(const char *cameraName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeCameraCommand</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a503f821e2d8030775b7cfd2f34461b8b</anchor>
      <arglist>(const char *cameraName, const char *command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeModifiedCB</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a1838a439c4a74da1a467b19af40eeeac</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeParameter</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>ab8d52a0d7fb9d37adbfa82e5e9024d2c</anchor>
      <arglist>(const char *cameraName, const char *paramName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setParameter</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a809eb7f6b328cad9ad6d9517bd5cfea5</anchor>
      <arglist>(const char *cameraName, const ArConfigArg &amp;param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startUpdate</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a7a1afaa71eb2965b4ab9ebce55fd761f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tryLock</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a4aea84f889b4d7b3a10c9624588472e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unlock</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>acdb91fcb17dd9d89054071b07c1aca62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArCameraCollection</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a31aa9bd6524c6ef2200f4e908d18f317</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CameraInfo *</type>
      <name>findCameraInfo</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a7da3a754171f2ed20a7a880cf83fd25c</anchor>
      <arglist>(const char *cameraName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CommandInfo *</type>
      <name>findCommandInfo</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a9ef809a9ce554014292d04bc89342d6d</anchor>
      <arglist>(const char *cameraName, const char *commandName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ParamInfo *</type>
      <name>findParamInfo</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>ab6150d38fa792b3cc5957e7bc6ace5b2</anchor>
      <arglist>(const char *cameraName, const char *paramName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>notifyModifiedListeners</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a87e2415bbc0cdff30a308bf5a236405d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setModified</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>ab63d7ae8bcaa23c43a40f8831d6a0e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, CameraInfo * &gt;</type>
      <name>myCameraToInfoMap</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a372b34b5b0f9e1a9b96177f54b8d3402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsModified</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a68d02bde31ed4a949bedcdfa0db89813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsUpdatesEnabled</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>aa3da59b1c0a254b53d99ae470add1799</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myModifiedCBList</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a55993d2a376748f07f0cbe73b6e58f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myMutex</name>
      <anchorfile>classArCameraCollection.html</anchorfile>
      <anchor>a5a0bbcc01b093db1d568129c3d577685</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArCameraCollectionItem</name>
    <filename>classArCameraCollectionItem.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addToCameraCollection</name>
      <anchorfile>classArCameraCollectionItem.html</anchorfile>
      <anchor>a05e51f2412c3eb61f464228f7e75faa3</anchor>
      <arglist>(ArCameraCollection &amp;collection)=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArCameraCollectionItem</name>
      <anchorfile>classArCameraCollectionItem.html</anchorfile>
      <anchor>af81c76778bceff5df966b66ee784669a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getCameraName</name>
      <anchorfile>classArCameraCollectionItem.html</anchorfile>
      <anchor>ac4fe2c1688b56d910abf4f2b04ccd034</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArCameraCollectionItem</name>
      <anchorfile>classArCameraCollectionItem.html</anchorfile>
      <anchor>ace279cd987f3889508d24ba19e85930e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArCameraCommands</name>
    <filename>classArCameraCommands.html</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>CAMERA_MODE_UPDATED</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a13d9ff41c501b33d7bf07557b58dae7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>GET_CAMERA_DATA</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>aafce83a8e187656fe7309fac2b67f5dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>GET_CAMERA_DATA_INT</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a8fadac548f658e156ce09fd9b923f481</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>GET_CAMERA_INFO</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a05a88bf890aa4ebc3a271af3b4c52843</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>GET_CAMERA_INFO_INT</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a97b857e8ae657bc191092719eb19052d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>GET_CAMERA_MODE_LIST</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a4ffa289dd51b1b8086aa6b5c15d05282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>GET_DISPLAY</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>aa158a07734092504733131cd0842e33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>GET_PICTURE</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>acf12225bbcaed71ea4c106d3a7a25273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>GET_PICTURE_OPTIM</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a780ce827c893ee8cadc2adf546106461</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>GET_SNAPSHOT</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a79fad5a855b447f2550500f5a4babb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>GET_SNAPSHOT_PLAIN</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a1ad55b6642f770758c066b990168c7bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>GET_VIDEO</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a04c498007b828e3f5a02f14eb73c1878</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>RESET_CAMERA</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>acf15697dba03f78b0a830ba3bdc7e64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>SET_CAMERA_ABS</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a9e386e8fff2cbb34bb48e27111bf57ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>SET_CAMERA_ABS_INT</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a31fae667ddeae1cc96cd28c0dc49292c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>SET_CAMERA_MODE</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a58001cb278e8f81b6c4bb9acda79aa24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>SET_CAMERA_PCT</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a527b9dd22ae3dd8db1e796a99fdb36ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>SET_CAMERA_PCT_INT</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>ae653da5cae4995a393bccdb2207f2823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>SET_CAMERA_REL</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>a68901ea9566f0c8be592577bf2b7d7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>SET_CAMERA_REL_INT</name>
      <anchorfile>classArCameraCommands.html</anchorfile>
      <anchor>ad36d1b013626f65f71919a8577ec725b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArCameraParameterSource</name>
    <filename>classArCameraParameterSource.html</filename>
    <base>ArCameraCollectionItem</base>
    <member kind="function">
      <type></type>
      <name>ArCameraParameterSource</name>
      <anchorfile>classArCameraParameterSource.html</anchorfile>
      <anchor>aecc41811f3083902d34dc0ebacba5b43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getParameter</name>
      <anchorfile>classArCameraParameterSource.html</anchorfile>
      <anchor>aec0b81d899984b0ce7749ceab0139a2e</anchor>
      <arglist>(const char *paramName, ArConfigArg &amp;paramOut)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setParameter</name>
      <anchorfile>classArCameraParameterSource.html</anchorfile>
      <anchor>ad845a8bcec94d713debc8b5d2cf0def7</anchor>
      <arglist>(const ArConfigArg &amp;param)=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArCameraParameterSource</name>
      <anchorfile>classArCameraParameterSource.html</anchorfile>
      <anchor>ac5f6ec5243d91cdc0acc48502037b9e1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArColor</name>
    <filename>classArColor.html</filename>
    <member kind="function">
      <type></type>
      <name>ArColor</name>
      <anchorfile>classArColor.html</anchorfile>
      <anchor>a29c1d55c51669ad20809f2c32435d0e5</anchor>
      <arglist>(unsigned char red, unsigned char green, unsigned char blue)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArColor</name>
      <anchorfile>classArColor.html</anchorfile>
      <anchor>af66b885ddee7f4c31a7472ac6ca7330f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArColor</name>
      <anchorfile>classArColor.html</anchorfile>
      <anchor>a34ec4f2907b9c981485f91591105b1e0</anchor>
      <arglist>(ArTypes::Byte4 rgbValue)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::Byte4</type>
      <name>colorToByte4</name>
      <anchorfile>classArColor.html</anchorfile>
      <anchor>a5668d423c870a8ba24912b9cca5fd778</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getBlue</name>
      <anchorfile>classArColor.html</anchorfile>
      <anchor>a06c86677ae07edf5bdc4a00f55510e62</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getGreen</name>
      <anchorfile>classArColor.html</anchorfile>
      <anchor>a146cf42d283d29e5d6b14d2bf0626a90</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getRed</name>
      <anchorfile>classArColor.html</anchorfile>
      <anchor>ad86cae2a580428b9f95ca99338c15359</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArColor</name>
      <anchorfile>classArColor.html</anchorfile>
      <anchor>a77db7beedefafa3f66c06b3d3343d22d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArCommands</name>
    <filename>classArCommands.html</filename>
    <member kind="enumvalue">
      <name>ABSOLUTE_MAXES</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a477b75569a318ca233f9d7cc11f3c95e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADSEL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a5910228cdeca49c176446d22b1c1f2a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUX1BAUD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4acbcdf7c6c50666489b721290d9440c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUX2BAUD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ad996a6a1da341adf1709ca346e321e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BATTERYINFO</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a45ef186ee709b6e885fecd588dab06c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUMPSTALL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a200200150725b28581e44551f3d1d092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALCOMP</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aba2808e65b491ddc70e3cfa6496c0dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOSE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ab06d5da51bec2d37bdeeb752a927de1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Commands</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PULSE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a3305dc8abf8857ef79fa774c735e2338</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ac9d00add73550339f92e898619b1431e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOSE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ab06d5da51bec2d37bdeeb752a927de1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POLLING</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4bb39487295904446169ec086d1be8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENABLE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aa8d799cced5def80525936119963aad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETA</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4add34598d4895b5a76b59c810c7d41924</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETV</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a402a454d3f14e465dad12dd82ad39178</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETO</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a32302c1c9aa0271df5990e2bf0d5f8d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ab44a5d8443d8fd9d23680ce073f4c77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROTATE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a041f0631a966664beeb5ef8ada33d161</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETRV</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a5645ac105999d02743f4ce962190bb86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VEL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a270f1a395081474ccc7b0a23840b2fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HEAD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0ba9131a03c6c40237fc63714b7e3ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DHEAD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a3df5abc2c0b8ccb593f1450eecc8ab60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAY</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ad49c992dd02e60582bc2984651098b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONFIG</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a2c4eaa1a689373f22b6bb4dfaaac2205</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCODER</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a6f5af1fe8676a85b9dac2d3ea3015624</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETRVDIR</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a7fd21402b58761942eee6b2f5739650a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RVEL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a46efb214a0801c237781df2a0504688b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DCHEAD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0fd75605acf187cfb9e0d543cf262e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETRA</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a44733b6e3cb630b5d2d9c1cfc59d4b5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SONAR</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a891b21e6cabc8a2296c8bceca20be779</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STOP</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0ba7f1547e32f5d3c807efacd0e33858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIGOUT</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a7c45511e5ff065a580fa6feb9861af24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VEL2</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4abadcdad344183c546816e27a624d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPER</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a79ba996b4ed0a7af1b02988940040b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADSEL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a5910228cdeca49c176446d22b1c1f2a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPERVAL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a062645ec6d4b5fc20f1e16cc3dadbc10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPERPACREQUEST</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a49ac5fa5c6de372fd600c2a7600541c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IOREQUEST</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a809bdfab85f97b3edbee3e13102a35bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PTUPOS</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ace0375d8613a35c21b1d876a3cb1bcb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TTY2</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a51de296ec889c02c88c0bf98b11c414a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GETAUX</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a10e72ab2eec33fe56d8db1042c462e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUMPSTALL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a200200150725b28581e44551f3d1d092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCM2</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0548e63b60f5d5324f9ff6b1df0ad5b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JOYDRIVE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a75f4f18a5949deb065f6281700350d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVINGBLINK</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a985446122c2234b4a6f554d5c365529a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HOSTBAUD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a2011fb5c630e548281450abad4b6d4e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUX1BAUD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4acbcdf7c6c50666489b721290d9440c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUX2BAUD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ad996a6a1da341adf1709ca346e321e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ESTOP</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4abb2c16d3a5b527c4773c613dd1909cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GYRO</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4f783f34029e95605207be5aad66f130</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BATTERYINFO</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a45ef186ee709b6e885fecd588dab06c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOADPARAM</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a29bcec8bb6421a88927ed34d026952e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_LOADPARAM</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a7c5a3e4e7743da6884f8ca4808bf5c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSIM</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a22c6abf7b5a68930058a34c208cab102</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_EXIT</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a55164bae49378624feece9cba00a64fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOADWORLD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a499851c852d740a429f708d22b66ae8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_LOADWORLD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a923e99a94e18ef6b3a115458893cbe1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STEP</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a6a24a921d9d5bce0e37b56892594d436</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_STEP</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0131312cede0ea234bf5d550319f7f23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALCOMP</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aba2808e65b491ddc70e3cfa6496c0dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETSIMORIGINTH</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a8db204fc59aefc0f13efe2257a1020c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_SETORIGINTH</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a180f44a566683693b626bdf77bbe90f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESETSIMTOORIGIN</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aa0c706a0926dbcfd4cc9b87a47733441</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_RESETTOORIGIN</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a086880520a5a7f85ecdc7dc522fc8ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUND</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aeee55b68eb1c88da838dd849117858cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAYLIST</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a2dd001dcdc2ccaeab29290e7b42e1cea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUNDTOG</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a7a256695b7937192e88c976d2fd106e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_PC</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4add6de2242e64b7c3e95cc30ce5e6102a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_LRF</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aa157f49a8ea53906a1f414c7f0c5a23a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_5V</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4a3e59570bb77e4db3d926306ad05e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_12V</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aea43fff6ed8ab36246f1c8ebb58dfddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_24V</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aaadc71c0f4910492889c44f9c19c74e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_AUX_PC</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a18645dc05d2c41f4a05191ea70cab0fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_TOUCHSCREEN</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a52e38f63078c41f2730ecb0bc6527aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_PTZ</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0d8a74a2894f96e0269fedbd582aa522</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_AUDIO</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4dd1ebece932f18344e5bc0c49a1b39a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_LRF2</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ad4a9dbdfb74a7f0f10bff8658b1d87bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LATVEL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a9fe2b1553f63f1b562c243849841d838</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LATACCEL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4afe1d0afba05ab5eb4d00fdbfe3097dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SRECORD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4afe82dc08248ac3cd1ae6c61339493519</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MARCDEBUG</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aae535bc1e7bd32f6d07305934cfaf245</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHEEL_LIGHT</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a3a2d55be0bb62e4a188537ab999843af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSOLUTE_MAXES</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a477b75569a318ca233f9d7cc11f3c95e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAFETY_STATE_INFO</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4afb5c4110646c9a2b3debf90bdea397fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAFETY_SET_STATE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a5dee627c1b092119998b53dda275e0e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAFETY_DISABLE_POWER_OFF_TIMER</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a56e74e771e2f7d6baa1eb25cfe7551ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_SET_POSE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a8b3a3fad0bd17caddba895a9c5bc9989</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_RESET</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ad27a4028c11e138d832123f15f80d905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_LRF_ENABLE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ad306281a1465e6aac4bc3a58bafb936e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_LRF_SET_FOV_START</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a018ff63c625a6ed9b9ff3211c0c5e5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_LRF_SET_FOV_END</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a86f9063a7f3bebf3cc58983ee1402ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_LRF_SET_RES</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4ee1bb2ae64bb213b007069b39e15dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_CTRL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4045334ba25d7d8ea9c69192410c5471</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_STAT</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4af6d5199c512ca621a148948916607106</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_MESSAGE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a369a85e45b599b8c424cb67af1b55fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_EXIT</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a966b4c65e3f4133bea7faa562affe305</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONFIG</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a2c4eaa1a689373f22b6bb4dfaaac2205</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DCHEAD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0fd75605acf187cfb9e0d543cf262e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DHEAD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a3df5abc2c0b8ccb593f1450eecc8ab60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIGOUT</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a7c45511e5ff065a580fa6feb9861af24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENABLE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aa8d799cced5def80525936119963aad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCODER</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a6f5af1fe8676a85b9dac2d3ea3015624</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSIM</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a22c6abf7b5a68930058a34c208cab102</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ESTOP</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4abb2c16d3a5b527c4773c613dd1909cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GETAUX</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a10e72ab2eec33fe56d8db1042c462e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPER</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a79ba996b4ed0a7af1b02988940040b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPERPACREQUEST</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a49ac5fa5c6de372fd600c2a7600541c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPERVAL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a062645ec6d4b5fc20f1e16cc3dadbc10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GYRO</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4f783f34029e95605207be5aad66f130</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HEAD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0ba9131a03c6c40237fc63714b7e3ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HOSTBAUD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a2011fb5c630e548281450abad4b6d4e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IOREQUEST</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a809bdfab85f97b3edbee3e13102a35bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JOYDRIVE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a75f4f18a5949deb065f6281700350d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LATACCEL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4afe1d0afba05ab5eb4d00fdbfe3097dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LATVEL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a9fe2b1553f63f1b562c243849841d838</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOADPARAM</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a29bcec8bb6421a88927ed34d026952e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOADWORLD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a499851c852d740a429f708d22b66ae8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MARCDEBUG</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aae535bc1e7bd32f6d07305934cfaf245</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ab44a5d8443d8fd9d23680ce073f4c77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVINGBLINK</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a985446122c2234b4a6f554d5c365529a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_EXIT</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a55164bae49378624feece9cba00a64fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_LOADPARAM</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a7c5a3e4e7743da6884f8ca4808bf5c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_LOADWORLD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a923e99a94e18ef6b3a115458893cbe1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_RESETTOORIGIN</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a086880520a5a7f85ecdc7dc522fc8ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_SETORIGINTH</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a180f44a566683693b626bdf77bbe90f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OLDSIM_STEP</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0131312cede0ea234bf5d550319f7f23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ac9d00add73550339f92e898619b1431e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAYLIST</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a2dd001dcdc2ccaeab29290e7b42e1cea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POLLING</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4bb39487295904446169ec086d1be8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_12V</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aea43fff6ed8ab36246f1c8ebb58dfddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_24V</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aaadc71c0f4910492889c44f9c19c74e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_5V</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4a3e59570bb77e4db3d926306ad05e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_AUDIO</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4dd1ebece932f18344e5bc0c49a1b39a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_AUX_PC</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a18645dc05d2c41f4a05191ea70cab0fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_LRF</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aa157f49a8ea53906a1f414c7f0c5a23a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_LRF2</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ad4a9dbdfb74a7f0f10bff8658b1d87bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_PC</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4add6de2242e64b7c3e95cc30ce5e6102a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_PTZ</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0d8a74a2894f96e0269fedbd582aa522</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER_TOUCHSCREEN</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a52e38f63078c41f2730ecb0bc6527aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PTUPOS</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ace0375d8613a35c21b1d876a3cb1bcb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PULSE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a3305dc8abf8857ef79fa774c735e2338</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESETSIMTOORIGIN</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aa0c706a0926dbcfd4cc9b87a47733441</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROTATE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a041f0631a966664beeb5ef8ada33d161</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RVEL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a46efb214a0801c237781df2a0504688b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAFETY_DISABLE_POWER_OFF_TIMER</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a56e74e771e2f7d6baa1eb25cfe7551ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAFETY_SET_STATE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a5dee627c1b092119998b53dda275e0e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAFETY_STATE_INFO</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4afb5c4110646c9a2b3debf90bdea397fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAY</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ad49c992dd02e60582bc2984651098b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETA</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4add34598d4895b5a76b59c810c7d41924</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETO</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a32302c1c9aa0271df5990e2bf0d5f8d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETRA</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a44733b6e3cb630b5d2d9c1cfc59d4b5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETRV</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a5645ac105999d02743f4ce962190bb86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETRVDIR</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a7fd21402b58761942eee6b2f5739650a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETSIMORIGINTH</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a8db204fc59aefc0f13efe2257a1020c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETV</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a402a454d3f14e465dad12dd82ad39178</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_CTRL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4045334ba25d7d8ea9c69192410c5471</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_EXIT</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a966b4c65e3f4133bea7faa562affe305</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_LRF_ENABLE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ad306281a1465e6aac4bc3a58bafb936e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_LRF_SET_FOV_END</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a86f9063a7f3bebf3cc58983ee1402ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_LRF_SET_FOV_START</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a018ff63c625a6ed9b9ff3211c0c5e5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_LRF_SET_RES</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4ee1bb2ae64bb213b007069b39e15dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_MESSAGE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a369a85e45b599b8c424cb67af1b55fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_RESET</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4ad27a4028c11e138d832123f15f80d905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_SET_POSE</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a8b3a3fad0bd17caddba895a9c5bc9989</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIM_STAT</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4af6d5199c512ca621a148948916607106</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SONAR</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a891b21e6cabc8a2296c8bceca20be779</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUND</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4aeee55b68eb1c88da838dd849117858cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUNDTOG</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a7a256695b7937192e88c976d2fd106e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SRECORD</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4afe82dc08248ac3cd1ae6c61339493519</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STEP</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a6a24a921d9d5bce0e37b56892594d436</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STOP</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0ba7f1547e32f5d3c807efacd0e33858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCM2</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a0548e63b60f5d5324f9ff6b1df0ad5b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TTY2</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a51de296ec889c02c88c0bf98b11c414a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VEL</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a270f1a395081474ccc7b0a23840b2fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VEL2</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a4abadcdad344183c546816e27a624d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHEEL_LIGHT</name>
      <anchorfile>classArCommands.html</anchorfile>
      <anchor>a9a31f904a95bbc31d8b33c6637100cc4a3a2d55be0bb62e4a188537ab999843af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArCompassConnector</name>
    <filename>classArCompassConnector.html</filename>
  </compound>
  <compound kind="class">
    <name>ArCondition</name>
    <filename>classArCondition.html</filename>
    <member kind="enumvalue">
      <name>STATUS_FAILED</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936a3f6f29f645b2ea501e9488a4d96ea6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED_DESTROY</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936ae43052d595425a1bfe513b595644ad45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED_INIT</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936aa37fed77069fa1ac5d22adb77bbf361e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_WAIT_TIMEDOUT</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936ae06d2c7cba91b1db65a1d7beceba88ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_WAIT_INTR</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936a1d3f032f0e06ee4095a1feb7e3af00f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_MUTEX_FAILED_INIT</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936adeeec5c6ab916d4c79763f3e9e548e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_MUTEX_FAILED</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936a55ca5a24fcc970ab4df4119c881ead71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936a3f6f29f645b2ea501e9488a4d96ea6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED_DESTROY</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936ae43052d595425a1bfe513b595644ad45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED_INIT</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936aa37fed77069fa1ac5d22adb77bbf361e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_MUTEX_FAILED</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936a55ca5a24fcc970ab4df4119c881ead71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_MUTEX_FAILED_INIT</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936adeeec5c6ab916d4c79763f3e9e548e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_WAIT_INTR</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936a1d3f032f0e06ee4095a1feb7e3af00f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_WAIT_TIMEDOUT</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a4382a649f89fb9d07ab9f58b19a6d936ae06d2c7cba91b1db65a1d7beceba88ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArCondition</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a884fc06f69e555ed143081716e9acc14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>broadcast</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a7f5564bc60a636bcedcbb9eb6a0304ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getError</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>ae919a78d63c59664cdaad9bb8e34bebf</anchor>
      <arglist>(int messageNumber) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>signal</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a6c00c69e916c722cdce96d819a354b37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>timedWait</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>a7cd1238b227485e9670947a4fca5ebd1</anchor>
      <arglist>(unsigned int msecs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wait</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>af2b4daa37ab40fad88caee7c9c3075ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArCondition</name>
      <anchorfile>classArCondition.html</anchorfile>
      <anchor>aef9a7212064acc4fdec147f6ce0d93c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConfig</name>
    <filename>classArConfig.html</filename>
    <base>ArHasFileName</base>
    <class kind="class">ArConfig::ProcessFileCBType</class>
    <member kind="function">
      <type>bool</type>
      <name>addComment</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a53ccb6d333853bd2678b2c769eb82381</anchor>
      <arglist>(const char *comment, const char *sectionName=&quot;&quot;, ArPriority::Priority priority=ArPriority::NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListNamesToParser</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a064615aa0d26cb968a0ecf8fe9116f19</anchor>
      <arglist>(const ArConfigArg &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addParam</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ad3aa76dcf6fd83874dda8ccb577415e0</anchor>
      <arglist>(const ArConfigArg &amp;arg, const char *sectionName=&quot;&quot;, ArPriority::Priority priority=ArPriority::NORMAL, const char *displayHint=NULL, ArConfigArg::RestartLevel restart=ArConfigArg::NO_RESTART)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addParamAsIs</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ae1b2c398c46607755d767d6e04c544b0</anchor>
      <arglist>(const ArConfigArg &amp;arg, const char *sectionName=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addProcessFileCB</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ab6632033992fd48cb2369350a749f0b8</anchor>
      <arglist>(ArRetFunctor&lt; bool &gt; *functor, int priority=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addProcessFileCB</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ae9fcb23c40efd909070710986437017f</anchor>
      <arglist>(ArRetFunctor2&lt; bool, char *, size_t &gt; *functor, int priority=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addProcessFileWithErrorCB</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a66c611ea024ce60cb6bdb0a653787cd5</anchor>
      <arglist>(ArRetFunctor2&lt; bool, char *, size_t &gt; *functor, int priority=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addSection</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a1e501670b0155ff70f9a64f3d2950b8f</anchor>
      <arglist>(const char *categoryName, const char *sectionName, const char *sectionDescription)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addSectionFlags</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a2479e354d0f69029993dac715a9447b7</anchor>
      <arglist>(const char *sectionName, const char *flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSectionNotToParse</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ad406856b7e3b676ab99afc561dfffe7e</anchor>
      <arglist>(const char *section)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfig</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>acf0b53be8ad35c4351396f86e36ebdbb</anchor>
      <arglist>(const char *baseDirectory=NULL, bool noBlanksBetweenParams=false, bool ignoreBounds=false, bool failOnBadSection=false, bool saveUnknown=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfig</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a70bcd80359bcbc86e9da239558ff2a7d</anchor>
      <arglist>(const ArConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>callProcessFileCallBacks</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a37c26aa78c1ae5ff479d99fd049dc975</anchor>
      <arglist>(bool continueOnError, char *errorBuffer=NULL, size_t errorBufferLen=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAll</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a28e8a078925a43df626de565890268a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAllValueSet</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a9fc3403ef7721a7b87bbd86e8f0df64a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSections</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a07d82d43b10c31de8c2352661ff02566</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyAndDetach</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a7c90627fe94113d7c66a9c2043f8b772</anchor>
      <arglist>(const ArConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>ArConfigSection *</type>
      <name>findSection</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a4348c2978086ece1e47d90131f597aca</anchor>
      <arglist>(const char *sectionName) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBaseDirectory</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a41ba185cbaf4e667e7505d188c9b21f7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::string &gt;</type>
      <name>getCategoryNames</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>acbf388b729016e6751011557db8f932a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileName</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a8b4873a3ed8c942ade65f57d74b4118c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getNoBlanksBetweenParams</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ab08de1bae2bec49c84d771c1ceec2e03</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArLog::LogLevel</type>
      <name>getProcessFileCallbacksLogLevel</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a01bb4ce72032fb4b167026936d8c30ee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArConfigArg::RestartLevel</type>
      <name>getRestartLevelNeeded</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a198f23beb37d96464f281ddd3c7c8d4c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSaveUnknown</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a135f1d86f196b03bf9003e0b2160d5ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::string &gt;</type>
      <name>getSectionNames</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a1c030341d513526952f02c10c3bfddbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::string &gt;</type>
      <name>getSectionNamesInCategory</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a22a15042a576239ca101acff6383361c</anchor>
      <arglist>(const char *categoryName) const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; ArConfigSection * &gt; *</type>
      <name>getSections</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a840657ca55cd21642e6d4cd97b47d5b9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArConfig *</type>
      <name>getTranslator</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a2748411f686fe2ffaaa44d64c20a4cbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>aa61f1e6e522e34f40c067aee3d927fed</anchor>
      <arglist>(bool isSummary=true, std::list&lt; std::string &gt; *sectionNameList=NULL, const char *logPrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>ArConfig &amp;</type>
      <name>operator=</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a5d2d941247e59844fc10fddab6c489ef</anchor>
      <arglist>(const ArConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgument</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a06f41407a74bbbb0b8a092c904bb8697</anchor>
      <arglist>(ArArgumentBuilder *arg, char *errorBuffer=NULL, size_t errorBufferLen=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgumentParser</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>aa8590133f1fcd2070cac23686cc8ee8d</anchor>
      <arglist>(ArArgumentParser *parser, bool continueOnError=false, char *errorBuffer=NULL, size_t errorBufferLen=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseFile</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a3e14491304e22ded38de8ffcc203035a</anchor>
      <arglist>(const char *fileName, bool continueOnError=false, bool noFileNotFoundMessage=false, char *errorBuffer=NULL, size_t errorBufferLen=0, std::list&lt; std::string &gt; *sectionsToParse=NULL, ArPriority::Priority highestPriority=ArPriority::FIRST_PRIORITY, ArPriority::Priority lowestPriority=ArPriority::LAST_PRIORITY, ArConfigArg::RestartLevel *restartLevelNeeded=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseResourceFile</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a17aa822b511bb3c919afb13bac4941b2</anchor>
      <arglist>(const char *fileName, bool continueOnError=true, char *errorBuffer=NULL, size_t errorBufferLen=0, std::list&lt; std::string &gt; *sectionsToParse=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parseResourceFile</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a4e817551380c5661dcc068a8c07e715b</anchor>
      <arglist>(ArArgumentBuilder *builder)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseSection</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a632766d472027d18b36170bce1533133</anchor>
      <arglist>(ArArgumentBuilder *arg, char *errorBuffer=NULL, size_t errorBufferLen=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseText</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a3076e3e023252beaa5dfd808e014a335</anchor>
      <arglist>(const std::list&lt; std::string &gt; &amp;configLines, bool continueOnErrors=false, bool *parseOk=NULL, bool *processOk=NULL, char *errorBuffer=NULL, size_t errorBufferLen=0, std::list&lt; std::string &gt; *sectionsToParse=NULL, ArPriority::Priority highestPriority=ArPriority::FIRST_PRIORITY, ArPriority::Priority lowestPriority=ArPriority::LAST_PRIORITY, ArConfigArg::RestartLevel *restartLevelNeeded=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseUnknown</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>aaeffee727cfec4250d5d5f56acb247c4</anchor>
      <arglist>(ArArgumentBuilder *arg, char *errorBuffer=NULL, size_t errorBufferLen=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseVersion</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a598de25ed9d59eb7e286f516dcca2815</anchor>
      <arglist>(ArArgumentBuilder *arg, char *errorBuffer=NULL, size_t errorBufferLen=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processFile</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>af80da0483b51ee34e667b05a80bc2c4b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllUnsetSections</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a24bae355d4844872a3fc552bf7a17172</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllUnsetValues</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ab515bea4f872eee0a6d6344cd6cbf296</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remProcessFileCB</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ae17ad7fed68efa382e79d2cc4b4e12cf</anchor>
      <arglist>(ArRetFunctor&lt; bool &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remProcessFileCB</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a5a0b44d34a10b3acd9a97afadbcee2f1</anchor>
      <arglist>(ArRetFunctor2&lt; bool, char *, size_t &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remSectionFlag</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a7795860c2b10aef1cd068fe46f417319</anchor>
      <arglist>(const char *sectionName, const char *flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSectionNotToParse</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a0f104474342da23ef5d200d8fdf4924d</anchor>
      <arglist>(const char *section)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRestartLevelNeeded</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a917e6d46f5bcb0f76e6cace1253191ef</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBaseDirectory</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a5f9d30c8911050b8d510837d27f3e067</anchor>
      <arglist>(const char *baseDirectory)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConfigName</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ace70d5cfc31b309c2c02100d3cbf28a4</anchor>
      <arglist>(const char *configName, const char *robotName=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoBlanksBetweenParams</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ab12a27f6afd07ea35e2013b49bc7cff1</anchor>
      <arglist>(bool noBlanksBetweenParams)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPermissions</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a948196938ca152e338133a66fd3416e4</anchor>
      <arglist>(bool allowFactory=true, bool rememberUnknowns=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessFileCallbacksLogLevel</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a044b232d9a87fe3efbc33667c56bcc2b</anchor>
      <arglist>(ArLog::LogLevel level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setQuiet</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a40dff42c002089873d68fc95f66adcdc</anchor>
      <arglist>(bool isQuiet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSaveUnknown</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ac5a5dff0ebf4bf80d0861d419b4ed45f</anchor>
      <arglist>(bool saveUnknown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSectionComment</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>af464029663cdae8d46c20ad96536c801</anchor>
      <arglist>(const char *sectionName, const char *comment)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTranslator</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a7c4d8dd913d29cd5ceab40e40ef79ccd</anchor>
      <arglist>(ArConfig *xlatorConfig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useArgumentParser</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a9e01acebbebaf4f6c9dc01032c1016d2</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeFile</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>af3c8626c844828f2ce632cc7027a7a67</anchor>
      <arglist>(const char *fileName, bool append=false, std::set&lt; std::string &gt; *alreadyWritten=NULL, bool writeExtras=false, std::list&lt; std::string &gt; *sectionsToWrite=NULL, ArPriority::Priority highestPriority=ArPriority::FIRST_PRIORITY, ArPriority::Priority lowestPriority=ArPriority::LAST_PRIORITY)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeResourceFile</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ab387604480907306e4d40baf384bca8b</anchor>
      <arglist>(const char *fileName, bool append=false, std::set&lt; std::string &gt; *alreadyWritten=NULL, std::list&lt; std::string &gt; *sectionsToWrite=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeResourceFile</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ae8d0136f8cec27a1212c7d87b69ec444</anchor>
      <arglist>(ArArgumentBuilder *builder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConfig</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>abea211003bd8bc7ffec5651677660ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>toCategoryName</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a2d1ab6907c77a26289e3498f1eda0822</anchor>
      <arglist>(const char *categoryName)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>CATEGORY_DEBUG</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a8c9adb5583aeb6130f0505f76b75d8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>CATEGORY_FLEET</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a0e451f122ad94dd8ac406c1f34bbe058</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>CATEGORY_ROBOT_INTERFACE</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a4ed19449f219f48e1193f002f552e218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>CATEGORY_ROBOT_OPERATION</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a7b9f82d180f40c3cfb294d93803a2b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>CATEGORY_ROBOT_PHYSICAL</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a7a5bc4d6758447fb03fd465e4769b3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>CATEGORY_SECURITY</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ac48c755ba762605c99136208b3523c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeAllUnsetValues</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a61ebd397104ea0a3438cb828684a630f</anchor>
      <arglist>(bool isRemovingUnsetSectionsOnly)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeSection</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a2cc699b7f26a88c18f1cdb7eee6b0a99</anchor>
      <arglist>(ArConfigSection *section, FILE *file, std::set&lt; std::string &gt; *alreadyWritten, bool writeExtras, ArPriority::Priority highestPriority, ArPriority::Priority lowestPriority)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeSectionResource</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a27b12a37c634f00269427d88717d75fe</anchor>
      <arglist>(ArConfigSection *section, FILE *file, std::set&lt; std::string &gt; *alreadyWritten)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::list&lt; std::string &gt; &gt;</type>
      <name>myCategoryToSectionsMap</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a06dc10043408cdf9436ada387bac1505</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myConfigName</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a3f5d55dd3edbd0de0f84a60bd21aa8c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myConfigVersion</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>a4ba8c9488ea0ef9df184b40670c5126e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLogPrefix</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ae8c69ef2a1032fedf1055c91bef610f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myRobotName</name>
      <anchorfile>classArConfig.html</anchorfile>
      <anchor>ac733472e3ea225469dbb695fa4667db2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConfigArg</name>
    <filename>classArConfigArg.html</filename>
    <member kind="enumvalue">
      <name>DEFAULT_DOUBLE_PRECISION</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ac129c8ba59ff57f93ef49146976d678aa6ea52df13630e4ee14f871770312de00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_COUNT</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ac129c8ba59ff57f93ef49146976d678aacbe07a98c243cf727663a3c862e4e655</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESTART_LEVEL_COUNT</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ac129c8ba59ff57f93ef49146976d678aae8573d9e25b3720b5a5e9b0327250e0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91ab48f22730d36ce1ac6c05e88aa084436</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CPPSTRING</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a0a78c93556b3f2090b92804243a8cb33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT_DOUBLE_PRECISION</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ac129c8ba59ff57f93ef49146976d678aa6ea52df13630e4ee14f871770312de00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DESCRIPTION_HOLDER</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91ae0772cec0ff4c4ebc29d9da58bcb7816</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a171ce2f2e5be0a0c3fcf353027460941</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTOR</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a9ee0add841c77ba2e0962ca78f68fb5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a54ffcc3df8e85cb3ab6f5610a4105ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a311e79ffe267d1c4e1fbff8383e1f6c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_TYPE</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91ad7be93f301dab7072c3ff7dac9b6b231</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a69ec8df18217418cb87408404d062776</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST_HOLDER</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91ab6820d5b7cb23af3916183ccb03c28d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESTART_LEVEL_COUNT</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ac129c8ba59ff57f93ef49146976d678aae8573d9e25b3720b5a5e9b0327250e0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RestartLevel</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a8a64fa6de67f3af8152cc323aae7d96f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEPARATOR</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91ab99136c46b0d7bcd6d77c5d96135e79c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a25de2307168b4f4b006b3ac1ed5416d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_HOLDER</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a76bf139786c33f70aa07709e77704975</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a311e79ffe267d1c4e1fbff8383e1f6c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a54ffcc3df8e85cb3ab6f5610a4105ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a171ce2f2e5be0a0c3fcf353027460941</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a25de2307168b4f4b006b3ac1ed5416d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91ab48f22730d36ce1ac6c05e88aa084436</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTOR</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a9ee0add841c77ba2e0962ca78f68fb5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DESCRIPTION_HOLDER</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91ae0772cec0ff4c4ebc29d9da58bcb7816</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_HOLDER</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a76bf139786c33f70aa07709e77704975</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEPARATOR</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91ab99136c46b0d7bcd6d77c5d96135e79c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CPPSTRING</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a0a78c93556b3f2090b92804243a8cb33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91a69ec8df18217418cb87408404d062776</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST_HOLDER</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91ab6820d5b7cb23af3916183ccb03c28d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_TYPE</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab5871417869e34621addf786cb0c3b91ad7be93f301dab7072c3ff7dac9b6b231</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_COUNT</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ac129c8ba59ff57f93ef49146976d678aacbe07a98c243cf727663a3c862e4e655</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a4dc26111a0d92fedc7d820a7075a9e41</anchor>
      <arglist>(const ArConfigArg &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addToFileParser</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab104ee7566b53f9c848b5d4e5ec672dc</anchor>
      <arglist>(ArFileParser *parser, ArRetFunctor3C&lt; bool, ArConfig, ArArgumentBuilder *, char *, size_t &gt; *parserCB, const char *logPrefix=&quot;&quot;, bool isQuiet=false) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aa6441f6cb12b715a3b01a40b6232fcaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a728d84b5409346b7450f0cc68be17967</anchor>
      <arglist>(const char *name, int *pointer, const char *description=&quot;&quot;, int minInt=INT_MIN, int maxInt=INT_MAX)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a38f9df9b7717eea72078e68088dc31c4</anchor>
      <arglist>(const char *name, short *pointer, const char *description=&quot;&quot;, int minInt=SHRT_MIN, int maxInt=SHRT_MAX)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aaf8ce4449ca8cb3183033e4e7e2685f5</anchor>
      <arglist>(const char *name, unsigned short *pointer, const char *description=&quot;&quot;, int minInt=0, int maxInt=USHRT_MAX)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a88089639b7bd0260de0f98fcf2846ab4</anchor>
      <arglist>(const char *name, unsigned char *pointer, const char *description=&quot;&quot;, int minInt=0, int maxInt=255)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>af5c68cc6c5a53e4f7b5d9e4d74a5bcbb</anchor>
      <arglist>(const char *name, double *pointer, const char *description=&quot;&quot;, double minDouble=-HUGE_VAL, double maxDouble=HUGE_VAL, int precision=DEFAULT_DOUBLE_PRECISION)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>af8864f39b2eae44d4d79144c603a68c3</anchor>
      <arglist>(const char *name, bool *pointer, const char *description=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab56dec12d8676a446a362398ec4a76a4</anchor>
      <arglist>(const char *name, char *str, const char *description, size_t maxStrLen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a7f7cd3e6479354044ed8fc457d899cfc</anchor>
      <arglist>(const char *name, const char *str, const char *description)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ae1bde5bc91553774a510d1ab4126fbe5</anchor>
      <arglist>(const char *name, std::string *str, const char *description)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a91ffb38d6b8941efe4fecd0848c52592</anchor>
      <arglist>(const char *name, int val, const char *description=&quot;&quot;, int minInt=INT_MIN, int maxInt=INT_MAX)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a5ae19430d1ae8b2cba1e72fff438caee</anchor>
      <arglist>(const char *name, double val, const char *description=&quot;&quot;, double minDouble=-HUGE_VAL, double maxDouble=HUGE_VAL, int precision=DEFAULT_DOUBLE_PRECISION)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab199c5532dcbea8ce372fe7400e8909e</anchor>
      <arglist>(const char *name, bool val, const char *description=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a586aaab1a8a21d6cfe678204db4ade75</anchor>
      <arglist>(const char *name, ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt; *setFunctor, ArRetFunctor&lt; const std::list&lt; ArArgumentBuilder * &gt; * &gt; *getFunctor, const char *description)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>af9952067ba6eb42c8720f79265b39a86</anchor>
      <arglist>(const char *str, Type type=DESCRIPTION_HOLDER)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aa8a92145a72e41a94a9d2997c44cf9a0</anchor>
      <arglist>(const char *name, const char *str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ae907e17ff71d554dd4f73f76da245d32</anchor>
      <arglist>(Type type, const char *name, const char *description)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a39bae4136caac56cdf2b9f3ddb0ce951</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab66ed28727f60f3f8f9288aa12fb4925</anchor>
      <arglist>(const char *argName, const ArConfigArg &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a8232e825365e76bc27199f93f44335ce</anchor>
      <arglist>(const ArConfigArg &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearValueSet</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ae322bf4e7c7ea3b0a8c7ce0a1ccad728</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyAndDetach</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aeb4600d1823187bd9a3e68ca0b2bfd8a</anchor>
      <arglist>(const ArConfigArg &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copyTranslation</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>afc2ec26976304dcf6719f5f67fbbdea2</anchor>
      <arglist>(const ArConfigArg &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>const ArConfigArg *</type>
      <name>findArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a270a26b6d9f2cd77d84ef7c1292e7008</anchor>
      <arglist>(const char *childParamName) const </arglist>
    </member>
    <member kind="function">
      <type>ArConfigArg *</type>
      <name>findArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>afb3d5976193f1be1be146cb591393589</anchor>
      <arglist>(const char *childParamName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAncestorList</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>abafb0258c9233ab6ccba423aed09e5f6</anchor>
      <arglist>(std::list&lt; ArConfigArg * &gt; *ancestorListOut)</arglist>
    </member>
    <member kind="function">
      <type>const ArConfigArg *</type>
      <name>getArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aa395103f7afe992d299b3ea350316a6c</anchor>
      <arglist>(size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>ArConfigArg *</type>
      <name>getArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a6ac059e3feb263069a0ca0defba271d2</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getArgCount</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ae8c24d0de2e3de80aec274cff19ac588</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; ArConfigArg &gt;</type>
      <name>getArgs</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aaf958df0afee61c9e64cd0ebf3b6b670</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; ArArgumentBuilder * &gt; *</type>
      <name>getArgsWithFunctor</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a77691d10773bf0f6e9e621dd937b31da</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBool</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a6947bf502281e7f23d84f2a6bf11ff70</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>ArPriority::Priority</type>
      <name>getConfigPriority</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ae7daa2a0bff3e27ac0673ddb986b459f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getCppString</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aaed1e576d700281d19bbd1b9e3f7a22b</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>getCppStringPtr</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a4e123cfa4681ff7f1e05f3d8045c1169</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getDescendantArgCount</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a70e72216d80fca946ead26bd407f2c2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDescription</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a4ab496e5f8c10a78273651442d107596</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDisplayHint</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a4589173ca70339a0e3c5575f4d19953e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDouble</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a4824990389d40eaabb962b87e8575f14</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDoublePrecision</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a4b4b3d873423880c64faafeafcb0a9ab</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtraExplanation</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a2a457ef813c522ff956ee57783c387ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInt</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>afe1bddb64a2e98d7cbdfd9b17978814a</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxDouble</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a7f6082995725adaee1f344b5c9141d2d</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxInt</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a3f594cb86861867df558028e0ed66a4c</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinDouble</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab6e48add511a33e021023e99590e0a8b</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinInt</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aa59c5538e5e4c3b15ce0bbbb445aeeb3</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a8263379657a6da257f22b7ec16432a2c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArConfigArg *</type>
      <name>getParentArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a99cdc057ae0184a855e96b8cd68b14e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getParentPathName</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ae2e1252f087219cacb1a221c36b25e5b</anchor>
      <arglist>(char separator= &apos;|&apos;) const </arglist>
    </member>
    <member kind="function">
      <type>RestartLevel</type>
      <name>getRestartLevel</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ad0380d44f61073e72ded9dbd8f19ce42</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getString</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>acf6e9ce00a54c6d780a1b9a1caef0e95</anchor>
      <arglist>(bool *ok=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSuppressChanges</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a1a818a6712fe694dba63aaa4bea436a5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const ArConfigArg *</type>
      <name>getTopLevelArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aeb6512a556f6a4e3fa42de639af221d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArConfigArg::Type</type>
      <name>getType</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a207d71f486466b16b2066ce748b3e1c3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasArgs</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a3599ff9e9cb03e86483622a20d3b4642</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasExternalDataReference</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a3e3813470ac6c37faa95425c59a3c4a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMaxBound</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a39a3b8eb64e5a9b3d7e9ceb4691a831c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMinBound</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a5f86cc3f163504b238317eac34798ced</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isListType</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a79a8ed744f200d41588ed5eb9ffa717b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaceholder</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a096a6c8aaf7ff6d86f374db31709af1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSerializable</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab2ed5839894b0ecde179fffd729acfcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTranslated</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a0753ec072438f4a1ee53846241f7d400</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValueEqual</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a8ba7711a86ac7c822e4b0e6add046ed1</anchor>
      <arglist>(const ArConfigArg &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValueSet</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a07fdd7776237e1685456a4c6ab5676f9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a1672a78d01749fde2c15de662f0af8f5</anchor>
      <arglist>(bool verbose=false, int indentCount=1, const char *logPrefix=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>ArConfigArg &amp;</type>
      <name>operator=</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a5cdb637b5cf582908bbe9d1ec594a5ce</anchor>
      <arglist>(const ArConfigArg &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgument</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a8855b8b2c654a954968582fdff0523f6</anchor>
      <arglist>(ArArgumentBuilder *arg, char *errorBuffer, size_t errorBufferLen, const char *logPrefix=&quot;&quot;, bool isQuiet=false, bool *changed=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseResource</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a5f3fde13e12acbe1b8633d1d6c078d4a</anchor>
      <arglist>(ArArgumentBuilder *arg, char *errorBuffer, size_t errorBufferLen, const char *logPrefix=&quot;&quot;, bool isQuiet=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseSocket</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a2660c0cc46944021eb85e2269a7b09f6</anchor>
      <arglist>(const ArArgumentBuilder &amp;args, char *errorBuffer, size_t errorBufferLen)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>promoteList</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab98373cd1383cbbea9d5d7118accb011</anchor>
      <arglist>(const ArConfigArg &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a31167a2b8929fd4dd84a3dd2cd01a671</anchor>
      <arglist>(const ArConfigArg &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceSpacesInName</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a4c0da41c64ba14278ee04c88981a37ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setArgWithFunctor</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aff8dbdbdfde2a2954b6c8bcdf32d3b0f</anchor>
      <arglist>(ArArgumentBuilder *argument, char *errorBuffer=NULL, size_t errorBufferLen=0, bool doNotSet=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setBool</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a59cb64c658cce9197878993342be6333</anchor>
      <arglist>(bool val, char *errorBuffer=NULL, size_t errorBufferLen=0, bool doNotSet=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfigPriority</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a080df696a9ea9b435ef174206b8dfd41</anchor>
      <arglist>(ArPriority::Priority priority)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a91d7667bc0da9a024f047d3e16f63193</anchor>
      <arglist>(const char *description)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplayHint</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a35025b88f24c2936354fdd0b51e6276a</anchor>
      <arglist>(const char *hintText)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDouble</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a03fd6b0e9d11f5a8432dfd70dc1dd35b</anchor>
      <arglist>(double val, char *errorBuffer=NULL, size_t errorBufferLen=0, bool doNotSet=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraExplanation</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a3a06e01a837119c30f3073f8f7400827</anchor>
      <arglist>(const char *extraExplanation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreBounds</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a65e96f10286dede49a8d21ad9fda39d7</anchor>
      <arglist>(bool ignoreBounds=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setInt</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a8387b839b8b3da7680865f302632d4b6</anchor>
      <arglist>(int val, char *errorBuffer=NULL, size_t errorBufferLen=0, bool doNotSet=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestartLevel</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a428cc0644d0925fec0e3e9a164af03fc</anchor>
      <arglist>(RestartLevel level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSerializable</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ab8a587eee51cba11b4f252547ce9ad8c</anchor>
      <arglist>(bool isSerializable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setString</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aff66689b725797d8aeb69f410d40acd0</anchor>
      <arglist>(const char *str, char *errorBuffer=NULL, size_t errorBufferLen=0, bool doNotSet=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSuppressChanges</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>afb341a6bab460c840bccd85d46e9e76b</anchor>
      <arglist>(bool suppressChanges)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTranslated</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ad5d34fc2e9fe2a01104a1a7352c7701a</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a567c44f80d1a11a6cb4c136ed1789ad1</anchor>
      <arglist>(const ArConfigArg &amp;source, bool isVerifyArgNames=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValueSet</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ad42df69f4073c15391634968e4cc1266</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeArguments</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a65f37ef4748b8ca0e8394b6d71eb7e33</anchor>
      <arglist>(FILE *file, char *lineBuf, int lineBufSize, int startCommentColumn, bool isWriteExtra=false, const char *logPrefix=&quot;&quot;, int indentLevel=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeBounds</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a6d7a0b56148c5eb11a5100f5fc1517c4</anchor>
      <arglist>(char *line, size_t lineLen, const char *logPrefix=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeInfo</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a39236859f0999ca744c3c2bc7fe9963b</anchor>
      <arglist>(ArSocket *socket, const char *intro) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeName</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a8fa0811f8eaad09c0099ec817b53cd26</anchor>
      <arglist>(char *lineBuf, int lineBufSize, int indentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeResource</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a19b812ee89c93e5b1c86b282d4ee2674</anchor>
      <arglist>(FILE *file, char *lineBuf, int lineBufSize, char separatorChar, const char *sectionName, const char *logPrefix=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeValue</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a0503f6527db485886eca3cf85bbfd40e</anchor>
      <arglist>(ArSocket *socket, const char *intro) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConfigArg</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>adeb8ac9e7e25b25bc7bde22708e6b26d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNone</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>af4ff16d2d355e2daf3a7d384cdcf3420</anchor>
      <arglist>(const char *argText)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isResourceTopLevel</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ae090923bce99947d77ae17f0c8479d60</anchor>
      <arglist>(ArArgumentBuilder *arg, const char *logPrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>parseResourceArgName</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>af15b7c2e289d5e17169d813a7c874586</anchor>
      <arglist>(ArArgumentBuilder *arg, const char *logPrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>parseResourceArgText</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ad440325d1634d91419c0b7602253b2a6</anchor>
      <arglist>(const char *argText, char *bufOut, size_t bufLen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>parseResourceDescription</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aeaec305fe13f3bec9d4c37a61b36ea18</anchor>
      <arglist>(ArArgumentBuilder *arg, const char *logPrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>parseResourceExtra</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aff0b8dd500a0b4203685c6cb547245fc</anchor>
      <arglist>(ArArgumentBuilder *arg, const char *logPrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::list&lt; std::string &gt;</type>
      <name>parseResourceParentPath</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a57e07103ab75dc2a6849522752a4cade</anchor>
      <arglist>(ArArgumentBuilder *arg, char separator= &apos;|&apos;, const char *logPrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>parseResourceSectionName</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a6264d9a12589f68bb3356a80097b400f</anchor>
      <arglist>(ArArgumentBuilder *arg, const char *logPrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>parseResourceType</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a37e62546fdec9af0e1181638e80b3ebb</anchor>
      <arglist>(ArArgumentBuilder *arg, const char *logPrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RestartLevel</type>
      <name>restartLevelFromString</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a3b3366a390627563a7d4d76e058fc698</anchor>
      <arglist>(const char *text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::list&lt; std::string &gt;</type>
      <name>splitParentPathName</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>aa1b931073fb1d1baa51c8a378a8680d0</anchor>
      <arglist>(const char *parentPathName, char separator= &apos;|&apos;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>toString</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a5facbba0e14afebaf0b019cda65b7162</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>toString</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a42b95b519c3b86d3c0094319c3116c73</anchor>
      <arglist>(RestartLevel r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>typeFromString</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a8537a7a7c956a461333ad10df661ed4f</anchor>
      <arglist>(const char *text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>writeResourceHeader</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a4eab6bac126bf4783e8fac0b14e17008</anchor>
      <arglist>(FILE *file, char *lineBuf, int lineBufSize, char separatorChar, const char *sectionTitle, const char *logPrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>writeResourceSectionHeader</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>ad856fa9634c06926f93f45e14aa5423a</anchor>
      <arglist>(FILE *file, char *lineBuf, int lineBufSize, char separatorChar, const char *sectionName, const char *sectionDesc, const char *sectionExtra, const char *sectionDisplayName, bool isTranslated, const char *logPrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>LIST_BEGIN_TAG</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a92b38b4895dd0a8bc423973ea9d0cdec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>LIST_END_TAG</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a2b7ae68c05d8ac84b8e5b76be1e5ef89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>NEW_RESOURCE_TAG</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a438d0dabf334422167621da858c7f0e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>NULL_TAG</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a3007c8814e6ca6c9d90b49a9166ac30a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>writeMultiLineComment</name>
      <anchorfile>classArConfigArg.html</anchorfile>
      <anchor>a6162474d73559d983bfcf1e27e938fb3</anchor>
      <arglist>(const char *comment, FILE *file, char *lineBuf, int lineBufSize, const char *startComment)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConfigGroup</name>
    <filename>classArConfigGroup.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addConfig</name>
      <anchorfile>classArConfigGroup.html</anchorfile>
      <anchor>a2d852ce1efd478e8b3d6f41abba4dd15</anchor>
      <arglist>(ArConfig *config)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConfigGroup</name>
      <anchorfile>classArConfigGroup.html</anchorfile>
      <anchor>a011a98e251b16cbd4152b9e1ed592e9c</anchor>
      <arglist>(const char *baseDirectory=NULL)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBaseDirectory</name>
      <anchorfile>classArConfigGroup.html</anchorfile>
      <anchor>a795aa0a325576332b5a43fbbebf82905</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseFile</name>
      <anchorfile>classArConfigGroup.html</anchorfile>
      <anchor>a3e4fbe4328e56d0fe93905bcb4bf092b</anchor>
      <arglist>(const char *fileName, bool continueOnError=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reloadFile</name>
      <anchorfile>classArConfigGroup.html</anchorfile>
      <anchor>a0a321e6d571866790bb055d230381b70</anchor>
      <arglist>(bool continueOnError=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remConfig</name>
      <anchorfile>classArConfigGroup.html</anchorfile>
      <anchor>a6d6d6031e9f548ae0fdea18e3550b226</anchor>
      <arglist>(ArConfig *config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBaseDirectory</name>
      <anchorfile>classArConfigGroup.html</anchorfile>
      <anchor>a6c06f0d71dd1b210c10c322e9b09cc17</anchor>
      <arglist>(const char *baseDirectory)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeFile</name>
      <anchorfile>classArConfigGroup.html</anchorfile>
      <anchor>afe8804421602679261e55f38f7ded26f</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArConfigGroup</name>
      <anchorfile>classArConfigGroup.html</anchorfile>
      <anchor>af9a8c4b6e5646809ff0d69882308de64</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConfigSection</name>
    <filename>classArConfigSection.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>containsParamsOfPriority</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>a70921ee2802a046a52d45155463071ec</anchor>
      <arglist>(ArPriority::Priority highestPriority, ArPriority::Priority lowestPriority)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyAndDetach</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>ae72cba0f78e7f68406bb528c3d22af85</anchor>
      <arglist>(const ArConfigSection &amp;section)</arglist>
    </member>
    <member kind="function">
      <type>ArConfigArg *</type>
      <name>findParam</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>a7ff19dd5dfd1157dc989c0f204ab0669</anchor>
      <arglist>(const char *paramName, bool isAllowStringHolders=false)</arglist>
    </member>
    <member kind="function">
      <type>ArConfigArg *</type>
      <name>findParam</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>a7958328b2bdd57768ca6071cb51ae2f8</anchor>
      <arglist>(const std::list&lt; std::string &gt; &amp;paramNamePath, bool isAllowHolders=false)</arglist>
    </member>
    <member kind="function">
      <type>ArConfigArg *</type>
      <name>findParam</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>a9206d93cc0de7c29fc3aa993b74e470c</anchor>
      <arglist>(const char **paramNamePath, int pathLength, bool isAllowHolders=false)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCategoryName</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>a24d4f2b296301ed3c44d1c3dadd6e3c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getComment</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>a428deea27ea73f99b323e10ada189b2c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>a80860a55d4ffa2121e57d0eaed7d2924</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remStringHolder</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>a846ccb292dd10706c2671ea5f59b0d48</anchor>
      <arglist>(const char *paramName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuiet</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>a4b2d9a59eb1d5d85b9f7e21e5b408c82</anchor>
      <arglist>(bool isQuiet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setCategoryName</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>ac7ae0d482b7eee4d5b905a626d5f1030</anchor>
      <arglist>(const char *categoryName)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>ArConfig</name>
      <anchorfile>classArConfigSection.html</anchorfile>
      <anchor>a0764337d3c5d28f9348c4b123708338e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctor1C</name>
    <filename>classArConstFunctor1C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor1</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor1C</name>
      <anchorfile>classArConstFunctor1C.html</anchorfile>
      <anchor>ae8ffc47c386479d33274e60b1aa73cf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor1C</name>
      <anchorfile>classArConstFunctor1C.html</anchorfile>
      <anchor>af09ddf2521e434b16646a1c8c6d8b35b</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor1C</name>
      <anchorfile>classArConstFunctor1C.html</anchorfile>
      <anchor>ab1221afaa5236e4244bb5ad36c010192</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor1C</name>
      <anchorfile>classArConstFunctor1C.html</anchorfile>
      <anchor>a75e8dfc6f13435dd1a03c39f38cf6d73</anchor>
      <arglist>(T *obj, void(T::*func)(P1) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor1C</name>
      <anchorfile>classArConstFunctor1C.html</anchorfile>
      <anchor>ac2ee789d0bd9c03f0463c91266880731</anchor>
      <arglist>(T *obj, void(T::*func)(P1) const, P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor1C.html</anchorfile>
      <anchor>a342d8b23d52fa9a5bdb999fd13861e78</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor1C.html</anchorfile>
      <anchor>ae76448a81a525d30b01081cd5b1bd6ff</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArConstFunctor1C.html</anchorfile>
      <anchor>a55801a4c5aa7096b4f88b6e4773b39e8</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctor1C.html</anchorfile>
      <anchor>a9462b4d7a0319c089393de73d7667b7b</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctor1C.html</anchorfile>
      <anchor>a2a94a09cf0a2ca1ef91987b621f9e72f</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctor1C</name>
      <anchorfile>classArConstFunctor1C.html</anchorfile>
      <anchor>add0a31487917398c699faeba7ea615df</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctor2C</name>
    <filename>classArConstFunctor2C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor2</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor2C</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>a477720144b35e267d3e30fb0ed38525b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor2C</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>af606b8007ef8b04be343b21eb6bec3d7</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor2C</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>add4f92ea4de3cffbcaa64fc685589796</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor2C</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>a2f7a543878c18f255c4fbe8a44cfc4e1</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor2C</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>a2d743481e1e6a968567e1219fe48f3b6</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor2C</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>a7f3487491e555581fecb5c0694065a44</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor2C</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>a8c079094bd65e7fd4211784a8a535999</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>a854cabdf58fb5c97e1d22e8d30a8c86c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>ac94d70f39a13a690e58ada15cd72ef19</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>ad1bfdf0e98a076194e5d25143664fa54</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>aa1ffb14ee59f6da1ee8c65d233ab01be</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>ac2330b3c833262c278ce3aa31aa8b96c</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>a4e5e4ce55e4c195143ed1ed0550b5dba</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>adc0a15429c128b08c8426d3c5923cde9</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctor2C</name>
      <anchorfile>classArConstFunctor2C.html</anchorfile>
      <anchor>a50b2886ba0b6ee5ce7a56a99d8ca87ec</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctor3C</name>
    <filename>classArConstFunctor3C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor3</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor3C</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>a79091c5ca835214d76a36577cd3aa448</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor3C</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>a15f9ca7b1ffcc8131894c4a1d9b95503</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor3C</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>ad8ca1829d349a96efc41068adcea1d25</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor3C</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>a9530ca44a6159d11cd990ed3793bfc93</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor3C</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>ac3d97b8a1b9600501a99adbd8e1167b8</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3) const, P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor3C</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>ae4dcaf1ac8fc3ae2f65d94441bea4ef9</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor3C</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>abdb1e06dcfeed21be0af09ce0e0fe35e</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor3C</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>a0e1c1f42dda1681d38b56bc6895b07e0</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor3C</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>a999657cf047037d65a54d4c86050c154</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3) const, P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>a737cfe78ad41851cef6f39d890ce5f4d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>a80b975c1336176ca6c449ed59c15cf63</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>aa2913f16e8cf1ca5383c4c33628da69b</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>a74a2b7c59e49a56199e66b70fb5bbd09</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>aa3478e3f7bc64cae21c7e4d2af09ef95</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>a764aba00e52abb6c9b37b7bbc271a904</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>adc9d050c931bb9151b8dfdf3e95d3515</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>a1ca60714160a97949777a4e10107295f</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>a9914860c78bba7200e6f5beb86bcdf5c</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctor3C</name>
      <anchorfile>classArConstFunctor3C.html</anchorfile>
      <anchor>ad7b250c763da61341c4b81030fa03b02</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctor4C</name>
    <filename>classArConstFunctor4C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor4</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>ade01253393190af7cc8e52448b25907e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>ace44b612783284fdaf0036e2e8c781a6</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>aaa9789c851432f8dd1f861ea86e53735</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a9852e6ee5f28d1b181e502b10e3a7bb1</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>aa4ebe9ca1a0ea3e713a6b321937852b2</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a103b4ca9f6c252b969f6d27ef0c54e01</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a1c46f9ce60ecb65614f09a0fa137830d</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a809ca6e46151a6b80fc645e8a64dc2aa</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>ada68fd472aa0371a3f1426b12265a846</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a475c4db7153fb218e7c5e0c27d716956</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a96160acd8dcf1bffb60805a0aede345c</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a6db3e5156dc68f22accaf8ff99a827dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a463676be8cfab7f62c86170175184a10</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a6708c7cb5ab359a388a2901d79b0734a</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a4fdef5d31b23bcdc4b39e3257f6affd8</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>ab7354222d5ba9a499bd3e5a06098a363</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a3c800d54437c90b75bf08b0def6013bf</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a3556475423af5b2e7d0eaf2e7c99056a</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a23d4ed715f8c3a3950b02249bd84a4f8</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>af6da485893c01d404f48a6cb0db53fc3</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a044e535ad6feb98848f595c64819769e</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>ae2ae506f41b49cba1934f20c040793d1</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctor4C</name>
      <anchorfile>classArConstFunctor4C.html</anchorfile>
      <anchor>a1966c41765e03891d270152fa7534372</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctor5C</name>
    <filename>classArConstFunctor5C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor5</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a06eb414ccaac62f7066897e007ebe675</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a3a04b85cec4de2d6a17ff78a2bf85466</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a9950fe2c9b4db18a4e1391c478ab51b5</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>ad14acb4388e104987bdd948ac60b977d</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>ae4d72b9863b07cd945ef361111f2a90b</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a07c5fd5247aaf2dc207213f52d4963a9</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>ab477cac73ab8e329a527a49b04c910f4</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>afcfa6d654121f2b2c920b60d4dca72d3</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>aa2c6987f96e99f4c99cc77678a25de5b</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>ae0eef0670cc9fc9ffbf2ed2771d1e7e3</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>ab5b07b47b6e97de38c171b4ae61a4c72</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a03ac36503992a46ab42d46b5a309a929</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a69b14e7e7ac6450a7672d0de52a275c6</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>ad2cb384fc887930fc91177c4d1083d1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a6dd5b56022cee2ccc4146ac2d0039f51</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>afa030a4618ec877ce72abd217a9498f4</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>ad413c581350b15965ecce65ef797134c</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a84358043d673645d6cc7ed0eb3f0f4a2</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a91214b8795ef112626f7a0d29c1fa5fb</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>af99f7b83574dc766d08bd0437b6e5088</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>af7c7352d084cbf187b5d058309814308</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a9c5dae6bd660ce9b2c65fe0d4a586e3e</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a1a60053d3cf48fa0e62edc7893b1568d</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP5</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>aecb82e3d4223c13e9d04ccbf1b723d27</anchor>
      <arglist>(P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>ab8169db493548c5e4a40363a5de75d74</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>a0e7b9302547485370f30642327274f36</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctor5C</name>
      <anchorfile>classArConstFunctor5C.html</anchorfile>
      <anchor>af03690173222eb6d1bd5d95a309c13c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctorC</name>
    <filename>classArConstFunctorC.html</filename>
    <templarg>T</templarg>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ab65d586c1b823a51e2c22383ca24716d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af62139481aafc1368fe47ad792b8f00a</anchor>
      <arglist>(T &amp;obj, void(T::*func)(void) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af248bb8e2c3e468e6f055028eba9c434</anchor>
      <arglist>(T *obj, void(T::*func)(void) const)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a5daaec8771e059255679a61506c7ce7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ae2f3f2bf697bec02777dc4a976549599</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a2a5e05bfc71e61e6042ffb543e7c4706</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a13be479df2c757ddb262e8bbe30d14c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctorC&lt; ArBatteryConnector &gt;</name>
    <filename>classArConstFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ab65d586c1b823a51e2c22383ca24716d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af62139481aafc1368fe47ad792b8f00a</anchor>
      <arglist>(ArBatteryConnector &amp;obj, void(ArBatteryConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af248bb8e2c3e468e6f055028eba9c434</anchor>
      <arglist>(ArBatteryConnector *obj, void(ArBatteryConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a5daaec8771e059255679a61506c7ce7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ae2f3f2bf697bec02777dc4a976549599</anchor>
      <arglist>(ArBatteryConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a2a5e05bfc71e61e6042ffb543e7c4706</anchor>
      <arglist>(ArBatteryConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a13be479df2c757ddb262e8bbe30d14c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctorC&lt; ArDaemonizer &gt;</name>
    <filename>classArConstFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ab65d586c1b823a51e2c22383ca24716d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af62139481aafc1368fe47ad792b8f00a</anchor>
      <arglist>(ArDaemonizer &amp;obj, void(ArDaemonizer::*func)(void) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af248bb8e2c3e468e6f055028eba9c434</anchor>
      <arglist>(ArDaemonizer *obj, void(ArDaemonizer::*func)(void) const)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a5daaec8771e059255679a61506c7ce7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ae2f3f2bf697bec02777dc4a976549599</anchor>
      <arglist>(ArDaemonizer *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a2a5e05bfc71e61e6042ffb543e7c4706</anchor>
      <arglist>(ArDaemonizer &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a13be479df2c757ddb262e8bbe30d14c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctorC&lt; ArLaserConnector &gt;</name>
    <filename>classArConstFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ab65d586c1b823a51e2c22383ca24716d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af62139481aafc1368fe47ad792b8f00a</anchor>
      <arglist>(ArLaserConnector &amp;obj, void(ArLaserConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af248bb8e2c3e468e6f055028eba9c434</anchor>
      <arglist>(ArLaserConnector *obj, void(ArLaserConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a5daaec8771e059255679a61506c7ce7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ae2f3f2bf697bec02777dc4a976549599</anchor>
      <arglist>(ArLaserConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a2a5e05bfc71e61e6042ffb543e7c4706</anchor>
      <arglist>(ArLaserConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a13be479df2c757ddb262e8bbe30d14c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctorC&lt; ArLCDConnector &gt;</name>
    <filename>classArConstFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ab65d586c1b823a51e2c22383ca24716d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af62139481aafc1368fe47ad792b8f00a</anchor>
      <arglist>(ArLCDConnector &amp;obj, void(ArLCDConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af248bb8e2c3e468e6f055028eba9c434</anchor>
      <arglist>(ArLCDConnector *obj, void(ArLCDConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a5daaec8771e059255679a61506c7ce7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ae2f3f2bf697bec02777dc4a976549599</anchor>
      <arglist>(ArLCDConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a2a5e05bfc71e61e6042ffb543e7c4706</anchor>
      <arglist>(ArLCDConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a13be479df2c757ddb262e8bbe30d14c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctorC&lt; ArPTZConnector &gt;</name>
    <filename>classArConstFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ab65d586c1b823a51e2c22383ca24716d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af62139481aafc1368fe47ad792b8f00a</anchor>
      <arglist>(ArPTZConnector &amp;obj, void(ArPTZConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af248bb8e2c3e468e6f055028eba9c434</anchor>
      <arglist>(ArPTZConnector *obj, void(ArPTZConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a5daaec8771e059255679a61506c7ce7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ae2f3f2bf697bec02777dc4a976549599</anchor>
      <arglist>(ArPTZConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a2a5e05bfc71e61e6042ffb543e7c4706</anchor>
      <arglist>(ArPTZConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a13be479df2c757ddb262e8bbe30d14c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctorC&lt; ArRobotConnector &gt;</name>
    <filename>classArConstFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ab65d586c1b823a51e2c22383ca24716d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af62139481aafc1368fe47ad792b8f00a</anchor>
      <arglist>(ArRobotConnector &amp;obj, void(ArRobotConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af248bb8e2c3e468e6f055028eba9c434</anchor>
      <arglist>(ArRobotConnector *obj, void(ArRobotConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a5daaec8771e059255679a61506c7ce7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ae2f3f2bf697bec02777dc4a976549599</anchor>
      <arglist>(ArRobotConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a2a5e05bfc71e61e6042ffb543e7c4706</anchor>
      <arglist>(ArRobotConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a13be479df2c757ddb262e8bbe30d14c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstFunctorC&lt; ArSonarConnector &gt;</name>
    <filename>classArConstFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ab65d586c1b823a51e2c22383ca24716d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af62139481aafc1368fe47ad792b8f00a</anchor>
      <arglist>(ArSonarConnector &amp;obj, void(ArSonarConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>af248bb8e2c3e468e6f055028eba9c434</anchor>
      <arglist>(ArSonarConnector *obj, void(ArSonarConnector::*func)(void) const)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a5daaec8771e059255679a61506c7ce7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>ae2f3f2bf697bec02777dc4a976549599</anchor>
      <arglist>(ArSonarConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a2a5e05bfc71e61e6042ffb543e7c4706</anchor>
      <arglist>(ArSonarConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstFunctorC</name>
      <anchorfile>classArConstFunctorC.html</anchorfile>
      <anchor>a13be479df2c757ddb262e8bbe30d14c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstRetFunctor1C</name>
    <filename>classArConstRetFunctor1C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor1</base>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor1C</name>
      <anchorfile>classArConstRetFunctor1C.html</anchorfile>
      <anchor>a2dd77c3590d5e5009cbe05575b30f104</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor1C</name>
      <anchorfile>classArConstRetFunctor1C.html</anchorfile>
      <anchor>a278cf6eb2da40d8f1b31dfb84b8ed5ca</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor1C</name>
      <anchorfile>classArConstRetFunctor1C.html</anchorfile>
      <anchor>afc28248e3a948cdade4c1e4c6ce74002</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor1C</name>
      <anchorfile>classArConstRetFunctor1C.html</anchorfile>
      <anchor>a3294f7c4236aecb7e566580c62629cd9</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor1C</name>
      <anchorfile>classArConstRetFunctor1C.html</anchorfile>
      <anchor>ac407cd96b44ca7eeff201ae87c0628e7</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1) const, P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor1C.html</anchorfile>
      <anchor>adde490611c3a5afccfe8c02798dda7f9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor1C.html</anchorfile>
      <anchor>aa40f9ea1e4ddb140d607c5b1f08598f4</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArConstRetFunctor1C.html</anchorfile>
      <anchor>a7cbb7d582118e8fe84738ff308b90a14</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctor1C.html</anchorfile>
      <anchor>af23e79c61655f79c73403cbee967903a</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctor1C.html</anchorfile>
      <anchor>abed655ee56b0b0aedd4d0d006162bcbb</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstRetFunctor1C</name>
      <anchorfile>classArConstRetFunctor1C.html</anchorfile>
      <anchor>ad61d4cd867ac7f69e49b332df0fc2cc2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstRetFunctor2C</name>
    <filename>classArConstRetFunctor2C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor2</base>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor2C</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>a6b2a005b79922744e8b3326026dd321a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor2C</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>a86529849d32a529a4799e315939f43e8</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor2C</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>a002afade94058cff2d7e5ec72f2f0fe1</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor2C</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>a2891eac80566a5fb86d39777a2ec8dfb</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor2C</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>afacffd7309f32a56b7e5aa303a4150e2</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor2C</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>a41dc77f6ec905f8f6d8838712cb8a003</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor2C</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>a1cf9166efcc6cdd02f91fe28406610b3</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>a76a6a2b11e8251a7b410acc2a9033a66</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>ab7efd04a39ceccbd84c63638dc2e21dc</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>ac7634cf810fe9687ddd4c3ec5512fd7c</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>abfb1abda94aa1137257910149eca8e50</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>ae9acba78d07bf7f0f43476632b83227b</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>a2f3f4a153adff511e37aa5fa4f6a8cdd</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>a8cfe6b907754a52ca7c9089ca98f9d35</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstRetFunctor2C</name>
      <anchorfile>classArConstRetFunctor2C.html</anchorfile>
      <anchor>a76628ad15d2c1ee0aca36cdb07f1599d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstRetFunctor3C</name>
    <filename>classArConstRetFunctor3C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor3</base>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor3C</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>aa524c5cb5edfa3a1d37bacaeb26dc2c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor3C</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>afb633d4194009e4b8af7fd6505890a63</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor3C</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>aa2ab7547639fcdaa8c20884652dafc27</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor3C</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>ae884b01ff3d864be75f8d92ae3e26dcc</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor3C</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>ab67f71205263c93e97aa320d1ae25b62</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3) const, P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor3C</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>a9fd6733314a4603c701fb931da600ce7</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor3C</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>ae33d5412baf323c52877cd4db944f30c</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor3C</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>a79748a4a0871c341e0d595faeb5ce5b7</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor3C</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>a40c816387b134ca2db554c5cb6ea5366</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3) const, P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>ad25ad75dd4c7f01907718f44ac01b97c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>acf445d65040035feea7e1c8e5833c6fb</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>afc8b8f7ddd6fd99eb1263115c961ec0d</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>a8e1d0f7018e72991d876a743acb18fa8</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>a046e79c2b7a73ef7c7cb01e100bbdd0c</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>a284514cce576b998fb09f07c0c11416f</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>aa3537a8abccfa3d77a2323f33a7735e0</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>afc5948ce423f1b7fcecdb586260981a1</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>ad4fb5153e00862f02f34ddb4cc6adc39</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstRetFunctor3C</name>
      <anchorfile>classArConstRetFunctor3C.html</anchorfile>
      <anchor>ab65c9ae4503e5e37f6db6873b36b2b0c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstRetFunctor4C</name>
    <filename>classArConstRetFunctor4C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor4</base>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>adfce04c8a0f7495e37d6c583c4a5ee10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a6a5da7371513a56d7ca88a1946505787</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>ae6b8ed6036b36d577949277c5df5dc46</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>ab3f4f10d34323163d30549d222a66da3</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>ac01a2c124483297ae6d4f55eac08f7d8</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4) const, P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a0518f9e71f62dda23887924d84cde464</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4) const, P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a8a29a5589d694a27d0c9a9ed9c519f93</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a72ebdd8866e8ba52020d84cceb23a842</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>af5d8bc6fb66ac592601869ababc4182f</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a2e9fbf5673376e5028885e311ee4f71c</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4) const, P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>af822cc64eccdafecf14196d1bc9d3a0c</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4) const, P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>ab0ca1034062a466290d2e54dcd99612c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a0eaccb89567972b974e670fae65da2d0</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a070e14a48bf8d1b2a9d034125b178508</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a409dabaeee21cd8edc1eadfb76d37a12</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a46d2b9142102158ca4588fc80e585e4c</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a846140714ad7bafe2492e33caa9d24ea</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>aae1e6e8e24c13661fb7010fd68b0d61c</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>ada6680291ecb9a5fa6657829ca002a6c</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a631064c189e1ba45d3e38d240439e200</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a0c6c23bdb6c3bb5c2c6efd8ee8df04f5</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>a05d741ed2bfc6aff0a526572c65308b8</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstRetFunctor4C</name>
      <anchorfile>classArConstRetFunctor4C.html</anchorfile>
      <anchor>acea43f120de764cdac564809c20d35fa</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstRetFunctor5C</name>
    <filename>classArConstRetFunctor5C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor5</base>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>ae2118dcd002b5afa75c73ea5cc8a54c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a6318b90a4f8e56bb2c9820b43d027175</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>afb1ed2a2acff2a718c8063b9dd4cf721</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a47d8d45be84db276f723a07b811cb964</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a0726f09dfe12132ced411ceb2f0c1428</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a4f13f95e2d89adaa0f0fe6094fb07bda</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a9e8d34bd2c2c7a71abeaa591b0298059</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>ad9cbb03633003a9ee5ebe21faf6fe991</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>ad7ccff2fd5b5931c4b94267bdc9ab1c7</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5) const, P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a3d581b7a70fc576c7fadaa93041f4328</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a92801338811f05ae4973f1b2d8d15bfb</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a595fac8b36bef30b4d537cce3d430dbf</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a4e56432523adf2f4c4a895c38dd12164</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5) const, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a63864a44453d1651ac55e3985ad3898c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a965f0c4e1d9f2c3f1b4136981eff763f</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a7228f6b070ae5aa2cb62ae462a340828</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>aabf403695ae835a88e2a87b4d85b0b85</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a19601ce0327103189b6bf8553de06468</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a63b0fc87b48d3123a0eaaf5a19082983</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a020bf910e4a2184a2bccaa4de6d79fed</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a3b25a9af27a2a83f090ee0d508efe5fa</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a3aa437f7a59054f4515537127e130374</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a79742a8f72a364cf93ab0a44f889f7e9</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP5</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a9b29d9499a1fcbe99fa1b404a45217b0</anchor>
      <arglist>(P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a38eb03c9e6d7d3d5104aa67f6af8812d</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a97c429b04d3e9e5d11e2cdde7398082a</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstRetFunctor5C</name>
      <anchorfile>classArConstRetFunctor5C.html</anchorfile>
      <anchor>a9859ac87c10d228b9074b178aab8135b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConstRetFunctorC</name>
    <filename>classArConstRetFunctorC.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctorC</name>
      <anchorfile>classArConstRetFunctorC.html</anchorfile>
      <anchor>a20b28a008975668999c5834c15fb07f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctorC</name>
      <anchorfile>classArConstRetFunctorC.html</anchorfile>
      <anchor>a3e73af08402cacecd9ca9d34eb3dd8a8</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(void) const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArConstRetFunctorC</name>
      <anchorfile>classArConstRetFunctorC.html</anchorfile>
      <anchor>a431fc87ac756e8ea24e4b3b2443bca31</anchor>
      <arglist>(T *obj, Ret(T::*func)(void) const)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArConstRetFunctorC.html</anchorfile>
      <anchor>a81b68a66697f0a5fd4d3a2cad0f8bfe9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctorC.html</anchorfile>
      <anchor>a5e851e4d781b5949dc700bb17eb41d87</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArConstRetFunctorC.html</anchorfile>
      <anchor>ac6613808a7869bf8ccd211c35fa8a252</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArConstRetFunctorC</name>
      <anchorfile>classArConstRetFunctorC.html</anchorfile>
      <anchor>aa3cf43e3ffd7301b95ade046234f70f0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArDaemonizer</name>
    <filename>classArDaemonizer.html</filename>
    <member kind="function">
      <type></type>
      <name>ArDaemonizer</name>
      <anchorfile>classArDaemonizer.html</anchorfile>
      <anchor>a9d94a98047b6a5b739c6019dd972215b</anchor>
      <arglist>(int *argc, char **argv, bool closeStdErrAndStdOut)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>daemonize</name>
      <anchorfile>classArDaemonizer.html</anchorfile>
      <anchor>adcaf687f2c468a61f54637c08cec7bfc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forceDaemonize</name>
      <anchorfile>classArDaemonizer.html</anchorfile>
      <anchor>ab406da001d3d8a798a8278fe20144b7a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDaemonized</name>
      <anchorfile>classArDaemonizer.html</anchorfile>
      <anchor>a19812903293026e2a654b4c5526b939f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOptions</name>
      <anchorfile>classArDaemonizer.html</anchorfile>
      <anchor>a285237981d0aec744c1eb670a7a3dfb5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArDaemonizer</name>
      <anchorfile>classArDaemonizer.html</anchorfile>
      <anchor>ad4675fe8a1ffd45d1ee03ea7b632f772</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArDataLogger</name>
    <filename>classArDataLogger.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addString</name>
      <anchorfile>classArDataLogger.html</anchorfile>
      <anchor>a07a36f6f8513d7786e5a830e36594409</anchor>
      <arglist>(const char *name, ArTypes::UByte2 maxLen, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArDataLogger.html</anchorfile>
      <anchor>a28f4fc3cf8955e837378502de3707fda</anchor>
      <arglist>(ArConfig *config)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArDataLogger</name>
      <anchorfile>classArDataLogger.html</anchorfile>
      <anchor>ad9d014f6e7182d256bbef65fe801b3e0</anchor>
      <arglist>(ArRobot *robot, const char *fileName=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor3&lt; const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; * &gt; *</type>
      <name>getAddStringFunctor</name>
      <anchorfile>classArDataLogger.html</anchorfile>
      <anchor>add7b7e1c1866e980363bf91ef07ca183</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArDataLogger</name>
      <anchorfile>classArDataLogger.html</anchorfile>
      <anchor>adc9a5bed5adf35e5ddd2663dbaecf341</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArDataTagCaseCmpOp</name>
    <filename>structArDataTagCaseCmpOp.html</filename>
  </compound>
  <compound kind="class">
    <name>ArDeviceConnection</name>
    <filename>classArDeviceConnection.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a347c85b1f6dad521cabfbca6833712ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_NEVER_OPENED</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a347c85b1f6dad521cabfbca6833712aba2a32337db15deac68c28c6c6073614f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_OPEN</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a347c85b1f6dad521cabfbca6833712abaab61fc67dfa26013b7940bbac62449da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_OPEN_FAILED</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a347c85b1f6dad521cabfbca6833712aba57899a6a6454d556eb07b44d26d09ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_CLOSED_NORMALLY</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a347c85b1f6dad521cabfbca6833712abad66561776078f16b133e18a67a31a6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_CLOSED_ERROR</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a347c85b1f6dad521cabfbca6833712aba3d77512ad91a4c2ff4c57ead86546aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_CLOSED_ERROR</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a347c85b1f6dad521cabfbca6833712aba3d77512ad91a4c2ff4c57ead86546aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_CLOSED_NORMALLY</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a347c85b1f6dad521cabfbca6833712abad66561776078f16b133e18a67a31a6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_NEVER_OPENED</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a347c85b1f6dad521cabfbca6833712aba2a32337db15deac68c28c6c6073614f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_OPEN</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a347c85b1f6dad521cabfbca6833712abaab61fc67dfa26013b7940bbac62449da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_OPEN_FAILED</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a347c85b1f6dad521cabfbca6833712aba57899a6a6454d556eb07b44d26d09ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArDeviceConnection</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a17585f2fab7b9fb61d2308400f909c30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a9f701354a3cecec9e0b209a27e434f54</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debugBytesRead</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>ac1be3e25473f65f096b303b600248622</anchor>
      <arglist>(int bytesRead)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debugEndPacket</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>aac2e625974ec5c4e2b117a42b344b0d6</anchor>
      <arglist>(bool goodPacket, int type=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debugStartPacket</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a35b08f34c720cde344ec8179ec162397</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDeviceName</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>ad734f6fdd5d4ad8ae2d3f66a64ea3689</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getOpenMessage</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a1468143d5b41948b64d80cebce07c6f3</anchor>
      <arglist>(int messageNumber)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getPortName</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a2e3294feb37c8c20020bf81f44826dd3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getPortType</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>aa2068c040aa79530914cc1402328a937</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getStatus</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a3055120833c70ca8ba277040f0821d6f</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStatusMessage</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>ac0570caa674aceb844a25f29760a7315</anchor>
      <arglist>(int messageNumber) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArTime</type>
      <name>getTimeRead</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a92e9eb8baf15711a5984453f4e35451d</anchor>
      <arglist>(int index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isTimeStamping</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>aacdcacf3635432296e6a5cf8f08e7e50</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>openSimple</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>ab6cb9cb2f71af3b98e249db6dd2ff34e</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>read</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a0c7aa57e4734df6287c0393bdf7c186f</anchor>
      <arglist>(const char *data, unsigned int size, unsigned int msWait=0)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceName</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>ad513aff91486cb69d9fc8a88a04ad1e9</anchor>
      <arglist>(const char *deviceName)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>write</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>ac9557146fcc027bef433c0d3807e82fa</anchor>
      <arglist>(const char *data, unsigned int size)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>writePacket</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a5a3dd1cd4140ac04b4229dde26edf9de</anchor>
      <arglist>(ArBasePacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArDeviceConnection</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a620e4464627f5f898d212eb11661f150</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>debugShouldLog</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a9a74569c1d73e65d215a80dbdc1b3394</anchor>
      <arglist>(bool shouldLog)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPortName</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>ac7c9793bfdcdaaea2317884b7cc6be0f</anchor>
      <arglist>(const char *portName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPortType</name>
      <anchorfile>classArDeviceConnection.html</anchorfile>
      <anchor>a7e10f03aabb179531d177f1004a88a1e</anchor>
      <arglist>(const char *portType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArDPPTU</name>
    <filename>classArDPPTU.html</filename>
    <base>ArPTZ</base>
    <member kind="enumeration">
      <type></type>
      <name>DeviceType</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a7777a8c7419aaadd5a31aa7e90b4321c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILT_DEFAULT</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a7777a8c7419aaadd5a31aa7e90b4321ca002100fdca0caded94de852b5b6a5197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILT_PTUD47</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a7777a8c7419aaadd5a31aa7e90b4321ca029fca3bc395e885d3e3e9364305a508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILT_PTUD46</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a7777a8c7419aaadd5a31aa7e90b4321cabfa01db559586814bf1bd9119ac07d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILT_DEFAULT</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a7777a8c7419aaadd5a31aa7e90b4321ca002100fdca0caded94de852b5b6a5197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILT_PTUD46</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a7777a8c7419aaadd5a31aa7e90b4321cabfa01db559586814bf1bd9119ac07d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILT_PTUD47</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a7777a8c7419aaadd5a31aa7e90b4321ca029fca3bc395e885d3e3e9364305a508</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArDPPTU</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ac6a0d92c900d2d561b7f04c332f8c65a</anchor>
      <arglist>(ArRobot *robot, DeviceType deviceType=PANTILT_DEFAULT, int deviceIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>awaitExec</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ac1a3c1a1b13db347ec5d0b6db11d18b5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>basePanSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a82e6b6dda54198a2dfca2e2d01e93ce1</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>baseTiltSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ad353e542682358c87696fd4b5adde92f</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>blank</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a8175034e266855d1b78698ff663273db</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haltAll</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a1ff6d0d801f0c725dd363ac7ce18e45b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haltPan</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>abb8bf45def2b044560e3cc70301718ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haltTilt</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a3b845551c0076f7140af90f2c2949424</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>indepMove</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a4bc1b5c261b6c9b62b6fabd2edcc71a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ab51e889c328177c8d3fbacbdacb21b20</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initMon</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ac414936666e43ab1b9424efc5f38e2d6</anchor>
      <arglist>(double deg1, double deg2, double deg3, double deg4)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>limitEnforce</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a7830a768092cc96d41b1e8e721e05770</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lowerPanSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ae1d48812833343d828bf286d23c18b74</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lowerTiltSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>aa9cf8501391c67c467872c06d09d80fe</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>panAccel</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a5b090669d63dbc22fc9c3a4da92a3c3b</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>panSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a663de05d75402c53ecb1a707b5cfde9f</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>panSlewRel</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ae28b6bd9301d338b9c3a2df466ec7deb</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetCalib</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a5f2feec8b9fd548b83a0dc9cadbc1f39</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tiltAccel</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>aa714445866694f5f5d51a0a942a95fe2</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tiltSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a541558e3daca428c389075514ad13f67</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tiltSlewRel</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a2dc7dfc8d2179f464b0d52b60a2db4da</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>upperPanSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>aa1f96a5f696cd22dff6cf46d0fd970e0</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>upperTiltSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a7341dcea86b312ae7681384c92bf1262</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>velMove</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a8e23866f7f3cee82a59f49d0015e573a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArDPPTU</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a2fe512895543ad4a19a8a066acd7173b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disableReset</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a8a0c73d57763691ba8e187309b6ea1b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetTilt</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a63a7aafcf8a37bb76fcd1a7cf5b836c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetPan</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>aadec809a7ef10325bbcd96025d7d4720</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetAll</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ac94e34cf0d0126ef91c21026c81806c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enMon</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a9028ec3497a58a82e7941b1c3a303f31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disMon</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a9c3dac310878f5473a10ef9ffee960ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveSet</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a9f4b914f975c087488df169f54e9e9df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restoreSet</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a900c95cda18f64070e81064dbbb7ce55</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factorySet</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a62b0ceb424f3eaf50100f143ca9671c4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>immedExec</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ad7a7ca847851357cb8c85996493db5a5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>slaveExec</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>af04c78d4bb1202f37ec40785879c55ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerPTZType</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a5edeca46750ae7d9b7f2309375dc2a9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>panTilt_i</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ae270d313d705dd72d5320ff6b42dd57e</anchor>
      <arglist>(double pdeg, double tdeg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>getPan_i</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a0602e4b834bf091bbef3c08068d326d0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disableReset</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a8a0c73d57763691ba8e187309b6ea1b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetTilt</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a63a7aafcf8a37bb76fcd1a7cf5b836c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetPan</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>aadec809a7ef10325bbcd96025d7d4720</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetAll</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ac94e34cf0d0126ef91c21026c81806c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enMon</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a9028ec3497a58a82e7941b1c3a303f31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disMon</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a9c3dac310878f5473a10ef9ffee960ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveSet</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a9f4b914f975c087488df169f54e9e9df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restoreSet</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a900c95cda18f64070e81064dbbb7ce55</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factorySet</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a62b0ceb424f3eaf50100f143ca9671c4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>panTilt_i</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ae270d313d705dd72d5320ff6b42dd57e</anchor>
      <arglist>(double pdeg, double tdeg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>immedExec</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ad7a7ca847851357cb8c85996493db5a5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>slaveExec</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>af04c78d4bb1202f37ec40785879c55ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PowerMode</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a5a87415804ec17deb8dae2400c7c0931</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setMovePower</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>af0f5f7c9d2d41eea12cd6ac0952bc87f</anchor>
      <arglist>(Axis axis, PowerMode mode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHoldPower</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ab7efeac64847d7789468d99fd5abcc37</anchor>
      <arglist>(Axis axis, PowerMode mode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>offStatPower</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>adae588dad6b84ab1bcdc5199cf7b2594</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>regStatPower</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a24ce83004c0343af062f435d03ede084</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lowStatPower</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a72baa70055f3b7820354047e20e51a52</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>highMotPower</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ac62d46b7eac497b4286f5ca04f43029c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>regMotPower</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a9b065e351215a6283d908f60427a0cd6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lowMotPower</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>af7a5846e0dc4e8defb0582e98655dae6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>getPan_i</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a0602e4b834bf091bbef3c08068d326d0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myPanSent</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a2a4b729bd06f560e33fecad0ec1ee23d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myTiltSent</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>aef84a49aeebd40abd6035b19098fc8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>myPanRecd</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a5cf1ca6b54e47f7e3348af4a9cb2c745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>myTiltRecd</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a5029080e1686c577327d1ceaa5cc9a0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArPTZConnector::GlobalPTZCreateFunc</type>
      <name>ourCreateFunc</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a6afdf14acf7240a9fc4d127ede7f982b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLastPanRequest</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ae88d6a4f5d2c2df53951507e8ea5dca0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPanSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ac07eface207086e7d72d1e8084557c68</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTiltSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ad4cfcf38e7a49299409e5c030536f759</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBasePanSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a9ef2af9cbfc7ac7d6927cffd3d7ea639</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBaseTiltSlew</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a4b614d5d46ffea31bba656b623bfc09c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPanAccel</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>ab28a16c0cd2c3ea0accea348efe55cd9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTiltAccel</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>afc34c0cdf92c3f1cf07aa3a7f453b6e2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>preparePacket</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a75bbeb6dbe4b00bc2d749745b6f81b89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ArPTZ *</type>
      <name>create</name>
      <anchorfile>classArDPPTU.html</anchorfile>
      <anchor>a7a6c2387f8d60f70ef24bee509c1f09f</anchor>
      <arglist>(size_t index, ArPTZParams params, ArArgumentParser *parser, ArRobot *robot)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArDPPTUCommands</name>
    <filename>classArDPPTUCommands.html</filename>
    <member kind="enumvalue">
      <name>DELIM</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a54fe2ba13522f85352843b9d4b387493</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INIT</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883adf1784c90754dfb7b6b538e74890a1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEL</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a70ae66fa8815313c850289d44ad6ecc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASE</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a8b2f48b743358b18c68502b3df5d264e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTROL</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a6ed972e423ea5fe8a8bd60b60274d0e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISABLE</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a1f17d3c89943d6a0a6d019b35788bb05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENABLE</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a9f8de561f3b0b3c9b726b0a8c9a00a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACTORY</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a3ba964eb98614ecb9fed7952bd66aa10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HALT</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a8cc7b9150e04e27f03f75928a6461eab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMMED</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883af6acc42f6a744863a123acec5b214790</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIMIT</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a754fcda791f0c069695b59a9bb80b1f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MONITOR</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a4feacc23a844fd6b28ecd83d2aaeb1d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OFFSET</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883abf251f4c5c7e881ee016426affaa9f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883ab607b12f038c037a54e9865b8b6256cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESET</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883ad0f8d44d3903c215be8fc5499c3aaf6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPEED</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a53d6f17cbaad36ab8aabccb8965a5d7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TILT</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a2ab32d5f0bbc756421dab3e5b521fe88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPPER</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883ac7f5a617cfc924e11308b7fd60c937f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VELOCITY</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a1969b41b4d5d804fd1daf93835bf5575</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEL</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a70ae66fa8815313c850289d44ad6ecc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASE</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a8b2f48b743358b18c68502b3df5d264e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTROL</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a6ed972e423ea5fe8a8bd60b60274d0e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELIM</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a54fe2ba13522f85352843b9d4b387493</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISABLE</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a1f17d3c89943d6a0a6d019b35788bb05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENABLE</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a9f8de561f3b0b3c9b726b0a8c9a00a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACTORY</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a3ba964eb98614ecb9fed7952bd66aa10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HALT</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a8cc7b9150e04e27f03f75928a6461eab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMMED</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883af6acc42f6a744863a123acec5b214790</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INIT</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883adf1784c90754dfb7b6b538e74890a1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIMIT</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a754fcda791f0c069695b59a9bb80b1f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MONITOR</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a4feacc23a844fd6b28ecd83d2aaeb1d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OFFSET</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883abf251f4c5c7e881ee016426affaa9f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883ab607b12f038c037a54e9865b8b6256cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESET</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883ad0f8d44d3903c215be8fc5499c3aaf6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPEED</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a53d6f17cbaad36ab8aabccb8965a5d7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TILT</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a2ab32d5f0bbc756421dab3e5b521fe88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPPER</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883ac7f5a617cfc924e11308b7fd60c937f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VELOCITY</name>
      <anchorfile>classArDPPTUCommands.html</anchorfile>
      <anchor>ab2de90fed2365318154c6fbc696d5883a1969b41b4d5d804fd1daf93835bf5575</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArDPPTUPacket</name>
    <filename>classArDPPTUPacket.html</filename>
    <base>ArBasePacket</base>
    <member kind="function">
      <type></type>
      <name>ArDPPTUPacket</name>
      <anchorfile>classArDPPTUPacket.html</anchorfile>
      <anchor>a1750413d53a76983c07d5e20b4ce7eed</anchor>
      <arglist>(ArTypes::UByte2 bufferSize=30)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArDPPTUPacket</name>
      <anchorfile>classArDPPTUPacket.html</anchorfile>
      <anchor>a854744706e1d86e09817c3e05c826a70</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArDrawingData</name>
    <filename>classArDrawingData.html</filename>
    <member kind="enumvalue">
      <name>DEFAULT_REFRESH_TIME</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>ae3ba35a07f07f1198346ed1b25d14d0aab4133f9c05747b7ffd5f0fcd039d8bd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT_REFRESH_TIME</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>ae3ba35a07f07f1198346ed1b25d14d0aab4133f9c05747b7ffd5f0fcd039d8bd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArDrawingData</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>a4918a35341e3142abfc5579022ef5cbf</anchor>
      <arglist>(const char *shape, ArColor primaryColor, int size, int layer, unsigned int defaultRefreshTime=DEFAULT_REFRESH_TIME, const char *visibility=&quot;DefaultOn&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArDrawingData</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>a709f97d1fa22c1a0faccadd8ec61bcb5</anchor>
      <arglist>(const char *shape, ArColor primaryColor, int size, int layer, unsigned int defaultRefreshTime, ArColor secondaryColor, const char *visibility=&quot;DefaultOn&quot;)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getDefaultRefreshTime</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>a74c72d9222d648318e496f0ec040ea01</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLayer</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>a10a56acf4086970d67ca18590ee4e2e8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArColor</type>
      <name>getPrimaryColor</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>a9a6bed5fd1631f9422250e5ccafdb1f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArColor</type>
      <name>getSecondaryColor</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>af0ad2a960489a72809f0ee7929302696</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getShape</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>a9ece70573c5daeef4a5ed0fdb59082e2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSize</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>aa31d3fdaea1097f716b81b4eb5e8e86b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getVisibility</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>a0e8b99d522d2c7e7cc458776c7a36c06</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultRefreshTime</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>ac17d0b56394694ef79a0f8b414bc2517</anchor>
      <arglist>(unsigned int refreshTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayer</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>acb8a315bdb603c6ff44da2fc8bcc057e</anchor>
      <arglist>(int layer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrimaryColor</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>a6174ad6adc09cd548e6fb7601fea5e14</anchor>
      <arglist>(ArColor color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSecondaryColor</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>a0227f6e84015fc0ccf22f1fdff85b8c9</anchor>
      <arglist>(ArColor color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShape</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>ae32a2c7c178441b0482c79a30c3251d3</anchor>
      <arglist>(const char *shape)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>a1bd61628ea7b47cb530f56cf534b1ddc</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisibility</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>ad101625cdfd31c785ff1eb9c89457d41</anchor>
      <arglist>(const char *visibility)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArDrawingData</name>
      <anchorfile>classArDrawingData.html</anchorfile>
      <anchor>a0a4e414784bf68118ffa49e5c328bfbc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArECEFCoords</name>
    <filename>classArECEFCoords.html</filename>
    <base>Ar3DPoint</base>
    <member kind="function">
      <type>ArENUCoords</type>
      <name>ECEF2ENU</name>
      <anchorfile>classArECEFCoords.html</anchorfile>
      <anchor>aaaff97e480b81d6bc63403b2ae0079ac</anchor>
      <arglist>(ArECEFCoords ref)</arglist>
    </member>
    <member kind="function">
      <type>ArLLACoords</type>
      <name>ECEF2LLA</name>
      <anchorfile>classArECEFCoords.html</anchorfile>
      <anchor>a9dfbd2a8010d226a0bff7055885e6c52</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArENUCoords</name>
    <filename>classArENUCoords.html</filename>
    <base>Ar3DPoint</base>
    <member kind="function">
      <type>ArECEFCoords</type>
      <name>ENU2ECEF</name>
      <anchorfile>classArENUCoords.html</anchorfile>
      <anchor>ab915b348a613d4cb7a363ca8f53baee7</anchor>
      <arglist>(ArLLACoords ref)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArExitErrorSource</name>
    <filename>classArExitErrorSource.html</filename>
    <member kind="function">
      <type></type>
      <name>ArExitErrorSource</name>
      <anchorfile>classArExitErrorSource.html</anchorfile>
      <anchor>a6646a7166d60ddaefb26980570454fce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getExitErrorCode</name>
      <anchorfile>classArExitErrorSource.html</anchorfile>
      <anchor>a8377301b83b5582bb7fbc4e197656de8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getExitErrorDesc</name>
      <anchorfile>classArExitErrorSource.html</anchorfile>
      <anchor>a4ae24ae4d82a2cc4328a03f58e4a93d0</anchor>
      <arglist>(char *buf, int bufLen)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getExitErrorUserDesc</name>
      <anchorfile>classArExitErrorSource.html</anchorfile>
      <anchor>a63e39f204ac2800709f65a3ff7bad274</anchor>
      <arglist>(char *buf, int bufLen)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArExitErrorSource</name>
      <anchorfile>classArExitErrorSource.html</anchorfile>
      <anchor>a1f4f4bf8d3dbe6fe586d8152382e7970</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFileDeviceConnection</name>
    <filename>classArFileDeviceConnection.html</filename>
    <base>ArDeviceConnection</base>
    <member kind="function">
      <type></type>
      <name>ArFileDeviceConnection</name>
      <anchorfile>classArFileDeviceConnection.html</anchorfile>
      <anchor>a33eafa63242dbaabdec1ad40f1a5c13f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>open</name>
      <anchorfile>classArFileDeviceConnection.html</anchorfile>
      <anchor>a9aa52f3cea7534b1ba47de7e5399defb</anchor>
      <arglist>(const char *infilename=NULL, const char *outfilename=NULL, int outflags=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceReadBufferSize</name>
      <anchorfile>classArFileDeviceConnection.html</anchorfile>
      <anchor>aa5f66c0ad1e24ee38ac9ccff38f0a629</anchor>
      <arglist>(unsigned int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadByteDelay</name>
      <anchorfile>classArFileDeviceConnection.html</anchorfile>
      <anchor>a38a4917f74149ffcf910d61fcdc05e8f</anchor>
      <arglist>(float d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFileDeviceConnection</name>
      <anchorfile>classArFileDeviceConnection.html</anchorfile>
      <anchor>a221248df79608bd1bcb513de4aee9077</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFileParser</name>
    <filename>classArFileParser.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>addHandler</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>ae9685e3b4f3ed5bbd0f7107ab9d81122</anchor>
      <arglist>(const char *keyword, ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addHandlerWithError</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>ac9ea873d4673c1e2c00c42434ed2276b</anchor>
      <arglist>(const char *keyword, ArRetFunctor3&lt; bool, ArArgumentBuilder *, char *, size_t &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFileParser</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>ab5a2431669a64d9beafdf4b1d9a8c437</anchor>
      <arglist>(const char *baseDirectory=&quot;./&quot;, bool isPreCompressQuotes=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelParsing</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a7533fbd8241c6bfe78644791c4d93246</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCommentDelimiters</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a0a2af2524acb8e7e02c87dc2944e40c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBaseDirectory</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a0f208f62d4f033e5a303c2dc11680301</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseFile</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a54539be017dc61f50eac8ae5983ead91</anchor>
      <arglist>(const char *fileName, bool continueOnErrors=true, bool noFileNotFoundMessage=false, char *errorBuffer=NULL, size_t errorBufferLen=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseFile</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a01ea53048ed82fc16ada1c6107809794</anchor>
      <arglist>(FILE *file, char *buffer, int bufferLength, bool continueOnErrors=true, char *errorBuffer=NULL, size_t errorBufferLen=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseLine</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a1a1e7db097550a8a935738cdb13f3dde</anchor>
      <arglist>(char *line, char *errorBuffer=NULL, size_t errorBufferLen=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remHandler</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a809de3588ef4abe66b31352d526824aa</anchor>
      <arglist>(const char *keyword, bool logIfCannotFind=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remHandler</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>ac70da823dbd5729ec67793a055b71a62</anchor>
      <arglist>(ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remHandler</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>aa013644f03dc6f5da8614df0bea055f1</anchor>
      <arglist>(ArRetFunctor3&lt; bool, ArArgumentBuilder *, char *, size_t &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCounters</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a59f7aab40d8d4ac41b07d44e07a4d689</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBaseDirectory</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a5fd276fae4c5c56dda18a4c8446d4368</anchor>
      <arglist>(const char *baseDirectory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommentDelimiters</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a17264d80465f66ef31d2f6e6ac1ce266</anchor>
      <arglist>(const std::list&lt; std::string &gt; &amp;delimiters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNumArguments</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>af71cfefc3cd26797888178a1938d9a93</anchor>
      <arglist>(size_t maxNumArguments=512)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuiet</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a6118e1eaafc1f933c5a7eab96326598f</anchor>
      <arglist>(bool isQuiet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArFileParser</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>afc562cffbc6f3a02e0c1f25fc454f9ba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isInterrupted</name>
      <anchorfile>classArFileParser.html</anchorfile>
      <anchor>a040977056dcc2147afdaabc704a31eb8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArForbiddenRangeDevice</name>
    <filename>classArForbiddenRangeDevice.html</filename>
    <base>ArRangeDevice</base>
    <member kind="function">
      <type></type>
      <name>ArForbiddenRangeDevice</name>
      <anchorfile>classArForbiddenRangeDevice.html</anchorfile>
      <anchor>ad70a8c78a17f2fe20a5e0d736d835f80</anchor>
      <arglist>(ArMapInterface *armap, double distanceIncrement=100, unsigned int maxRange=4000, const char *name=&quot;forbidden&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classArForbiddenRangeDevice.html</anchorfile>
      <anchor>a8c54c587148737f3bc3fd7a64acc562c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classArForbiddenRangeDevice.html</anchorfile>
      <anchor>a8f2538c96ea38326653f9c953a2960ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor *</type>
      <name>getDisableCB</name>
      <anchorfile>classArForbiddenRangeDevice.html</anchorfile>
      <anchor>a0381ad29cf4c019d4cb3082799932d0a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor *</type>
      <name>getEnableCB</name>
      <anchorfile>classArForbiddenRangeDevice.html</anchorfile>
      <anchor>adaa5efb746b96db24aaa0e4a0783d729</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classArForbiddenRangeDevice.html</anchorfile>
      <anchor>ad10d269f76043a4d466607e6e752488a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processMap</name>
      <anchorfile>classArForbiddenRangeDevice.html</anchorfile>
      <anchor>a05d1beb39a42cc22f6eed11decb832f8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processReadings</name>
      <anchorfile>classArForbiddenRangeDevice.html</anchorfile>
      <anchor>a2fc7e17af370aacf3a189f17959ccb48</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRobot</name>
      <anchorfile>classArForbiddenRangeDevice.html</anchorfile>
      <anchor>ade0419d1bf78be01c44d1b7d61d1bd1d</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArForbiddenRangeDevice</name>
      <anchorfile>classArForbiddenRangeDevice.html</anchorfile>
      <anchor>a26ecfea7fa66f2c6474db423542ebd4d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor</name>
    <filename>classArFunctor.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getName</name>
      <anchorfile>classArFunctor.html</anchorfile>
      <anchor>a4c94bb50825f76071b71b316dd0bb710</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor.html</anchorfile>
      <anchor>a1c87b5ef305e653fe13258ebe77faee3</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setName</name>
      <anchorfile>classArFunctor.html</anchorfile>
      <anchor>acbc4f69001bac535e6507b4ca696c7d7</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNameVar</name>
      <anchorfile>classArFunctor.html</anchorfile>
      <anchor>ad9a7fc33dcc48e45635aaae33c3e6fa2</anchor>
      <arglist>(const char *name,...)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor</name>
      <anchorfile>classArFunctor.html</anchorfile>
      <anchor>a99ebfaea66a1ded5795bb69f5d8a24a4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1</name>
    <filename>classArFunctor1.html</filename>
    <templarg>P1</templarg>
    <base>ArFunctor</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>af83451accab114c9f86b507910b0305d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>abb5e615ed77dfba425679559c2f7759d</anchor>
      <arglist>(P1 p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>a0191c0b6c4852a85f0113a8fce0030c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1&lt; ArNMEAParser::Message &gt;</name>
    <filename>classArFunctor1.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>af83451accab114c9f86b507910b0305d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>abb5e615ed77dfba425679559c2f7759d</anchor>
      <arglist>(ArNMEAParser::Messagep1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>a0191c0b6c4852a85f0113a8fce0030c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1&lt; ArRobotPacket * &gt;</name>
    <filename>classArFunctor1.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>af83451accab114c9f86b507910b0305d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>abb5e615ed77dfba425679559c2f7759d</anchor>
      <arglist>(ArRobotPacket *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>a0191c0b6c4852a85f0113a8fce0030c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1&lt; ArRobotParams * &gt;</name>
    <filename>classArFunctor1.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>af83451accab114c9f86b507910b0305d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>abb5e615ed77dfba425679559c2f7759d</anchor>
      <arglist>(ArRobotParams *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>a0191c0b6c4852a85f0113a8fce0030c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1&lt; char * &gt;</name>
    <filename>classArFunctor1.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>af83451accab114c9f86b507910b0305d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>abb5e615ed77dfba425679559c2f7759d</anchor>
      <arglist>(char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>a0191c0b6c4852a85f0113a8fce0030c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1&lt; char ** &gt;</name>
    <filename>classArFunctor1.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>af83451accab114c9f86b507910b0305d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>abb5e615ed77dfba425679559c2f7759d</anchor>
      <arglist>(char **p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>a0191c0b6c4852a85f0113a8fce0030c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1&lt; const char * &gt;</name>
    <filename>classArFunctor1.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>af83451accab114c9f86b507910b0305d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>abb5e615ed77dfba425679559c2f7759d</anchor>
      <arglist>(const char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>a0191c0b6c4852a85f0113a8fce0030c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1&lt; double &gt;</name>
    <filename>classArFunctor1.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>af83451accab114c9f86b507910b0305d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>abb5e615ed77dfba425679559c2f7759d</anchor>
      <arglist>(doublep1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>a0191c0b6c4852a85f0113a8fce0030c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1&lt; int &gt;</name>
    <filename>classArFunctor1.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>af83451accab114c9f86b507910b0305d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>abb5e615ed77dfba425679559c2f7759d</anchor>
      <arglist>(intp1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>a0191c0b6c4852a85f0113a8fce0030c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1&lt; PacketType &gt;</name>
    <filename>classArFunctor1.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>af83451accab114c9f86b507910b0305d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>abb5e615ed77dfba425679559c2f7759d</anchor>
      <arglist>(PacketTypep1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1</name>
      <anchorfile>classArFunctor1.html</anchorfile>
      <anchor>a0191c0b6c4852a85f0113a8fce0030c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1C</name>
    <filename>classArFunctor1C.html</filename>
    <templarg>T</templarg>
    <templarg>P1</templarg>
    <base>ArFunctor1</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7cdfe132c865415cfb1e8d98eb40d0fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a9e287813502d7dfc3ed734188a30dd95</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84c91176ebf68d238e055087ceb709b8</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ab4d667ea13339ad9d96c7a2b41a6e81a</anchor>
      <arglist>(T *obj, void(T::*func)(P1))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7d13cd5c08487a61560317fc77ed0478</anchor>
      <arglist>(T *obj, void(T::*func)(P1), P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ae2149b36ea519169f5040acf0fc59f60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ac77da8d61d640e52d4637871d33beb72</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84561dcc8854f5cc301598e934919459</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a49de24a26938ce2894d317c9c3c76aa8</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>af4cd41a582a3e7a8f5a3fc69797dd7b1</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a95a3ef32d79c819427c1e00a3afc506f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1C&lt; ArGPS, ArNMEAParser::Message &gt;</name>
    <filename>classArFunctor1C.html</filename>
    <base>ArFunctor1&lt; ArNMEAParser::Message &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7cdfe132c865415cfb1e8d98eb40d0fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a9e287813502d7dfc3ed734188a30dd95</anchor>
      <arglist>(ArGPS &amp;obj, void(ArGPS::*func)(ArNMEAParser::Message))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84c91176ebf68d238e055087ceb709b8</anchor>
      <arglist>(ArGPS &amp;obj, void(ArGPS::*func)(ArNMEAParser::Message), ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ab4d667ea13339ad9d96c7a2b41a6e81a</anchor>
      <arglist>(ArGPS *obj, void(ArGPS::*func)(ArNMEAParser::Message))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7d13cd5c08487a61560317fc77ed0478</anchor>
      <arglist>(ArGPS *obj, void(ArGPS::*func)(ArNMEAParser::Message), ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ae2149b36ea519169f5040acf0fc59f60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ac77da8d61d640e52d4637871d33beb72</anchor>
      <arglist>(ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84561dcc8854f5cc301598e934919459</anchor>
      <arglist>(ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a49de24a26938ce2894d317c9c3c76aa8</anchor>
      <arglist>(ArGPS *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>af4cd41a582a3e7a8f5a3fc69797dd7b1</anchor>
      <arglist>(ArGPS &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a95a3ef32d79c819427c1e00a3afc506f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1C&lt; ArLCDConnector, int &gt;</name>
    <filename>classArFunctor1C.html</filename>
    <base>ArFunctor1&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7cdfe132c865415cfb1e8d98eb40d0fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a9e287813502d7dfc3ed734188a30dd95</anchor>
      <arglist>(ArLCDConnector &amp;obj, void(ArLCDConnector::*func)(int))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84c91176ebf68d238e055087ceb709b8</anchor>
      <arglist>(ArLCDConnector &amp;obj, void(ArLCDConnector::*func)(int), intp1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ab4d667ea13339ad9d96c7a2b41a6e81a</anchor>
      <arglist>(ArLCDConnector *obj, void(ArLCDConnector::*func)(int))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7d13cd5c08487a61560317fc77ed0478</anchor>
      <arglist>(ArLCDConnector *obj, void(ArLCDConnector::*func)(int), intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ae2149b36ea519169f5040acf0fc59f60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ac77da8d61d640e52d4637871d33beb72</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84561dcc8854f5cc301598e934919459</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a49de24a26938ce2894d317c9c3c76aa8</anchor>
      <arglist>(ArLCDConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>af4cd41a582a3e7a8f5a3fc69797dd7b1</anchor>
      <arglist>(ArLCDConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a95a3ef32d79c819427c1e00a3afc506f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1C&lt; ArMD5Calculator, const char * &gt;</name>
    <filename>classArFunctor1C.html</filename>
    <base>ArFunctor1&lt; const char * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7cdfe132c865415cfb1e8d98eb40d0fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a9e287813502d7dfc3ed734188a30dd95</anchor>
      <arglist>(ArMD5Calculator &amp;obj, void(ArMD5Calculator::*func)(const char *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84c91176ebf68d238e055087ceb709b8</anchor>
      <arglist>(ArMD5Calculator &amp;obj, void(ArMD5Calculator::*func)(const char *), const char *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ab4d667ea13339ad9d96c7a2b41a6e81a</anchor>
      <arglist>(ArMD5Calculator *obj, void(ArMD5Calculator::*func)(const char *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7d13cd5c08487a61560317fc77ed0478</anchor>
      <arglist>(ArMD5Calculator *obj, void(ArMD5Calculator::*func)(const char *), const char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ae2149b36ea519169f5040acf0fc59f60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ac77da8d61d640e52d4637871d33beb72</anchor>
      <arglist>(const char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84561dcc8854f5cc301598e934919459</anchor>
      <arglist>(const char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a49de24a26938ce2894d317c9c3c76aa8</anchor>
      <arglist>(ArMD5Calculator *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>af4cd41a582a3e7a8f5a3fc69797dd7b1</anchor>
      <arglist>(ArMD5Calculator &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a95a3ef32d79c819427c1e00a3afc506f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1C&lt; ArModeCommand, int &gt;</name>
    <filename>classArFunctor1C.html</filename>
    <base>ArFunctor1&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7cdfe132c865415cfb1e8d98eb40d0fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a9e287813502d7dfc3ed734188a30dd95</anchor>
      <arglist>(ArModeCommand &amp;obj, void(ArModeCommand::*func)(int))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84c91176ebf68d238e055087ceb709b8</anchor>
      <arglist>(ArModeCommand &amp;obj, void(ArModeCommand::*func)(int), intp1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ab4d667ea13339ad9d96c7a2b41a6e81a</anchor>
      <arglist>(ArModeCommand *obj, void(ArModeCommand::*func)(int))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7d13cd5c08487a61560317fc77ed0478</anchor>
      <arglist>(ArModeCommand *obj, void(ArModeCommand::*func)(int), intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ae2149b36ea519169f5040acf0fc59f60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ac77da8d61d640e52d4637871d33beb72</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84561dcc8854f5cc301598e934919459</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a49de24a26938ce2894d317c9c3c76aa8</anchor>
      <arglist>(ArModeCommand *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>af4cd41a582a3e7a8f5a3fc69797dd7b1</anchor>
      <arglist>(ArModeCommand &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a95a3ef32d79c819427c1e00a3afc506f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1C&lt; ArNovatelGPS, ArNMEAParser::Message &gt;</name>
    <filename>classArFunctor1C.html</filename>
    <base>ArFunctor1&lt; ArNMEAParser::Message &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7cdfe132c865415cfb1e8d98eb40d0fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a9e287813502d7dfc3ed734188a30dd95</anchor>
      <arglist>(ArNovatelGPS &amp;obj, void(ArNovatelGPS::*func)(ArNMEAParser::Message))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84c91176ebf68d238e055087ceb709b8</anchor>
      <arglist>(ArNovatelGPS &amp;obj, void(ArNovatelGPS::*func)(ArNMEAParser::Message), ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ab4d667ea13339ad9d96c7a2b41a6e81a</anchor>
      <arglist>(ArNovatelGPS *obj, void(ArNovatelGPS::*func)(ArNMEAParser::Message))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7d13cd5c08487a61560317fc77ed0478</anchor>
      <arglist>(ArNovatelGPS *obj, void(ArNovatelGPS::*func)(ArNMEAParser::Message), ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ae2149b36ea519169f5040acf0fc59f60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ac77da8d61d640e52d4637871d33beb72</anchor>
      <arglist>(ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84561dcc8854f5cc301598e934919459</anchor>
      <arglist>(ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a49de24a26938ce2894d317c9c3c76aa8</anchor>
      <arglist>(ArNovatelGPS *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>af4cd41a582a3e7a8f5a3fc69797dd7b1</anchor>
      <arglist>(ArNovatelGPS &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a95a3ef32d79c819427c1e00a3afc506f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1C&lt; ArNovatelSPAN, ArNMEAParser::Message &gt;</name>
    <filename>classArFunctor1C.html</filename>
    <base>ArFunctor1&lt; ArNMEAParser::Message &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7cdfe132c865415cfb1e8d98eb40d0fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a9e287813502d7dfc3ed734188a30dd95</anchor>
      <arglist>(ArNovatelSPAN &amp;obj, void(ArNovatelSPAN::*func)(ArNMEAParser::Message))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84c91176ebf68d238e055087ceb709b8</anchor>
      <arglist>(ArNovatelSPAN &amp;obj, void(ArNovatelSPAN::*func)(ArNMEAParser::Message), ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ab4d667ea13339ad9d96c7a2b41a6e81a</anchor>
      <arglist>(ArNovatelSPAN *obj, void(ArNovatelSPAN::*func)(ArNMEAParser::Message))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7d13cd5c08487a61560317fc77ed0478</anchor>
      <arglist>(ArNovatelSPAN *obj, void(ArNovatelSPAN::*func)(ArNMEAParser::Message), ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ae2149b36ea519169f5040acf0fc59f60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ac77da8d61d640e52d4637871d33beb72</anchor>
      <arglist>(ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84561dcc8854f5cc301598e934919459</anchor>
      <arglist>(ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a49de24a26938ce2894d317c9c3c76aa8</anchor>
      <arglist>(ArNovatelSPAN *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>af4cd41a582a3e7a8f5a3fc69797dd7b1</anchor>
      <arglist>(ArNovatelSPAN &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a95a3ef32d79c819427c1e00a3afc506f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1C&lt; ArPTZConnector, ArRobotParams * &gt;</name>
    <filename>classArFunctor1C.html</filename>
    <base>ArFunctor1&lt; ArRobotParams * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7cdfe132c865415cfb1e8d98eb40d0fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a9e287813502d7dfc3ed734188a30dd95</anchor>
      <arglist>(ArPTZConnector &amp;obj, void(ArPTZConnector::*func)(ArRobotParams *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84c91176ebf68d238e055087ceb709b8</anchor>
      <arglist>(ArPTZConnector &amp;obj, void(ArPTZConnector::*func)(ArRobotParams *), ArRobotParams *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ab4d667ea13339ad9d96c7a2b41a6e81a</anchor>
      <arglist>(ArPTZConnector *obj, void(ArPTZConnector::*func)(ArRobotParams *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7d13cd5c08487a61560317fc77ed0478</anchor>
      <arglist>(ArPTZConnector *obj, void(ArPTZConnector::*func)(ArRobotParams *), ArRobotParams *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ae2149b36ea519169f5040acf0fc59f60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ac77da8d61d640e52d4637871d33beb72</anchor>
      <arglist>(ArRobotParams *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84561dcc8854f5cc301598e934919459</anchor>
      <arglist>(ArRobotParams *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a49de24a26938ce2894d317c9c3c76aa8</anchor>
      <arglist>(ArPTZConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>af4cd41a582a3e7a8f5a3fc69797dd7b1</anchor>
      <arglist>(ArPTZConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a95a3ef32d79c819427c1e00a3afc506f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1C&lt; ArTCMCompassDirect, ArNMEAParser::Message &gt;</name>
    <filename>classArFunctor1C.html</filename>
    <base>ArFunctor1&lt; ArNMEAParser::Message &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7cdfe132c865415cfb1e8d98eb40d0fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a9e287813502d7dfc3ed734188a30dd95</anchor>
      <arglist>(ArTCMCompassDirect &amp;obj, void(ArTCMCompassDirect::*func)(ArNMEAParser::Message))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84c91176ebf68d238e055087ceb709b8</anchor>
      <arglist>(ArTCMCompassDirect &amp;obj, void(ArTCMCompassDirect::*func)(ArNMEAParser::Message), ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ab4d667ea13339ad9d96c7a2b41a6e81a</anchor>
      <arglist>(ArTCMCompassDirect *obj, void(ArTCMCompassDirect::*func)(ArNMEAParser::Message))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7d13cd5c08487a61560317fc77ed0478</anchor>
      <arglist>(ArTCMCompassDirect *obj, void(ArTCMCompassDirect::*func)(ArNMEAParser::Message), ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ae2149b36ea519169f5040acf0fc59f60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ac77da8d61d640e52d4637871d33beb72</anchor>
      <arglist>(ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84561dcc8854f5cc301598e934919459</anchor>
      <arglist>(ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a49de24a26938ce2894d317c9c3c76aa8</anchor>
      <arglist>(ArTCMCompassDirect *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>af4cd41a582a3e7a8f5a3fc69797dd7b1</anchor>
      <arglist>(ArTCMCompassDirect &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a95a3ef32d79c819427c1e00a3afc506f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor1C&lt; ArTrimbleGPS, ArNMEAParser::Message &gt;</name>
    <filename>classArFunctor1C.html</filename>
    <base>ArFunctor1&lt; ArNMEAParser::Message &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7cdfe132c865415cfb1e8d98eb40d0fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a9e287813502d7dfc3ed734188a30dd95</anchor>
      <arglist>(ArTrimbleGPS &amp;obj, void(ArTrimbleGPS::*func)(ArNMEAParser::Message))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84c91176ebf68d238e055087ceb709b8</anchor>
      <arglist>(ArTrimbleGPS &amp;obj, void(ArTrimbleGPS::*func)(ArNMEAParser::Message), ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ab4d667ea13339ad9d96c7a2b41a6e81a</anchor>
      <arglist>(ArTrimbleGPS *obj, void(ArTrimbleGPS::*func)(ArNMEAParser::Message))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a7d13cd5c08487a61560317fc77ed0478</anchor>
      <arglist>(ArTrimbleGPS *obj, void(ArTrimbleGPS::*func)(ArNMEAParser::Message), ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ae2149b36ea519169f5040acf0fc59f60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>ac77da8d61d640e52d4637871d33beb72</anchor>
      <arglist>(ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a84561dcc8854f5cc301598e934919459</anchor>
      <arglist>(ArNMEAParser::Messagep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a49de24a26938ce2894d317c9c3c76aa8</anchor>
      <arglist>(ArTrimbleGPS *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>af4cd41a582a3e7a8f5a3fc69797dd7b1</anchor>
      <arglist>(ArTrimbleGPS &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor1C</name>
      <anchorfile>classArFunctor1C.html</anchorfile>
      <anchor>a95a3ef32d79c819427c1e00a3afc506f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor2</name>
    <filename>classArFunctor2.html</filename>
    <templarg>P1</templarg>
    <templarg>P2</templarg>
    <base>ArFunctor1</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>a5bacfbd7ba97a063b753bf94080f0610</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>a605ef5a9ad3f7dbc6b14f96c370a248c</anchor>
      <arglist>(P1 p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>af001f40529cb78332c36da06c7890869</anchor>
      <arglist>(P1 p1, P2 p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor2</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>adb609a1e086b82feca0d0d3aac3c3c99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor2&lt; char **, int &gt;</name>
    <filename>classArFunctor2.html</filename>
    <base>ArFunctor1&lt; char ** &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>a5bacfbd7ba97a063b753bf94080f0610</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>a605ef5a9ad3f7dbc6b14f96c370a248c</anchor>
      <arglist>(char **p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>af001f40529cb78332c36da06c7890869</anchor>
      <arglist>(char **p1, intp2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor2</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>adb609a1e086b82feca0d0d3aac3c3c99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor2&lt; char *, ArTypes::UByte2 &gt;</name>
    <filename>classArFunctor2.html</filename>
    <base>ArFunctor1&lt; char * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>a5bacfbd7ba97a063b753bf94080f0610</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>a605ef5a9ad3f7dbc6b14f96c370a248c</anchor>
      <arglist>(char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>af001f40529cb78332c36da06c7890869</anchor>
      <arglist>(char *p1, ArTypes::UByte2p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor2</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>adb609a1e086b82feca0d0d3aac3c3c99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor2&lt; const char *, ArTypes::UByte2 &gt;</name>
    <filename>classArFunctor2.html</filename>
    <base>ArFunctor1&lt; const char * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>a5bacfbd7ba97a063b753bf94080f0610</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>a605ef5a9ad3f7dbc6b14f96c370a248c</anchor>
      <arglist>(const char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>af001f40529cb78332c36da06c7890869</anchor>
      <arglist>(const char *p1, ArTypes::UByte2p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor2</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>adb609a1e086b82feca0d0d3aac3c3c99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor2&lt; double, double &gt;</name>
    <filename>classArFunctor2.html</filename>
    <base>ArFunctor1&lt; double &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>a5bacfbd7ba97a063b753bf94080f0610</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>a605ef5a9ad3f7dbc6b14f96c370a248c</anchor>
      <arglist>(doublep1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>af001f40529cb78332c36da06c7890869</anchor>
      <arglist>(doublep1, doublep2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor2</name>
      <anchorfile>classArFunctor2.html</anchorfile>
      <anchor>adb609a1e086b82feca0d0d3aac3c3c99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor2C</name>
    <filename>classArFunctor2C.html</filename>
    <templarg>T</templarg>
    <templarg>P1</templarg>
    <templarg>P2</templarg>
    <base>ArFunctor2</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a52750a738ab2e7cf4138d85a2cd30213</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a9d3fb9c56fbb42a5328c5ecbd9317fcc</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a3c9eec7e1695568e2d24667641d0178a</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a976ae470205924fb2ca69014d8fd59bd</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>af2325689d33846c3f27b8f0a1b17a54f</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>acf4271e6bffd5267eb44bf03f3a831a7</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>aa79528cf7209d6f3fdbd6b61b206d137</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>ac2fe059b0fa37e68b9071677d5dc368c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a6c0200cb4dd89979ace956948f6d430b</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a993ea95a398358131ecd47f09b688be6</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>af24702027bf888d14e3af842f3f10630</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>ae25f7c6597499b02bf555e4a179fe760</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a94191be442b3e806b8ee328b1bad427e</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>af20c94ca583fca1d97676da839153c74</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a12fa5cb0c29a6e3e8bf8add8bb66bb2a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor2C&lt; KeyPTU, double, double &gt;</name>
    <filename>classArFunctor2C.html</filename>
    <base>ArFunctor2&lt; double, double &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a52750a738ab2e7cf4138d85a2cd30213</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a9d3fb9c56fbb42a5328c5ecbd9317fcc</anchor>
      <arglist>(KeyPTU &amp;obj, void(KeyPTU::*func)(double, double))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a3c9eec7e1695568e2d24667641d0178a</anchor>
      <arglist>(KeyPTU &amp;obj, void(KeyPTU::*func)(double, double), doublep1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a976ae470205924fb2ca69014d8fd59bd</anchor>
      <arglist>(KeyPTU &amp;obj, void(KeyPTU::*func)(double, double), doublep1, doublep2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>af2325689d33846c3f27b8f0a1b17a54f</anchor>
      <arglist>(KeyPTU *obj, void(KeyPTU::*func)(double, double))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>acf4271e6bffd5267eb44bf03f3a831a7</anchor>
      <arglist>(KeyPTU *obj, void(KeyPTU::*func)(double, double), doublep1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>aa79528cf7209d6f3fdbd6b61b206d137</anchor>
      <arglist>(KeyPTU *obj, void(KeyPTU::*func)(double, double), doublep1, doublep2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>ac2fe059b0fa37e68b9071677d5dc368c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a6c0200cb4dd89979ace956948f6d430b</anchor>
      <arglist>(doublep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a993ea95a398358131ecd47f09b688be6</anchor>
      <arglist>(doublep1, doublep2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>af24702027bf888d14e3af842f3f10630</anchor>
      <arglist>(doublep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>ae25f7c6597499b02bf555e4a179fe760</anchor>
      <arglist>(doublep2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a94191be442b3e806b8ee328b1bad427e</anchor>
      <arglist>(KeyPTU *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>af20c94ca583fca1d97676da839153c74</anchor>
      <arglist>(KeyPTU &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor2C</name>
      <anchorfile>classArFunctor2C.html</anchorfile>
      <anchor>a12fa5cb0c29a6e3e8bf8add8bb66bb2a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor3</name>
    <filename>classArFunctor3.html</filename>
    <templarg>P1</templarg>
    <templarg>P2</templarg>
    <templarg>P3</templarg>
    <base>ArFunctor2</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a7f16ce87899b5f1020083fe086ac6c42</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>aea897e91beb42e24925b89b0b27d2697</anchor>
      <arglist>(P1 p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a4161fbb29b01f2a19a9d35ab80f3bd3c</anchor>
      <arglist>(P1 p1, P2 p2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a81fac679c9b2d0d5ae9486f1103e0a4a</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor3</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a2b420e4e00c581790e8b53386ec427a8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor3&lt; char **, int, ArSocket * &gt;</name>
    <filename>classArFunctor3.html</filename>
    <base>ArFunctor2&lt; char **, int &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a7f16ce87899b5f1020083fe086ac6c42</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>aea897e91beb42e24925b89b0b27d2697</anchor>
      <arglist>(char **p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a4161fbb29b01f2a19a9d35ab80f3bd3c</anchor>
      <arglist>(char **p1, intp2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a81fac679c9b2d0d5ae9486f1103e0a4a</anchor>
      <arglist>(char **p1, intp2, ArSocket *p3)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor3</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a2b420e4e00c581790e8b53386ec427a8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor3&lt; const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; * &gt;</name>
    <filename>classArFunctor3.html</filename>
    <base>ArFunctor2&lt; const char *, ArTypes::UByte2 &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a7f16ce87899b5f1020083fe086ac6c42</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>aea897e91beb42e24925b89b0b27d2697</anchor>
      <arglist>(const char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a4161fbb29b01f2a19a9d35ab80f3bd3c</anchor>
      <arglist>(const char *p1, ArTypes::UByte2p2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a81fac679c9b2d0d5ae9486f1103e0a4a</anchor>
      <arglist>(const char *p1, ArTypes::UByte2p2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *p3)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor3</name>
      <anchorfile>classArFunctor3.html</anchorfile>
      <anchor>a2b420e4e00c581790e8b53386ec427a8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor3C</name>
    <filename>classArFunctor3C.html</filename>
    <templarg>T</templarg>
    <templarg>P1</templarg>
    <templarg>P2</templarg>
    <templarg>P3</templarg>
    <base>ArFunctor3</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a6f9c9d3fce810a590f3a5bd1bb1123c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a106d55efd17af936f8ae43cc5ac21ba4</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ad9057f8cb6ed7fca658eceef685218a1</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>af61826893d97919a841f964070f60b5b</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a46e68d40ac6e363fd8652bd9a9db82f2</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a592244b8d96a50d07a8f0305f0f345d6</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a985ef0bfd75e85bd7046f20190a2ecfb</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>acc421393c8315c8019da2366bd6190a6</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>aaf99d4243db065d9436a6224411e7fab</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>af7986d39bf059e7b5a3dfc026445b8c8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ad1558f9aa375e3a2b0615fef63d9665d</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>aa4ad6dc68c7d214eb29f6d27fb509a0d</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a23f6e7237447ccb3005c7ea0cf69039b</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a46dcbcaec5abdb70317120574df9cba5</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ac2f4f81b3e985a430842cec7d412349d</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a456fa74c3ae0b2cbe2bdd33a6d18b90f</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a6b99cca7c8b8ff05ec783494cc5767ed</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a1b4b15ed130cc8473c0d6f3e84577d4f</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ae2ee4c8b94f27dc3ead9d71fb25b0cc7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor3C&lt; ArDataLogger, const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; * &gt;</name>
    <filename>classArFunctor3C.html</filename>
    <base>ArFunctor3&lt; const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a6f9c9d3fce810a590f3a5bd1bb1123c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a106d55efd17af936f8ae43cc5ac21ba4</anchor>
      <arglist>(ArDataLogger &amp;obj, void(ArDataLogger::*func)(const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ad9057f8cb6ed7fca658eceef685218a1</anchor>
      <arglist>(ArDataLogger &amp;obj, void(ArDataLogger::*func)(const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *), const char *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>af61826893d97919a841f964070f60b5b</anchor>
      <arglist>(ArDataLogger &amp;obj, void(ArDataLogger::*func)(const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *), const char *p1, ArTypes::UByte2p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a46e68d40ac6e363fd8652bd9a9db82f2</anchor>
      <arglist>(ArDataLogger &amp;obj, void(ArDataLogger::*func)(const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *), const char *p1, ArTypes::UByte2p2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a592244b8d96a50d07a8f0305f0f345d6</anchor>
      <arglist>(ArDataLogger *obj, void(ArDataLogger::*func)(const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a985ef0bfd75e85bd7046f20190a2ecfb</anchor>
      <arglist>(ArDataLogger *obj, void(ArDataLogger::*func)(const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *), const char *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>acc421393c8315c8019da2366bd6190a6</anchor>
      <arglist>(ArDataLogger *obj, void(ArDataLogger::*func)(const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *), const char *p1, ArTypes::UByte2p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>aaf99d4243db065d9436a6224411e7fab</anchor>
      <arglist>(ArDataLogger *obj, void(ArDataLogger::*func)(const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *), const char *p1, ArTypes::UByte2p2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>af7986d39bf059e7b5a3dfc026445b8c8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ad1558f9aa375e3a2b0615fef63d9665d</anchor>
      <arglist>(const char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>aa4ad6dc68c7d214eb29f6d27fb509a0d</anchor>
      <arglist>(const char *p1, ArTypes::UByte2p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a23f6e7237447ccb3005c7ea0cf69039b</anchor>
      <arglist>(const char *p1, ArTypes::UByte2p2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a46dcbcaec5abdb70317120574df9cba5</anchor>
      <arglist>(const char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ac2f4f81b3e985a430842cec7d412349d</anchor>
      <arglist>(ArTypes::UByte2p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a456fa74c3ae0b2cbe2bdd33a6d18b90f</anchor>
      <arglist>(ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a6b99cca7c8b8ff05ec783494cc5767ed</anchor>
      <arglist>(ArDataLogger *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a1b4b15ed130cc8473c0d6f3e84577d4f</anchor>
      <arglist>(ArDataLogger &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ae2ee4c8b94f27dc3ead9d71fb25b0cc7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor3C&lt; ArNetServer, char **, int, ArSocket * &gt;</name>
    <filename>classArFunctor3C.html</filename>
    <base>ArFunctor3&lt; char **, int, ArSocket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a6f9c9d3fce810a590f3a5bd1bb1123c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a106d55efd17af936f8ae43cc5ac21ba4</anchor>
      <arglist>(ArNetServer &amp;obj, void(ArNetServer::*func)(char **, int, ArSocket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ad9057f8cb6ed7fca658eceef685218a1</anchor>
      <arglist>(ArNetServer &amp;obj, void(ArNetServer::*func)(char **, int, ArSocket *), char **p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>af61826893d97919a841f964070f60b5b</anchor>
      <arglist>(ArNetServer &amp;obj, void(ArNetServer::*func)(char **, int, ArSocket *), char **p1, intp2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a46e68d40ac6e363fd8652bd9a9db82f2</anchor>
      <arglist>(ArNetServer &amp;obj, void(ArNetServer::*func)(char **, int, ArSocket *), char **p1, intp2, ArSocket *p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a592244b8d96a50d07a8f0305f0f345d6</anchor>
      <arglist>(ArNetServer *obj, void(ArNetServer::*func)(char **, int, ArSocket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a985ef0bfd75e85bd7046f20190a2ecfb</anchor>
      <arglist>(ArNetServer *obj, void(ArNetServer::*func)(char **, int, ArSocket *), char **p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>acc421393c8315c8019da2366bd6190a6</anchor>
      <arglist>(ArNetServer *obj, void(ArNetServer::*func)(char **, int, ArSocket *), char **p1, intp2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>aaf99d4243db065d9436a6224411e7fab</anchor>
      <arglist>(ArNetServer *obj, void(ArNetServer::*func)(char **, int, ArSocket *), char **p1, intp2, ArSocket *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>af7986d39bf059e7b5a3dfc026445b8c8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ad1558f9aa375e3a2b0615fef63d9665d</anchor>
      <arglist>(char **p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>aa4ad6dc68c7d214eb29f6d27fb509a0d</anchor>
      <arglist>(char **p1, intp2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a23f6e7237447ccb3005c7ea0cf69039b</anchor>
      <arglist>(char **p1, intp2, ArSocket *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a46dcbcaec5abdb70317120574df9cba5</anchor>
      <arglist>(char **p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ac2f4f81b3e985a430842cec7d412349d</anchor>
      <arglist>(intp2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a456fa74c3ae0b2cbe2bdd33a6d18b90f</anchor>
      <arglist>(ArSocket *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a6b99cca7c8b8ff05ec783494cc5767ed</anchor>
      <arglist>(ArNetServer *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>a1b4b15ed130cc8473c0d6f3e84577d4f</anchor>
      <arglist>(ArNetServer &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor3C</name>
      <anchorfile>classArFunctor3C.html</anchorfile>
      <anchor>ae2ee4c8b94f27dc3ead9d71fb25b0cc7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor4</name>
    <filename>classArFunctor4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor3</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor4.html</anchorfile>
      <anchor>a6b7180ffeb2ef9529d3e9f325555cfa4</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor4.html</anchorfile>
      <anchor>a15821e5fc36d769d18f74c740214f61c</anchor>
      <arglist>(P1 p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor4.html</anchorfile>
      <anchor>a0ae6e720d81d2529e5ad8b61ffc5a886</anchor>
      <arglist>(P1 p1, P2 p2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor4.html</anchorfile>
      <anchor>a82e4ca5310320aef49e4f14e3769629e</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor4.html</anchorfile>
      <anchor>a3680a11203db1055a41e3db4738e95f7</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor4</name>
      <anchorfile>classArFunctor4.html</anchorfile>
      <anchor>a16a7ddc43dc529d3179222ae0603dc8f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor4C</name>
    <filename>classArFunctor4C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor4</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a1caaa1821954672b11ffed9d559a9756</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>aaeffed392b099f5d00b62ba8287224c7</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a4af324ccb52b4c481e16c5cc08c6205c</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a540598f4f0c529aa632e7851c605720a</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a0e5e3b766f90243c16610f3742524ced</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a3a9a2b9fa4833de2bbb9d6a7fc47c042</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a354e3f33fd2657c5caa7bd81b18c91a6</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>ad6564ea8f4cbeae4af892c00257d896b</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a266a8406078397b90d666694990e9c70</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a0b93e0631002cfa4e9cdb8094bc350e7</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>ae23b772ff02188985641d03526cd4c32</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a4e5c7314f5e7934f936b088045318129</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a11a5122bdb984204563124b83bd64b36</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a14ea54e5c7fdc135ec647d0120bcdb71</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a432b4d1c03bf1c0436b2d20a8442b381</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a413f6ecae35b6afa6365b03d226ccef2</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>ae3916141962414879890641a88199145</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a62664cf95149c41ceb3f31b7539f2be5</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a6e373791598b03845d9d04d75262aa7a</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a8cda4e1dce1a3eb2e4cf89241b26f209</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>af827cfd4ac60c779a13def8e68f28031</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>ae290d59d095668f1af63798f1053967c</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor4C</name>
      <anchorfile>classArFunctor4C.html</anchorfile>
      <anchor>a75da352529edf1e9714c0f27055631cc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor5</name>
    <filename>classArFunctor5.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor4</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5.html</anchorfile>
      <anchor>a49585453e7a1b221844a1af0d6ff65db</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5.html</anchorfile>
      <anchor>a911e3de8dd2f20d2406427a6a54fce2a</anchor>
      <arglist>(P1 p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5.html</anchorfile>
      <anchor>a3ce2f45ede8e5f984ef5678c98be88b7</anchor>
      <arglist>(P1 p1, P2 p2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5.html</anchorfile>
      <anchor>a06067c60a89d6657cb925e239890e59f</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5.html</anchorfile>
      <anchor>a4b8efe52e312be3396331b5814bd30a4</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5.html</anchorfile>
      <anchor>ae83520a1c23bd97faba57842faa32c57</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor5</name>
      <anchorfile>classArFunctor5.html</anchorfile>
      <anchor>a9d2dbfea30fe2b7794a0af5ef1f0f1b5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctor5C</name>
    <filename>classArFunctor5C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor5</base>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a80695a4c167c296a699827d5d350f3c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a07fe0e5de55f8dfad4a904075b0b8d67</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>ad9fb5dabf387cb55a9b4fc5e0f05f972</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a4e4b03011dda432fe9a44e678c714deb</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a240f9d94efc1fcc55652093f4328d111</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a911f94a40fcc2b30c93823278743fd55</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>aa680048520f512562572f3e6a826432d</anchor>
      <arglist>(T &amp;obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a74d6314919a98eb6a57eb5b561df7cb1</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a9e608133578a3894f358ec5372a3224a</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>ade5414cfc228482b59eaab6db4c56111</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a34966b3fa9a866f76c4cbcd460fa7e4c</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a4d1bde6fb2e6efff142c93ec8e35bd27</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>ae00609a015951a052a0cf223ffd0d1c8</anchor>
      <arglist>(T *obj, void(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a04b2d7ac3c64bc0ee75bd2249ef0b0e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>aa336a468fd31147cdd1539590f941917</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a2ba90959b054dc94e7ff2c052b892f97</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>ac2d90809b9e0520d3083b97ae47ae161</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a2ff9835171d887ed2a97faba314e6ef1</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a5ded499d62a4b4fd4fee37523585a650</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>acf0d24ba4521ff36424764240cb8354b</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>abf8e051d3b19f2881850f4f6aa8bf28d</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a08abce824008d81a9294046c5fa1932c</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>a662ca21435636e0b67a9bcb5833778ac</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP5</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>aa70c57b8fef4c5fb541ae52b49eae559</anchor>
      <arglist>(P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>ac470ca12f4099910041258aa1e0bd7d4</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>adf0fb14623837f61f4fbffd237e36212</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctor5C</name>
      <anchorfile>classArFunctor5C.html</anchorfile>
      <anchor>aae204beea64ebd30d568ff3981188ef9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorASyncTask</name>
    <filename>classArFunctorASyncTask.html</filename>
    <base>ArASyncTask</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorASyncTask</name>
      <anchorfile>classArFunctorASyncTask.html</anchorfile>
      <anchor>a95d0f839307f31ed8763571da8f7156c</anchor>
      <arglist>(ArRetFunctor1&lt; void *, void * &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArFunctorASyncTask.html</anchorfile>
      <anchor>a1fe7b4bb0b9fe8e7bfbee46fe7cc3f61</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorASyncTask</name>
      <anchorfile>classArFunctorASyncTask.html</anchorfile>
      <anchor>aca9d3a8f469363f29225247cc30c4e68</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC</name>
    <filename>classArFunctorC.html</filename>
    <templarg>T</templarg>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(T &amp;obj, void(T::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(T *obj, void(T::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArActionAvoidFront &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArActionAvoidFront &amp;obj, void(ArActionAvoidFront::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArActionAvoidFront *obj, void(ArActionAvoidFront::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArActionAvoidFront *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArActionAvoidFront &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArActionKeydrive &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArActionKeydrive &amp;obj, void(ArActionKeydrive::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArActionKeydrive *obj, void(ArActionKeydrive::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArActionKeydrive *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArActionKeydrive &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArActionRobotJoydrive &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArActionRobotJoydrive &amp;obj, void(ArActionRobotJoydrive::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArActionRobotJoydrive *obj, void(ArActionRobotJoydrive::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArActionRobotJoydrive *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArActionRobotJoydrive &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArACTS_1_2 &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArACTS_1_2 &amp;obj, void(ArACTS_1_2::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArACTS_1_2 *obj, void(ArACTS_1_2::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArACTS_1_2 *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArACTS_1_2 &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArAnalogGyro &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArAnalogGyro &amp;obj, void(ArAnalogGyro::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArAnalogGyro *obj, void(ArAnalogGyro::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArAnalogGyro *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArAnalogGyro &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArBatteryMTX &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArBatteryMTX &amp;obj, void(ArBatteryMTX::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArBatteryMTX *obj, void(ArBatteryMTX::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArBatteryMTX *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArBatteryMTX &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArBumpers &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArBumpers &amp;obj, void(ArBumpers::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArBumpers *obj, void(ArBumpers::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArBumpers *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArBumpers &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArCompassConnector &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArCompassConnector &amp;obj, void(ArCompassConnector::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArCompassConnector *obj, void(ArCompassConnector::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArCompassConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArCompassConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArDataLogger &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArDataLogger &amp;obj, void(ArDataLogger::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArDataLogger *obj, void(ArDataLogger::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArDataLogger *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArDataLogger &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArDPPTU &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArDPPTU &amp;obj, void(ArDPPTU::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArDPPTU *obj, void(ArDPPTU::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArDPPTU *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArDPPTU &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArForbiddenRangeDevice &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArForbiddenRangeDevice &amp;obj, void(ArForbiddenRangeDevice::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArForbiddenRangeDevice *obj, void(ArForbiddenRangeDevice::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArForbiddenRangeDevice *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArForbiddenRangeDevice &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArGPSConnector &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArGPSConnector &amp;obj, void(ArGPSConnector::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArGPSConnector *obj, void(ArGPSConnector::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArGPSConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArGPSConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArGripper &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArGripper &amp;obj, void(ArGripper::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArGripper *obj, void(ArGripper::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArGripper *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArGripper &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArIRs &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArIRs &amp;obj, void(ArIRs::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArIRs *obj, void(ArIRs::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArIRs *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArIRs &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArKeyHandler &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArKeyHandler &amp;obj, void(ArKeyHandler::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArKeyHandler *obj, void(ArKeyHandler::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArKeyHandler *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArKeyHandler &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArLaserFilter &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArLaserFilter &amp;obj, void(ArLaserFilter::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArLaserFilter *obj, void(ArLaserFilter::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArLaserFilter *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArLaserFilter &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArLaserLogger &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArLaserLogger &amp;obj, void(ArLaserLogger::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArLaserLogger *obj, void(ArLaserLogger::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArLaserLogger *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArLaserLogger &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArLaserReflectorDevice &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArLaserReflectorDevice &amp;obj, void(ArLaserReflectorDevice::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArLaserReflectorDevice *obj, void(ArLaserReflectorDevice::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArLaserReflectorDevice *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArLaserReflectorDevice &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArLCDMTX &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArLCDMTX &amp;obj, void(ArLCDMTX::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArLCDMTX *obj, void(ArLCDMTX::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArLCDMTX *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArLCDMTX &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArLMS1XX &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArLMS1XX &amp;obj, void(ArLMS1XX::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArLMS1XX *obj, void(ArLMS1XX::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArLMS1XX *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArLMS1XX &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArLMS2xx &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArLMS2xx &amp;obj, void(ArLMS2xx::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArLMS2xx *obj, void(ArLMS2xx::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArLMS2xx *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArLMS2xx &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArMode &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArMode &amp;obj, void(ArMode::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArMode *obj, void(ArMode::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArMode *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArMode &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArModeActs &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArModeActs &amp;obj, void(ArModeActs::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArModeActs *obj, void(ArModeActs::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArModeActs *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArModeActs &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArModeCamera &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArModeCamera &amp;obj, void(ArModeCamera::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArModeCamera *obj, void(ArModeCamera::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArModeCamera *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArModeCamera &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArModeCommand &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArModeCommand &amp;obj, void(ArModeCommand::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArModeCommand *obj, void(ArModeCommand::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArModeCommand *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArModeCommand &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArModeConfig &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArModeConfig &amp;obj, void(ArModeConfig::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArModeConfig *obj, void(ArModeConfig::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArModeConfig *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArModeConfig &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArModeGripper &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArModeGripper &amp;obj, void(ArModeGripper::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArModeGripper *obj, void(ArModeGripper::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArModeGripper *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArModeGripper &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArModeIO &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArModeIO &amp;obj, void(ArModeIO::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArModeIO *obj, void(ArModeIO::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArModeIO *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArModeIO &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArModeLaser &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArModeLaser &amp;obj, void(ArModeLaser::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArModeLaser *obj, void(ArModeLaser::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArModeLaser *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArModeLaser &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArModePosition &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArModePosition &amp;obj, void(ArModePosition::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArModePosition *obj, void(ArModePosition::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArModePosition *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArModePosition &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArModeSonar &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArModeSonar &amp;obj, void(ArModeSonar::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArModeSonar *obj, void(ArModeSonar::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArModeSonar *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArModeSonar &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArNetServer &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArNetServer &amp;obj, void(ArNetServer::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArNetServer *obj, void(ArNetServer::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArNetServer *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArNetServer &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArPTZ &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArPTZ &amp;obj, void(ArPTZ::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArPTZ *obj, void(ArPTZ::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArPTZ *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArPTZ &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArRangeDevice &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArRangeDevice &amp;obj, void(ArRangeDevice::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArRangeDevice *obj, void(ArRangeDevice::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArRangeDevice *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArRangeDevice &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArRatioInputJoydrive &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArRatioInputJoydrive &amp;obj, void(ArRatioInputJoydrive::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArRatioInputJoydrive *obj, void(ArRatioInputJoydrive::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArRatioInputJoydrive *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArRatioInputJoydrive &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArRatioInputKeydrive &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArRatioInputKeydrive &amp;obj, void(ArRatioInputKeydrive::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArRatioInputKeydrive *obj, void(ArRatioInputKeydrive::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArRatioInputKeydrive *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArRatioInputKeydrive &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArRatioInputRobotJoydrive &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArRatioInputRobotJoydrive &amp;obj, void(ArRatioInputRobotJoydrive::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArRatioInputRobotJoydrive *obj, void(ArRatioInputRobotJoydrive::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArRatioInputRobotJoydrive *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArRatioInputRobotJoydrive &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArRobot &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArRobot &amp;obj, void(ArRobot::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArRobot *obj, void(ArRobot::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArRobot *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArRobot &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArRobotBatteryPacketReader &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArRobotBatteryPacketReader &amp;obj, void(ArRobotBatteryPacketReader::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArRobotBatteryPacketReader *obj, void(ArRobotBatteryPacketReader::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArRobotBatteryPacketReader *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArRobotBatteryPacketReader &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArRobotConfig &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArRobotConfig &amp;obj, void(ArRobotConfig::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArRobotConfig *obj, void(ArRobotConfig::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArRobotConfig *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArRobotConfig &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArRobotConfigPacketReader &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArRobotConfigPacketReader &amp;obj, void(ArRobotConfigPacketReader::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArRobotConfigPacketReader *obj, void(ArRobotConfigPacketReader::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArRobotConfigPacketReader *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArRobotConfigPacketReader &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArRobotJoyHandler &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArRobotJoyHandler &amp;obj, void(ArRobotJoyHandler::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArRobotJoyHandler *obj, void(ArRobotJoyHandler::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArRobotJoyHandler *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArRobotJoyHandler &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArS3Series &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArS3Series &amp;obj, void(ArS3Series::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArS3Series *obj, void(ArS3Series::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArS3Series *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArS3Series &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArSonarAutoDisabler &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArSonarAutoDisabler &amp;obj, void(ArSonarAutoDisabler::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArSonarAutoDisabler *obj, void(ArSonarAutoDisabler::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArSonarAutoDisabler *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArSonarAutoDisabler &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArSonarDevice &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArSonarDevice &amp;obj, void(ArSonarDevice::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArSonarDevice *obj, void(ArSonarDevice::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArSonarDevice *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArSonarDevice &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArSonarMTX &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArSonarMTX &amp;obj, void(ArSonarMTX::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArSonarMTX *obj, void(ArSonarMTX::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArSonarMTX *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArSonarMTX &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArSpeechSynth &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArSpeechSynth &amp;obj, void(ArSpeechSynth::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArSpeechSynth *obj, void(ArSpeechSynth::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArSpeechSynth *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArSpeechSynth &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArSZSeries &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArSZSeries &amp;obj, void(ArSZSeries::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArSZSeries *obj, void(ArSZSeries::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArSZSeries *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArSZSeries &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArTCM2 &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArTCM2 &amp;obj, void(ArTCM2::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArTCM2 *obj, void(ArTCM2::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArTCM2 *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArTCM2 &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArUrg &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArUrg &amp;obj, void(ArUrg::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArUrg *obj, void(ArUrg::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArUrg *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArUrg &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArUrg_2_0 &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArUrg_2_0 &amp;obj, void(ArUrg_2_0::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArUrg_2_0 *obj, void(ArUrg_2_0::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArUrg_2_0 *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArUrg_2_0 &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ArVCC4 &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ArVCC4 &amp;obj, void(ArVCC4::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ArVCC4 *obj, void(ArVCC4::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ArVCC4 *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ArVCC4 &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ConnHandler &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ConnHandler &amp;obj, void(ConnHandler::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ConnHandler *obj, void(ConnHandler::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ConnHandler *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ConnHandler &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; ExampleRangeDevice &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(ExampleRangeDevice &amp;obj, void(ExampleRangeDevice::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(ExampleRangeDevice *obj, void(ExampleRangeDevice::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(ExampleRangeDevice *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(ExampleRangeDevice &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; GPSLogTask &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(GPSLogTask &amp;obj, void(GPSLogTask::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(GPSLogTask *obj, void(GPSLogTask::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(GPSLogTask *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(GPSLogTask &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; GripperControlHandler &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(GripperControlHandler &amp;obj, void(GripperControlHandler::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(GripperControlHandler *obj, void(GripperControlHandler::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(GripperControlHandler *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(GripperControlHandler &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; GyroTask &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(GyroTask &amp;obj, void(GyroTask::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(GyroTask *obj, void(GyroTask::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(GyroTask *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(GyroTask &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; Joydrive &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(Joydrive &amp;obj, void(Joydrive::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(Joydrive *obj, void(Joydrive::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(Joydrive *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(Joydrive &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; KeyPTU &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(KeyPTU &amp;obj, void(KeyPTU::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(KeyPTU *obj, void(KeyPTU::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(KeyPTU *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(KeyPTU &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; PrintGripStatus &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(PrintGripStatus &amp;obj, void(PrintGripStatus::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(PrintGripStatus *obj, void(PrintGripStatus::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(PrintGripStatus *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(PrintGripStatus &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArFunctorC&lt; PrintingTask &gt;</name>
    <filename>classArFunctorC.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab6e64aa5bc438ed71ed737016c100f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>aababaffe48098efcbde181765b9623f4</anchor>
      <arglist>(PrintingTask &amp;obj, void(PrintingTask::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a1498fc59a139f39bbba4e0b9432f835a</anchor>
      <arglist>(PrintingTask *obj, void(PrintingTask::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>ab62f4d8f1c9d91f3198e16863b332251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a56a2f520f894e1f65dac13180f65e8ce</anchor>
      <arglist>(PrintingTask *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a09a8ae3a7f5629b0ad58c1a55e1f37fb</anchor>
      <arglist>(PrintingTask &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArFunctorC</name>
      <anchorfile>classArFunctorC.html</anchorfile>
      <anchor>a6161d2535e405cdc3906f9b9c776a620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGenericCallbackList</name>
    <filename>classArGenericCallbackList.html</filename>
    <templarg>GenericFunctor</templarg>
    <member kind="function">
      <type>void</type>
      <name>addCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>abba0eadb150d38831460a8ec536b5284</anchor>
      <arglist>(GenericFunctor functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a584dbc8f7e26bcf3127d07ab99524145</anchor>
      <arglist>(const char *name=&quot;&quot;, ArLog::LogLevel logLevel=ArLog::Verbose, bool singleShot=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>adeaa9b5526e59e3f732a6585f70e5379</anchor>
      <arglist>(GenericFunctor functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogging</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae47f38096a4413c584bff84eee1c8850</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogLevel</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a262e6d1cc553e7e52458f32b9c040c98</anchor>
      <arglist>(ArLog::LogLevel logLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a036816043aa91332e56f2fc65ff17c04</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNameVar</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a191cb0ccb53ba2d339e46525a61d7c8d</anchor>
      <arglist>(const char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleShot</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a3253cd034a7b92f5288b583f31631de3</anchor>
      <arglist>(bool singleShot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae63c1564a8f3db8406d1c96bc5104b0c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGenericCallbackList&lt; ArFunctor * &gt;</name>
    <filename>classArGenericCallbackList.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>abba0eadb150d38831460a8ec536b5284</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a584dbc8f7e26bcf3127d07ab99524145</anchor>
      <arglist>(const char *name=&quot;&quot;, ArLog::LogLevel logLevel=ArLog::Verbose, bool singleShot=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>adeaa9b5526e59e3f732a6585f70e5379</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogging</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae47f38096a4413c584bff84eee1c8850</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogLevel</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a262e6d1cc553e7e52458f32b9c040c98</anchor>
      <arglist>(ArLog::LogLevel logLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a036816043aa91332e56f2fc65ff17c04</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNameVar</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a191cb0ccb53ba2d339e46525a61d7c8d</anchor>
      <arglist>(const char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleShot</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a3253cd034a7b92f5288b583f31631de3</anchor>
      <arglist>(bool singleShot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae63c1564a8f3db8406d1c96bc5104b0c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGenericCallbackList&lt; ArFunctor1&lt; P1 &gt; * &gt;</name>
    <filename>classArGenericCallbackList.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>abba0eadb150d38831460a8ec536b5284</anchor>
      <arglist>(ArFunctor1&lt; P1 &gt; *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a584dbc8f7e26bcf3127d07ab99524145</anchor>
      <arglist>(const char *name=&quot;&quot;, ArLog::LogLevel logLevel=ArLog::Verbose, bool singleShot=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>adeaa9b5526e59e3f732a6585f70e5379</anchor>
      <arglist>(ArFunctor1&lt; P1 &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogging</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae47f38096a4413c584bff84eee1c8850</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogLevel</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a262e6d1cc553e7e52458f32b9c040c98</anchor>
      <arglist>(ArLog::LogLevel logLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a036816043aa91332e56f2fc65ff17c04</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNameVar</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a191cb0ccb53ba2d339e46525a61d7c8d</anchor>
      <arglist>(const char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleShot</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a3253cd034a7b92f5288b583f31631de3</anchor>
      <arglist>(bool singleShot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae63c1564a8f3db8406d1c96bc5104b0c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGenericCallbackList&lt; ArFunctor2&lt; P1, P2 &gt; * &gt;</name>
    <filename>classArGenericCallbackList.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>abba0eadb150d38831460a8ec536b5284</anchor>
      <arglist>(ArFunctor2&lt; P1, P2 &gt; *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a584dbc8f7e26bcf3127d07ab99524145</anchor>
      <arglist>(const char *name=&quot;&quot;, ArLog::LogLevel logLevel=ArLog::Verbose, bool singleShot=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>adeaa9b5526e59e3f732a6585f70e5379</anchor>
      <arglist>(ArFunctor2&lt; P1, P2 &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogging</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae47f38096a4413c584bff84eee1c8850</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogLevel</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a262e6d1cc553e7e52458f32b9c040c98</anchor>
      <arglist>(ArLog::LogLevel logLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a036816043aa91332e56f2fc65ff17c04</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNameVar</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a191cb0ccb53ba2d339e46525a61d7c8d</anchor>
      <arglist>(const char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleShot</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a3253cd034a7b92f5288b583f31631de3</anchor>
      <arglist>(bool singleShot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae63c1564a8f3db8406d1c96bc5104b0c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGenericCallbackList&lt; ArFunctor3&lt; P1, P2, P3 &gt; * &gt;</name>
    <filename>classArGenericCallbackList.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>abba0eadb150d38831460a8ec536b5284</anchor>
      <arglist>(ArFunctor3&lt; P1, P2, P3 &gt; *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a584dbc8f7e26bcf3127d07ab99524145</anchor>
      <arglist>(const char *name=&quot;&quot;, ArLog::LogLevel logLevel=ArLog::Verbose, bool singleShot=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>adeaa9b5526e59e3f732a6585f70e5379</anchor>
      <arglist>(ArFunctor3&lt; P1, P2, P3 &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogging</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae47f38096a4413c584bff84eee1c8850</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogLevel</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a262e6d1cc553e7e52458f32b9c040c98</anchor>
      <arglist>(ArLog::LogLevel logLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a036816043aa91332e56f2fc65ff17c04</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNameVar</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a191cb0ccb53ba2d339e46525a61d7c8d</anchor>
      <arglist>(const char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleShot</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a3253cd034a7b92f5288b583f31631de3</anchor>
      <arglist>(bool singleShot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae63c1564a8f3db8406d1c96bc5104b0c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGenericCallbackList&lt; ArFunctor4&lt; P1, P2, P3, P4 &gt; * &gt;</name>
    <filename>classArGenericCallbackList.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>abba0eadb150d38831460a8ec536b5284</anchor>
      <arglist>(ArFunctor4&lt; P1, P2, P3, P4 &gt; *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a584dbc8f7e26bcf3127d07ab99524145</anchor>
      <arglist>(const char *name=&quot;&quot;, ArLog::LogLevel logLevel=ArLog::Verbose, bool singleShot=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remCallback</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>adeaa9b5526e59e3f732a6585f70e5379</anchor>
      <arglist>(ArFunctor4&lt; P1, P2, P3, P4 &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogging</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae47f38096a4413c584bff84eee1c8850</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogLevel</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a262e6d1cc553e7e52458f32b9c040c98</anchor>
      <arglist>(ArLog::LogLevel logLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a036816043aa91332e56f2fc65ff17c04</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNameVar</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a191cb0ccb53ba2d339e46525a61d7c8d</anchor>
      <arglist>(const char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleShot</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>a3253cd034a7b92f5288b583f31631de3</anchor>
      <arglist>(bool singleShot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGenericCallbackList</name>
      <anchorfile>classArGenericCallbackList.html</anchorfile>
      <anchor>ae63c1564a8f3db8406d1c96bc5104b0c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalFunctor</name>
    <filename>classArGlobalFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor</name>
      <anchorfile>classArGlobalFunctor.html</anchorfile>
      <anchor>add466360a85f10a0164744f0e2fec78e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor</name>
      <anchorfile>classArGlobalFunctor.html</anchorfile>
      <anchor>a0d1a8873bf1d2a51d44636ee75b0c836</anchor>
      <arglist>(void(*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor.html</anchorfile>
      <anchor>aa6946d25fd07a25d976deeafbb53b576</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalFunctor</name>
      <anchorfile>classArGlobalFunctor.html</anchorfile>
      <anchor>acd54413f3f009ac058bf7484a94b7070</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalFunctor1</name>
    <filename>classArGlobalFunctor1.html</filename>
    <templarg>P1</templarg>
    <base>ArFunctor1</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor1</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>ab71f18da72efa9f56cf6eadde85e4ab3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor1</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>a08fa5d462244b568dacb000838a646dd</anchor>
      <arglist>(void(*func)(P1))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor1</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>a3f7536877bb361ea74b9fd4789eb7221</anchor>
      <arglist>(void(*func)(P1), P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>adc31735285c219c61ac23f2200bba7bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>ad94dff9851a225a56bfd4a544139ad09</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>ade674c66329b8caf6ed19596adbb6eae</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalFunctor1</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>a41e054db7a5d38a233d3cea71d7d4cc0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalFunctor1&lt; int &gt;</name>
    <filename>classArGlobalFunctor1.html</filename>
    <base>ArFunctor1&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor1</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>ab71f18da72efa9f56cf6eadde85e4ab3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor1</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>a08fa5d462244b568dacb000838a646dd</anchor>
      <arglist>(void(*func)(int))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor1</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>a3f7536877bb361ea74b9fd4789eb7221</anchor>
      <arglist>(void(*func)(int), intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>adc31735285c219c61ac23f2200bba7bd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>ad94dff9851a225a56bfd4a544139ad09</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>ade674c66329b8caf6ed19596adbb6eae</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalFunctor1</name>
      <anchorfile>classArGlobalFunctor1.html</anchorfile>
      <anchor>a41e054db7a5d38a233d3cea71d7d4cc0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalFunctor2</name>
    <filename>classArGlobalFunctor2.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor2</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor2</name>
      <anchorfile>classArGlobalFunctor2.html</anchorfile>
      <anchor>a8b9f7e7e3558e230163398e70a4ac6fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor2</name>
      <anchorfile>classArGlobalFunctor2.html</anchorfile>
      <anchor>a08f032f1b5069c8729895abbbb7434dd</anchor>
      <arglist>(void(*func)(P1, P2))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor2</name>
      <anchorfile>classArGlobalFunctor2.html</anchorfile>
      <anchor>abcde962bbba8869edfdfd3d9f459d180</anchor>
      <arglist>(void(*func)(P1, P2), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor2</name>
      <anchorfile>classArGlobalFunctor2.html</anchorfile>
      <anchor>ae80aed16344355b0bbabe3e34eb97ac5</anchor>
      <arglist>(void(*func)(P1, P2), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor2.html</anchorfile>
      <anchor>ac2eec9afb7e9dc4024d181b3453ca847</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor2.html</anchorfile>
      <anchor>ad593e33ff712bd9fd50b95311f50331d</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor2.html</anchorfile>
      <anchor>aafe72b10c048d3d8cc4a2cab78cd1497</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalFunctor2.html</anchorfile>
      <anchor>a56a9a71dd32d8e64e34665a5e525524f</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalFunctor2.html</anchorfile>
      <anchor>ace982b416433ca863fe5fa30159cc567</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalFunctor2</name>
      <anchorfile>classArGlobalFunctor2.html</anchorfile>
      <anchor>a75615162760106eb310cb47705fbe162</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalFunctor3</name>
    <filename>classArGlobalFunctor3.html</filename>
    <templarg>P1</templarg>
    <templarg>P2</templarg>
    <templarg>P3</templarg>
    <base>ArFunctor3</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor3</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>a536b35e2ec15de5c97268a3da6a96378</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor3</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>a3b6428dee84b213bbe0c86927a05b23f</anchor>
      <arglist>(void(*func)(P1, P2, P3))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor3</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>aab42ef4f258a69ecb3a76ef108ee15b3</anchor>
      <arglist>(void(*func)(P1, P2, P3), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor3</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>acd702c042425168fd91236ecb19e93a1</anchor>
      <arglist>(void(*func)(P1, P2, P3), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor3</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>a475e11c2a42767ff2b7cb7ee4a74d62f</anchor>
      <arglist>(void(*func)(P1, P2, P3), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>a06e190c3e646467bb37cf6c7d4b89196</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>ad8ba6d6235b683c651b8cd04632bc815</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>a84cddf60ca0b3902222bbbba3f7080bc</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>ae9dc7cff02ce60d6ae55d2325b1f5962</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>a4ce789a7f9dc22c207487c7e307debb9</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>a1801e90617090cfaa75ff00a9ea8d5d8</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>a16180a936ad06d1ccb022f5e3fba255b</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalFunctor3</name>
      <anchorfile>classArGlobalFunctor3.html</anchorfile>
      <anchor>a9af884ff44dedaf63098b79958319759</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalFunctor4</name>
    <filename>classArGlobalFunctor4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor4</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor4</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a13bd24f9775bf12280c4d5a436da0642</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor4</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a06509fa092a8fa035f581fe93cb42bcc</anchor>
      <arglist>(void(*func)(P1, P2, P3, P4))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor4</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>ac0dcf7b262cc54919f8cafa0776077bb</anchor>
      <arglist>(void(*func)(P1, P2, P3, P4), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor4</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>ae5959fca81499ba24823a0a158adfd35</anchor>
      <arglist>(void(*func)(P1, P2, P3, P4), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor4</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a07d38228349a27a86a67b443fd43e792</anchor>
      <arglist>(void(*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor4</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a990b0489d1cdf63564513b4124f689f1</anchor>
      <arglist>(void(*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a47dbfabc9cd377c764b6097e8d9310fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>ade96e03d98aea0a0dabe44d361875119</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a396609ba82c63fbdc419a61ffa960dcc</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a699f9a53959ccd161bea289403484e72</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a29e11314e19987de51e3be8785531934</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a01f585fbb76c6582f8342fba34c4e9ee</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a63e34a0c0c07fed3002a6e6bff1d07ee</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a5a13e564e17104a71834986917e5c29e</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>af26fc1647cf64c9875c25645b582e2d9</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalFunctor4</name>
      <anchorfile>classArGlobalFunctor4.html</anchorfile>
      <anchor>a9941ac80e72a4197d7e2417e47cd9efc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalFunctor5</name>
    <filename>classArGlobalFunctor5.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArFunctor5</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor5</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>ab18e1b3ecd832c90dd9ff49fc229c136</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor5</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>af10c05356b4cb5b786c75971539e3c47</anchor>
      <arglist>(void(*func)(P1, P2, P3, P4, P5))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor5</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>a84e5b790647ccb471352ffbef1f5f39a</anchor>
      <arglist>(void(*func)(P1, P2, P3, P4, P5), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor5</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>a33dc64f60f4f1a92b7c20443be170aed</anchor>
      <arglist>(void(*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor5</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>aa2aa20ccfc992f21c049bb6580177daf</anchor>
      <arglist>(void(*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor5</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>a660c5073403b0e408c2d9353736f01f2</anchor>
      <arglist>(void(*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalFunctor5</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>a4673df5e31cc67ecb6e28c3449d28600</anchor>
      <arglist>(void(*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>af3c650809187ec295213bb646a676897</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>ac047858aa9a849c3aca56baa6d3d5ec9</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>a6a1464dfd52d0e01cbc8e6911da290d3</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>a0e1e968e7bf91a5345d87dc4d7c885de</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>ad0fd199cbc8ecafb387528a879923a86</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>a7538e808342d8c1a877d43f5468152d7</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>aa9448c09556b8d3f04be71f22511f72c</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>a6fb70256c1ec4007c0f8ea1cce0603c0</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>a73c6df1d8095ad1d4bf5ed10156b6573</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>a14542978505e336e5a567799777e1d4b</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP5</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>ae40eeaada9cc96578f9f1982e32bb7c8</anchor>
      <arglist>(P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalFunctor5</name>
      <anchorfile>classArGlobalFunctor5.html</anchorfile>
      <anchor>a73f05957e2385930e827a82d88023ccf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor</name>
    <filename>classArGlobalRetFunctor.html</filename>
    <templarg>Ret</templarg>
    <base>ArRetFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a10dac7c309a8a4c7e607736f78ff1173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a16b1714d24f460af4ecc9b05d5d2a77f</anchor>
      <arglist>(Ret(*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>ac1ee584a9e6e01a99021835f84096e89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a3a1c7b026341d0b4686d038aff32a32e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor1</name>
    <filename>classArGlobalRetFunctor1.html</filename>
    <templarg>Ret</templarg>
    <templarg>P1</templarg>
    <base>ArRetFunctor1</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor1</name>
      <anchorfile>classArGlobalRetFunctor1.html</anchorfile>
      <anchor>af5dde8e084b1f0cc1a5544fbf084020f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor1</name>
      <anchorfile>classArGlobalRetFunctor1.html</anchorfile>
      <anchor>abcd487c83c37f6706f333eb82ec315a1</anchor>
      <arglist>(Ret(*func)(P1))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor1</name>
      <anchorfile>classArGlobalRetFunctor1.html</anchorfile>
      <anchor>a51b3d098e869bac09205b222ee93505c</anchor>
      <arglist>(Ret(*func)(P1), P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor1.html</anchorfile>
      <anchor>ac2cbf001872e7cc4d271723ed3d3e3ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor1.html</anchorfile>
      <anchor>afc728224e7c7099a82ae5942fa1d21c6</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalRetFunctor1.html</anchorfile>
      <anchor>a8a9ab9bef042bc93c609f2b07997d465</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor1</name>
      <anchorfile>classArGlobalRetFunctor1.html</anchorfile>
      <anchor>aeed4a8203b342f6a7459e06f124bf577</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor2</name>
    <filename>classArGlobalRetFunctor2.html</filename>
    <templarg>Ret</templarg>
    <templarg>P1</templarg>
    <templarg>P2</templarg>
    <base>ArRetFunctor2</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a783c0263538b0315066c99878f0fb69b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac47dcc80e71ad351965b0c99e9557576</anchor>
      <arglist>(Ret(*func)(P1, P2))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac6d41b491b4bd332f734ba954d665c71</anchor>
      <arglist>(Ret(*func)(P1, P2), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ada4b24bbe067c6703f6e7f3a74976c4d</anchor>
      <arglist>(Ret(*func)(P1, P2), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a874c75b175c87e951a6d9b73cc47e653</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>aabcb9f72b11378b9323bd5cc0d557633</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ad2024e1c984432e2f073ebc574206147</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a212209c06ab740ed196802b9f748c5f6</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a1523d019731e9adccfe6a74c6f35215e</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a623fb361fb0e661fa973f069eeb94ffd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor2&lt; ArBatteryMTX *, int, const char * &gt;</name>
    <filename>classArGlobalRetFunctor2.html</filename>
    <base>ArRetFunctor2&lt; ArBatteryMTX *, int, const char * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a783c0263538b0315066c99878f0fb69b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac47dcc80e71ad351965b0c99e9557576</anchor>
      <arglist>(ArBatteryMTX *(*func)(int, const char *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac6d41b491b4bd332f734ba954d665c71</anchor>
      <arglist>(ArBatteryMTX *(*func)(int, const char *), intp1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ada4b24bbe067c6703f6e7f3a74976c4d</anchor>
      <arglist>(ArBatteryMTX *(*func)(int, const char *), intp1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArBatteryMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a874c75b175c87e951a6d9b73cc47e653</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArBatteryMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>aabcb9f72b11378b9323bd5cc0d557633</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArBatteryMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ad2024e1c984432e2f073ebc574206147</anchor>
      <arglist>(intp1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a212209c06ab740ed196802b9f748c5f6</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a1523d019731e9adccfe6a74c6f35215e</anchor>
      <arglist>(const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a623fb361fb0e661fa973f069eeb94ffd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor2&lt; ArLaser *, int, const char * &gt;</name>
    <filename>classArGlobalRetFunctor2.html</filename>
    <base>ArRetFunctor2&lt; ArLaser *, int, const char * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a783c0263538b0315066c99878f0fb69b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac47dcc80e71ad351965b0c99e9557576</anchor>
      <arglist>(ArLaser *(*func)(int, const char *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac6d41b491b4bd332f734ba954d665c71</anchor>
      <arglist>(ArLaser *(*func)(int, const char *), intp1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ada4b24bbe067c6703f6e7f3a74976c4d</anchor>
      <arglist>(ArLaser *(*func)(int, const char *), intp1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArLaser *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a874c75b175c87e951a6d9b73cc47e653</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArLaser *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>aabcb9f72b11378b9323bd5cc0d557633</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArLaser *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ad2024e1c984432e2f073ebc574206147</anchor>
      <arglist>(intp1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a212209c06ab740ed196802b9f748c5f6</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a1523d019731e9adccfe6a74c6f35215e</anchor>
      <arglist>(const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a623fb361fb0e661fa973f069eeb94ffd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor2&lt; ArLCDMTX *, int, const char * &gt;</name>
    <filename>classArGlobalRetFunctor2.html</filename>
    <base>ArRetFunctor2&lt; ArLCDMTX *, int, const char * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a783c0263538b0315066c99878f0fb69b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac47dcc80e71ad351965b0c99e9557576</anchor>
      <arglist>(ArLCDMTX *(*func)(int, const char *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac6d41b491b4bd332f734ba954d665c71</anchor>
      <arglist>(ArLCDMTX *(*func)(int, const char *), intp1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ada4b24bbe067c6703f6e7f3a74976c4d</anchor>
      <arglist>(ArLCDMTX *(*func)(int, const char *), intp1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArLCDMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a874c75b175c87e951a6d9b73cc47e653</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArLCDMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>aabcb9f72b11378b9323bd5cc0d557633</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArLCDMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ad2024e1c984432e2f073ebc574206147</anchor>
      <arglist>(intp1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a212209c06ab740ed196802b9f748c5f6</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a1523d019731e9adccfe6a74c6f35215e</anchor>
      <arglist>(const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a623fb361fb0e661fa973f069eeb94ffd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor2&lt; ArSonarMTX *, int, const char * &gt;</name>
    <filename>classArGlobalRetFunctor2.html</filename>
    <base>ArRetFunctor2&lt; ArSonarMTX *, int, const char * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a783c0263538b0315066c99878f0fb69b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac47dcc80e71ad351965b0c99e9557576</anchor>
      <arglist>(ArSonarMTX *(*func)(int, const char *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac6d41b491b4bd332f734ba954d665c71</anchor>
      <arglist>(ArSonarMTX *(*func)(int, const char *), intp1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ada4b24bbe067c6703f6e7f3a74976c4d</anchor>
      <arglist>(ArSonarMTX *(*func)(int, const char *), intp1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArSonarMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a874c75b175c87e951a6d9b73cc47e653</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArSonarMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>aabcb9f72b11378b9323bd5cc0d557633</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArSonarMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ad2024e1c984432e2f073ebc574206147</anchor>
      <arglist>(intp1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a212209c06ab740ed196802b9f748c5f6</anchor>
      <arglist>(intp1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a1523d019731e9adccfe6a74c6f35215e</anchor>
      <arglist>(const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a623fb361fb0e661fa973f069eeb94ffd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor2&lt; bool, const char *, const char * &gt;</name>
    <filename>classArGlobalRetFunctor2.html</filename>
    <base>ArRetFunctor2&lt; bool, const char *, const char * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a783c0263538b0315066c99878f0fb69b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac47dcc80e71ad351965b0c99e9557576</anchor>
      <arglist>(bool(*func)(const char *, const char *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ac6d41b491b4bd332f734ba954d665c71</anchor>
      <arglist>(bool(*func)(const char *, const char *), const char *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ada4b24bbe067c6703f6e7f3a74976c4d</anchor>
      <arglist>(bool(*func)(const char *, const char *), const char *p1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a874c75b175c87e951a6d9b73cc47e653</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>aabcb9f72b11378b9323bd5cc0d557633</anchor>
      <arglist>(const char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>ad2024e1c984432e2f073ebc574206147</anchor>
      <arglist>(const char *p1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a212209c06ab740ed196802b9f748c5f6</anchor>
      <arglist>(const char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a1523d019731e9adccfe6a74c6f35215e</anchor>
      <arglist>(const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor2</name>
      <anchorfile>classArGlobalRetFunctor2.html</anchorfile>
      <anchor>a623fb361fb0e661fa973f069eeb94ffd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor3</name>
    <filename>classArGlobalRetFunctor3.html</filename>
    <templarg>Ret</templarg>
    <templarg>P1</templarg>
    <templarg>P2</templarg>
    <templarg>P3</templarg>
    <base>ArRetFunctor3</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a8a202c009f3713b9cad6bab8ea1c7b73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>ac403399742286bf0839e00aa4ee093d3</anchor>
      <arglist>(Ret(*func)(P1, P2, P3))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a20311548d4f5dc5ff272e42a628b443b</anchor>
      <arglist>(Ret(*func)(P1, P2, P3), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a1f40b4fcfa02bf4493297cd9574a54b2</anchor>
      <arglist>(Ret(*func)(P1, P2, P3), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>ab82ac6ec6afd2c0269a931e55f02f246</anchor>
      <arglist>(Ret(*func)(P1, P2, P3), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>ade6d503e110f3f84904fadbe98f78b2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a7647d48906c73757af92f0979c3bed1b</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>aa5d47b91af379d324d76ea79668b33b2</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>ad605cf04d8d0dc08f84504c90f582f70</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a69851cec82286e6b7bbf1760b9c2ce21</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>ad1792a1b61bb8d3481bd14fba8393e7e</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a9c99fa94b86cd67e55839b9f3d86689e</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a6094caecfc68ba3fbdd537b9ea144c62</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor3&lt; ArDeviceConnection *, const char *, const char *, const char * &gt;</name>
    <filename>classArGlobalRetFunctor3.html</filename>
    <base>ArRetFunctor3&lt; ArDeviceConnection *, const char *, const char *, const char * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a8a202c009f3713b9cad6bab8ea1c7b73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>ac403399742286bf0839e00aa4ee093d3</anchor>
      <arglist>(ArDeviceConnection *(*func)(const char *, const char *, const char *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a20311548d4f5dc5ff272e42a628b443b</anchor>
      <arglist>(ArDeviceConnection *(*func)(const char *, const char *, const char *), const char *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a1f40b4fcfa02bf4493297cd9574a54b2</anchor>
      <arglist>(ArDeviceConnection *(*func)(const char *, const char *, const char *), const char *p1, const char *p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>ab82ac6ec6afd2c0269a931e55f02f246</anchor>
      <arglist>(ArDeviceConnection *(*func)(const char *, const char *, const char *), const char *p1, const char *p2, const char *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>ade6d503e110f3f84904fadbe98f78b2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a7647d48906c73757af92f0979c3bed1b</anchor>
      <arglist>(const char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>aa5d47b91af379d324d76ea79668b33b2</anchor>
      <arglist>(const char *p1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>ad605cf04d8d0dc08f84504c90f582f70</anchor>
      <arglist>(const char *p1, const char *p2, const char *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a69851cec82286e6b7bbf1760b9c2ce21</anchor>
      <arglist>(const char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>ad1792a1b61bb8d3481bd14fba8393e7e</anchor>
      <arglist>(const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a9c99fa94b86cd67e55839b9f3d86689e</anchor>
      <arglist>(const char *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor3</name>
      <anchorfile>classArGlobalRetFunctor3.html</anchorfile>
      <anchor>a6094caecfc68ba3fbdd537b9ea144c62</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor4</name>
    <filename>classArGlobalRetFunctor4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor4</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor4</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>ad4c32af8b259c375609255947d963653</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor4</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>acb12108f76eb703cb9d12e11dfdf5cf9</anchor>
      <arglist>(Ret(*func)(P1, P2, P3, P4))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor4</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>aed86710a83bebca142ff246fab346922</anchor>
      <arglist>(Ret(*func)(P1, P2, P3, P4), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor4</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>a3aaa36db2031acf321fede55112033ba</anchor>
      <arglist>(Ret(*func)(P1, P2, P3, P4), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor4</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>a0b4bee3835235fdee23711613b58ec11</anchor>
      <arglist>(Ret(*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor4</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>aa7e6bbf7e403421954d511580e134016</anchor>
      <arglist>(Ret(*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>a713e67de4fcc886f75cb67255a1f4166</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>accdccdafa17e4bb504a53dc0ea944ccb</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>a1fa8d69e1e8d84dc462e08375d372c52</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>a25eb2ce4b388bffdd8cfd221c67c3121</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>af8a688bc41f8b5add154d32e657806cf</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>a2c6fc154c3dff89862cfb180932135b8</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>a7b2eeb2377f75c9b90e1fe06a60a9149</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>aecfe226fc5c19ae57a26abce6c47700e</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>a076a27738c00e742f965d025641338b5</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor4</name>
      <anchorfile>classArGlobalRetFunctor4.html</anchorfile>
      <anchor>a60cad648f789de58ee66a4a68c5bdc6b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor5</name>
    <filename>classArGlobalRetFunctor5.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor5</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor5</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a9513b843023ba343ae7a781eef618c01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor5</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a4aba2fcc22321f68fe7729d75b8d1edb</anchor>
      <arglist>(Ret(*func)(P1, P2, P3, P4, P5))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor5</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>af825fae7535a5e6d375825f21e9a9113</anchor>
      <arglist>(Ret(*func)(P1, P2, P3, P4, P5), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor5</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a2520a874eddfebd72d35ce930b26a3bb</anchor>
      <arglist>(Ret(*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor5</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a5dda2567c32165f2c74267554c8bb93d</anchor>
      <arglist>(Ret(*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor5</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>af1f5a39deb2bebe3dedb672b64a8a7e0</anchor>
      <arglist>(Ret(*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor5</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>af74fac948579a74dd7ae5c7a030403c1</anchor>
      <arglist>(Ret(*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>ad140df03abc7700b8ed4cb8c7b38ed11</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a9726aa82e9c0b7c32afbf5a6f3edd90c</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>aaaa7275df9711b78cec1b86726d37037</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a07aca60f59580a3802ff2846153026ec</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a379ea8577add63658960bc40a08ccaa9</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a8656f22560fcf59b996f7232cc3bc447</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a63764d8ae217a5b50ce1fac490efe8c2</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a214cac9239b1b5f0dee90cb1f1d27f81</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a11d23bea22bc2cdc62b8d9c707c2f4c0</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a759c855ed4def740c653472147d5674a</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP5</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>ad83a629df3c39fc9e631e66150856d84</anchor>
      <arglist>(P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor5</name>
      <anchorfile>classArGlobalRetFunctor5.html</anchorfile>
      <anchor>a486521227f61fdc8d08285397b5bd8b1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor&lt; bool &gt;</name>
    <filename>classArGlobalRetFunctor.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a10dac7c309a8a4c7e607736f78ff1173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a16b1714d24f460af4ecc9b05d5d2a77f</anchor>
      <arglist>(bool(*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>ac1ee584a9e6e01a99021835f84096e89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a3a1c7b026341d0b4686d038aff32a32e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor&lt; double &gt;</name>
    <filename>classArGlobalRetFunctor.html</filename>
    <base>ArRetFunctor&lt; double &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a10dac7c309a8a4c7e607736f78ff1173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a16b1714d24f460af4ecc9b05d5d2a77f</anchor>
      <arglist>(double(*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>ac1ee584a9e6e01a99021835f84096e89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a3a1c7b026341d0b4686d038aff32a32e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor&lt; int &gt;</name>
    <filename>classArGlobalRetFunctor.html</filename>
    <base>ArRetFunctor&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a10dac7c309a8a4c7e607736f78ff1173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a16b1714d24f460af4ecc9b05d5d2a77f</anchor>
      <arglist>(int(*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>ac1ee584a9e6e01a99021835f84096e89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a3a1c7b026341d0b4686d038aff32a32e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGlobalRetFunctor&lt; unsigned long &gt;</name>
    <filename>classArGlobalRetFunctor.html</filename>
    <base>ArRetFunctor&lt; unsigned long &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a10dac7c309a8a4c7e607736f78ff1173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a16b1714d24f460af4ecc9b05d5d2a77f</anchor>
      <arglist>(unsigned long(*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned long</type>
      <name>invokeR</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>ac1ee584a9e6e01a99021835f84096e89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGlobalRetFunctor</name>
      <anchorfile>classArGlobalRetFunctor.html</anchorfile>
      <anchor>a3a1c7b026341d0b4686d038aff32a32e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGPS</name>
    <filename>classArGPS.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>blockingConnect</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a1e42274140dda87104aee8198ba26932</anchor>
      <arglist>(unsigned long connectTimeout=20000)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>connect</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a5edda03cc9e4c8db380e18f8d5465b7e</anchor>
      <arglist>(unsigned long connectTimeout=20000)</arglist>
    </member>
    <member kind="function">
      <type>ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aac01338d1280fdc0086251049d6910c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aaa9e1a5e2a9016b7c0ff1435b11ee7e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logData</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>afb09fb019a2bf2047de993b78b9b12d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>abb87bcbe1297e2890a2eb51e999424f6</anchor>
      <arglist>(bool labels=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>read</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ad503a2238efd4e8b447472ceacff6fe4</anchor>
      <arglist>(unsigned long maxTime=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>readWithLock</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a8cb49994335166fa3d3fd750bf5a054e</anchor>
      <arglist>(unsigned int maxTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a61bdacae0f1a76978f2972055fca02c9</anchor>
      <arglist>(ArDeviceConnection *deviceConn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreChecksum</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a16e5a84ab087aa17511adfb884846279</anchor>
      <arglist>(bool ignore)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ac72416e9644f85190ab246fba82a7de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>enum ArGPS::@10</type>
      <name>ReadFlags</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ae2901a64f2c349bd9f09a030f30b8b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FixType</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aac34efdbce1db348fb8a48586e62e2c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const ArGPS::Data &amp;</type>
      <name>getCurrentDataRef</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a82e7bf37171be31e9c6fb8a70b4d9e25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FixType</type>
      <name>getFixType</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>abeca0497f9248784e868f038dd9f4ceb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFixTypeName</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a6d72883bfa14c7a5b7f0cedb6203f951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>havePosition</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a9897226b2e48796de25b114a74b1ecf5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveLatitude</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aed3f5b61e32d7ddc6e71e239ec8ca8f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveLongitude</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ae7e9023aebdd04835d2390941d10cd4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatitude</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a087bc9dd3bd7d234269a0de4b831f5a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLongitude</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ab9733a782e5decb7f7726b89584c9f94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArLLACoords</type>
      <name>getLLA</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a47c64e72b4c6d5c10710f9d1d49dcbf1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getPose</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a0bd7f495026850214206e79a11bd297d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getTimeReceivedPosition</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a0f6f55f2a528e81618cb941457849e44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveSpeed</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a0d68733e8025cbf7af907bf130a2c1ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpeed</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a03201806c2e61c5e8e0fdf1d2c9309e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getGPSPositionTimestamp</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ad33f8559bd069c837cc02a3414f6a1b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveDGPSStation</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a407209b2ff4220c23633fd1556b9bdce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned short</type>
      <name>getDGPSStationID</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a55f53667aee0f967c144625e400a32eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveGarminPositionError</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a5c0f1cf598668c670e286e2e09058505</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGarminPositionError</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a3ef2c6a652ce611f70540a0f1183e2f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveGarminVerticalPositionError</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>af58b71443b74178ba30cd5392e27dc0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGarminVerticalPositionError</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a4506010ffcf62d79e138b78e6f4ebf6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveCompassHeadingMag</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a0e98fa2db7aeb5c3b8588aecc1dd7a99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveCompassHeadingTrue</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a3ce68ed50982038ec20cd6f85e5bb965</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCompassHeadingMag</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aa9ca88a70e6f2c5f1eae73a7645af46c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCompassHeadingTrue</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a1353b14052843fd520255e531cf14bd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompassHeadingMag</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aaded558b32fa77a184447a2fca6aecc3</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompassHeadingTrue</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ab3c0274845aff30324bd902502f160b3</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompassHeadingMagWithLock</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ace487fd8b428647fb0a6cb1ca2be6688</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompassHeadingTrueWithLock</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ab67aaca761e9bc010e7827e8baf03d21</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveAltitude</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a651d7f4c6582e2096f7ae2eadb153c01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAltitude</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a6a3bcdde71e5a36b3b4bb71f84e84f86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveAltimeter</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aef989a28b59adc78103e78017f2ea66a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAltimeter</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a022c290b492160b4ee36ba61d91b3b3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveHDOP</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a01ff58dfbbfb102b58c762ea1ac5a7f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getHDOP</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a725726751804ff7bb148b9cbd1fe83d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveVDOP</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aa780f2fd24fc5a18ffd1ce7566532c01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVDOP</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aca880c875597c0a534eaf076669ff9f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>havePDOP</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ae509752a10b7b4d7e8aac857328bf568</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPDOP</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ac81f33f060cc669bcb671be722082ce9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveSNR</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>af43193ea7813e92b8b5b5e7bca821bc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMeanSNR</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>acc9af9ed6996db619f97c0b1952f8f81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveBeaconInfo</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aac514e3208fb02024969a619ad25c745</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeaconSignalStrength</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aadaf60deae80b1d1a3d62fce582c7c6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeaconSNR</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a2fc5f466bb37b96e7fa7276e1730af58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeaconFreq</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>af5f2ce47fe506b34561c2ab0129d1238</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned short</type>
      <name>getBecaonBPS</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>af1b34a14450377aa632b15852db450d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned short</type>
      <name>getBeaconChannel</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aab990572bfe2e10d90b778adca00c465</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveErrorEllipse</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a1f7068a9d933ac71ca31c6042d9179de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getErrorEllipse</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a677528630118e47645bf784ed9059e31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveLatLonError</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a2ea0bafab73a3401114082baa354597b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getLatLonError</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aee8f433320417788fb68b1dc83decda0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatitudeError</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a7bc201520be6eb611cff0d92362cce3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLongitudeError</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a49cf77381df3520bd51255d15ad98b37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAltitudeError</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>aaeabd244f1654208d2f0c9422ae9392d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveInputsRMS</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ae60ecb9ee63b8eba493ba0a017475f79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInputsRMS</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a031c02503c794691edcb794a05eb8b40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNMEAHandler</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a14126094a6cc018afe0775af33d70ed5</anchor>
      <arglist>(const char *message, ArNMEAParser::Handler *handler)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>waitForData</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a39158124d1fada7c61a6a70bd989d39e</anchor>
      <arglist>(unsigned long timeout)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>initDevice</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ac3ce4c0cb96622088d16a18dcf5c7761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>parseGPRMC</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>a27c11d289b8c2851cffa72e82b99e549</anchor>
      <arglist>(const ArNMEAParser::Message &amp;msg, double &amp;latitudeResult, double &amp;longitudeResult, bool &amp;qualityFlagResult, bool &amp;gotPosition, ArTime &amp;timeGotPositionResult, ArTime &amp;gpsTimestampResult, bool &amp;gotSpeedResult, double &amp;speedResult)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>mpsToMph</name>
      <anchorfile>classArGPS.html</anchorfile>
      <anchor>ad9362399631ee3bd6ea176a8b4401516</anchor>
      <arglist>(const double mps)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGPSConnector</name>
    <filename>classArGPSConnector.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>GPSType</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Standard</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312a915b3f171473120af03da3280df8452d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Novatel</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312af8982f5382ba2f66d3d8e8f57ca26027</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Trimble</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312a66aac37f643b6fbe2982e3b6311deb44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Invalid</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312a7633cc51ddfaaaea2b0cbfbd0a50f071</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NovatelSPAN</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312a30c85e3421653012054e970146fd9d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Simulator</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312adf049b3e1eec1403202c70dc1058fa88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Invalid</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312a7633cc51ddfaaaea2b0cbfbd0a50f071</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Novatel</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312af8982f5382ba2f66d3d8e8f57ca26027</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NovatelSPAN</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312a30c85e3421653012054e970146fd9d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Simulator</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312adf049b3e1eec1403202c70dc1058fa88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Standard</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312a915b3f171473120af03da3280df8452d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Trimble</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>ab7ddee30070f15cf1bcc8ec6cb4ca312a66aac37f643b6fbe2982e3b6311deb44</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ArGPS *</type>
      <name>create</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>a3ceecc898a2f2466fbd63aaedbe0c0d9</anchor>
      <arglist>(ArRobot *robot=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ArGPS *</type>
      <name>createGPS</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>a4a58ea7f81bc75b8ddeea820ac541c48</anchor>
      <arglist>(ArRobot *robot=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>a24353f3e7d7e1b37e52866de483c73ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logOptions</name>
      <anchorfile>classArGPSConnector.html</anchorfile>
      <anchor>a1cb9ba89459512cca5b8b58f271951bf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGripper</name>
    <filename>classArGripper.html</filename>
    <member kind="enumvalue">
      <name>GENIO</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a565fcee58e47e92596e472c34f359368a2ecbc5944c1ea48a2f9676793ca96243</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPAC</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a565fcee58e47e92596e472c34f359368a689386fc14c0c100e52a01b494e843e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOGRIPPER</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a565fcee58e47e92596e472c34f359368ae1f5be72993ec3d941480086a6948e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERYTYPE</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a565fcee58e47e92596e472c34f359368a74fbaa2ae0bcab24136ea7d6db3a7897</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a565fcee58e47e92596e472c34f359368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERYTYPE</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a565fcee58e47e92596e472c34f359368a74fbaa2ae0bcab24136ea7d6db3a7897</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GENIO</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a565fcee58e47e92596e472c34f359368a2ecbc5944c1ea48a2f9676793ca96243</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>USERIO</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a565fcee58e47e92596e472c34f359368a2aa4f32bf4b551947ea158e00e8be4f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPAC</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a565fcee58e47e92596e472c34f359368a689386fc14c0c100e52a01b494e843e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOGRIPPER</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a565fcee58e47e92596e472c34f359368ae1f5be72993ec3d941480086a6948e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>USERIO</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a565fcee58e47e92596e472c34f359368a2aa4f32bf4b551947ea158e00e8be4f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArGripper</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a363fc3f41b9415c12e544ca9f58a6a94</anchor>
      <arglist>(ArRobot *robot, int gripperType=QUERYTYPE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectHandler</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a3ff9533dfd66d035e884785cb1d6663a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBreakBeamState</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a42c7e00b7ade6fe884554b988016da8a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGraspTime</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>ac4a100f5a0a833c5c9fc3c0db7e2fc51</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGripState</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>afb9037f8fa675e74250f1e3dc7243a3e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getMSecSinceLastPacket</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a953cc90c80ce837cdbe148ef2132dbe9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPaddleState</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>aecb3c4dce997079ec91492f5759e17f4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getType</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a8e162a9ba0ad2351c63bf5b4d35dba8c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gripClose</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a014f7e6e13625a748cfbded1c3c9a7fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gripOpen</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a23c923a8c98cb11bc3575079f8bf76ea</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gripperDeploy</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a8e8196b7cd6e2c9308617b0cf7176258</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gripperHalt</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a44482f3fa21825f4616f9779c1692449</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gripperStore</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a56a8e56071382eb9c1cc86ede1d4106c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gripPressure</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>adf53e2d36b67a5a098543b4905d58932</anchor>
      <arglist>(int mSecIntervals)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gripStop</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>ae737b61c3c0dede412d9a87c00868a80</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGripMoving</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>ac3b91f827be759867ab1b67f008f9107</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLiftMaxed</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>aaa3a54df39a3cc0cae5d5e3ad985ad2f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLiftMoving</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>acc9a52a57a1a963cb1e6b5be0323ddeb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>liftCarry</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a5ef745b23d44796ab81428a08eb8da8a</anchor>
      <arglist>(int mSecIntervals)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>liftDown</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>ab858d73d857c1d7367c5e8bee237ee82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>liftStop</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>af05654e6450fe98fcf7ca97dc239dcc1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>liftUp</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>adf6831c4e2a8105459e60e5e4bf4d4be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logState</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a9146d316254173bad9c81a28d3f86efa</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>packetHandler</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>afd00cb31493d34bf569f116eb9220733</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a3d92ace8371afdbf2ef5810321b46064</anchor>
      <arglist>(int type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArGripper</name>
      <anchorfile>classArGripper.html</anchorfile>
      <anchor>a0def6f8d0700d45d12ada89a95c00791</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArGripperCommands</name>
    <filename>classArGripperCommands.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Commands</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIP_OPEN</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5baff8aad732a2349e9bd987131535fcebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIP_CLOSE</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba4011f2a79665dee6c9a03d06c88bbe53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIP_STOP</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba68e03a9421068703761322caed7dfa48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIFT_UP</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5bad11a3ab4b661ecd67c616e871ff6ae92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIFT_DOWN</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba5487a5f6ccc1eecc051f4cd8a5f1ee9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIFT_STOP</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba163b1783372db91f122e153c96185393</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPER_STORE</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba779600d4bfb9938150a37199fe764e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPER_DEPLOY</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba37875910e07bb6193dd7b76fa5d59bef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPER_HALT</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba6c09c78ae14fbc88e424f9cd51897714</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIP_PRESSURE</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba8ecfc7c9c72a9c0a383646aa48a849bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIFT_CARRY</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5bab80648bd4f5efc5247ecd7824110e53d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIP_CLOSE</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba4011f2a79665dee6c9a03d06c88bbe53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIP_OPEN</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5baff8aad732a2349e9bd987131535fcebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIP_PRESSURE</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba8ecfc7c9c72a9c0a383646aa48a849bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIP_STOP</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba68e03a9421068703761322caed7dfa48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPER_DEPLOY</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba37875910e07bb6193dd7b76fa5d59bef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPER_HALT</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba6c09c78ae14fbc88e424f9cd51897714</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRIPPER_STORE</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba779600d4bfb9938150a37199fe764e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIFT_CARRY</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5bab80648bd4f5efc5247ecd7824110e53d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIFT_DOWN</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba5487a5f6ccc1eecc051f4cd8a5f1ee9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIFT_STOP</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5ba163b1783372db91f122e153c96185393</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIFT_UP</name>
      <anchorfile>classArGripperCommands.html</anchorfile>
      <anchor>ac8effa2669b12212da1ae44ab6729a5bad11a3ab4b661ecd67c616e871ff6ae92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArHasFileName</name>
    <filename>classArHasFileName.html</filename>
    <member kind="function">
      <type></type>
      <name>ArHasFileName</name>
      <anchorfile>classArHasFileName.html</anchorfile>
      <anchor>a2d0d77e077c1bebae6c11282cbb19b24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArHasFileName</name>
      <anchorfile>classArHasFileName.html</anchorfile>
      <anchor>a73b65fbf00f81d9ebfa143d5cff67d54</anchor>
      <arglist>(ArHasFileName const &amp;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getFileName</name>
      <anchorfile>classArHasFileName.html</anchorfile>
      <anchor>a2ca61af3b44bc0f9d5b2239626310a89</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>ArHasFileName &amp;</type>
      <name>operator=</name>
      <anchorfile>classArHasFileName.html</anchorfile>
      <anchor>a0b921521f0a8fc48c935f9ca6cc546be</anchor>
      <arglist>(ArHasFileName const &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArHasFileName</name>
      <anchorfile>classArHasFileName.html</anchorfile>
      <anchor>a0740ec1dccd9fcb923ffd5ac69c2fccd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Aria</name>
    <filename>classAria.html</filename>
    <member kind="enumvalue">
      <name>SIGHANDLE_NONE</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a4bc18753e51734bdf7743a9e7ca56a25a7a7ad2c4f31056bbd2c3ada3c170ba7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIGHANDLE_SINGLE</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a4bc18753e51734bdf7743a9e7ca56a25ad660028ed08bb904b86d16651e56a8a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIGHANDLE_THREAD</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a4bc18753e51734bdf7743a9e7ca56a25a604a8b71847ee3c5af650f96404053d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SigHandleMethod</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a4bc18753e51734bdf7743a9e7ca56a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIGHANDLE_SINGLE</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a4bc18753e51734bdf7743a9e7ca56a25ad660028ed08bb904b86d16651e56a8a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIGHANDLE_THREAD</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a4bc18753e51734bdf7743a9e7ca56a25a604a8b71847ee3c5af650f96404053d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIGHANDLE_NONE</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a4bc18753e51734bdf7743a9e7ca56a25a7a7ad2c4f31056bbd2c3ada3c170ba7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addExitCallback</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a5c4bfae6980dd3a7655a4cc7b32d1aa4</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addInitCallBack</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a3777666ca7191888f762c8f40f8a9b46</anchor>
      <arglist>(ArFunctor *cb, ArListPos::Pos position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addLogOptionsCB</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>aaf44455d5342f42850bc0c4670a03b49</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addParseArgsCB</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a1acbbf2d786221fda013d73dc4ecb126</anchor>
      <arglist>(ArRetFunctor&lt; bool &gt; *functor, int position=50)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addRobot</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>af0426075f8e07f443423db1a70f4c99a</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addUninitCallBack</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a17deb892ace525987dae1ff1b39de9a1</anchor>
      <arglist>(ArFunctor *cb, ArListPos::Pos position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>batteryAddCreator</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a03c3b453f8e9c39b4594f08fef6d82be</anchor>
      <arglist>(const char *batteryType, ArRetFunctor2&lt; ArBatteryMTX *, int, const char * &gt; *creator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArBatteryMTX *</type>
      <name>batteryCreate</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a868be7c1788a4581658e6315c85b6c5f</anchor>
      <arglist>(const char *batteryType, int batteryNumber, const char *prefix=&quot;Aria::batteryCreate&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>batteryGetChoices</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>aecbce5b997f8d7dbca1dc32abfc0a96e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>batteryGetTypes</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>ae2131a52e77adc4c90712ee64e47fe64</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>callExitCallbacks</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a8d9d4c555cca224573f88e365478e5da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delRobot</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>adeacf6c94ab9b8662b6a6f5d9f273aa9</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>deviceConnectionAddCreator</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a6f304d4e47f929ae56c3b702d5f3db85</anchor>
      <arglist>(const char *deviceConnectionType, ArRetFunctor3&lt; ArDeviceConnection *, const char *, const char *, const char * &gt; *creator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArDeviceConnection *</type>
      <name>deviceConnectionCreate</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a110b53f7cc33f227b9eba0dfbcf8390f</anchor>
      <arglist>(const char *deviceConnectionType, const char *port, const char *defaultInfo, const char *prefix=&quot;Aria::deviceConnectionCreate&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>deviceConnectionGetChoices</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a09d6b3e96b4019c65a22efbed98d8f1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>deviceConnectionGetTypes</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a9027ef5c17e698423cbe34bc5f01a0af</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>exit</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a6abc3d39b3e9548063bb8e78375acc17</anchor>
      <arglist>(int exitCode=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>exitOld</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a754e2bd0104c1e7a2912556bbba75ede</anchor>
      <arglist>(int exitCode=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArRobot *</type>
      <name>findRobot</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a1a3b572771bb33029637750f79eb31c6</anchor>
      <arglist>(char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArConfig *</type>
      <name>getConfig</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>ace50b4190f04bcacaf285bb5830c5fc2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getDirectory</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a9cbf9a172cb85275b05d391685f223e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getIdentifier</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a3865f915b415dcf51bb885e5a40099cb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArStringInfoGroup *</type>
      <name>getInfoGroup</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>af1d44610d83bc5112040bc7d4c602ba9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArJoyHandler *</type>
      <name>getJoyHandler</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a61a9601b0b39cba97a3048118e414941</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArKeyHandler *</type>
      <name>getKeyHandler</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a5b8042b38b19d6a5d3cfbed4df483e67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getMaxNumBatteries</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a871f3b10da8cecb191b86425bfbe5b19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getMaxNumLasers</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a9a2dcc5661ad6dafa8615880b478230c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getMaxNumLCDs</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>abfdbe360e1646d9a4a1ab6947d2960c8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getMaxNumPTZs</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a7dcacb858e021888d32a883faf8d0351</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getMaxNumSonarBoards</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a74f878716e24fb42bb29f5756975f31f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getMaxNumVideoDevices</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a5f0302d891e857981a9b1c4b05631b47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArRobotJoyHandler *</type>
      <name>getRobotJoyHandler</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a3b4e299844dd6775398530c9f4a6f260</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::list&lt; ArRobot * &gt; *</type>
      <name>getRobotList</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>ab79a01958af8db8d1c38d62968c96dfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getRunning</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a573c386c42739be20fa97a99ae65f9ee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>ad99c16b5d947229d9f8e1c5b2d4cdd73</anchor>
      <arglist>(SigHandleMethod method=SIGHANDLE_THREAD, bool initSockets=true, bool sigHandleExitNotShutdown=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>laserAddCreator</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a57b3baa2fbaa52768e554e3b925ac212</anchor>
      <arglist>(const char *laserType, ArRetFunctor2&lt; ArLaser *, int, const char * &gt; *creator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArLaser *</type>
      <name>laserCreate</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a2928ef06ad4ce0eafdb8c5ec322329e9</anchor>
      <arglist>(const char *laserType, int laserNumber, const char *prefix=&quot;Aria::laserCreate&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>laserGetChoices</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a5b98bc184be756b191a54bb30d1f2d28</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>laserGetTypes</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a2cc23bea46dc5b33dce9df9a7afdb77f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>lcdAddCreator</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>ac92704a7f296a0894c7c2a8ac954a548</anchor>
      <arglist>(const char *lcdType, ArRetFunctor2&lt; ArLCDMTX *, int, const char * &gt; *creator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArLCDMTX *</type>
      <name>lcdCreate</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a48af886132e7c166937fe8042b5f2e0f</anchor>
      <arglist>(const char *lcdType, int lcdNumber, const char *prefix=&quot;Aria::lcdCreate&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>lcdGetChoices</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>afdf46151aad3b59c239f6fb4a96d7464</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>lcdGetTypes</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a0f85f59c1cb3c516599be22017ceced9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logOptions</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a10d71f3d4d0cf7f38c58a1f749f64a42</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>parseArgs</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a1b090c01d88bb420b8cf8e0384d25ee1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remExitCallback</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a3459807230a95c226619d314044397fa</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDirectory</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a8196734fc2b1f74d9394a63763cc73c1</anchor>
      <arglist>(const char *directory)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setExitCallbacksLogLevel</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>aa47e5b65aef1dad5afb24b840b70f7a1</anchor>
      <arglist>(ArLog::LogLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setIdentifier</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>af674f0fc85700e562a3441f3b09ff19d</anchor>
      <arglist>(const char *identifier)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setJoyHandler</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>ae5773b1e67a77b0eaa1577a55c5e920c</anchor>
      <arglist>(ArJoyHandler *joyHandler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setKeyHandler</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a9e5496a4ec2c379c8e18706922b57cc1</anchor>
      <arglist>(ArKeyHandler *keyHandler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxNumBatteries</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a5a969fd721e887cfa789629696f3c43b</anchor>
      <arglist>(int maxNumBatteries)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxNumLasers</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a8da371005a9beb753df540ad5450e9a8</anchor>
      <arglist>(int maxNumLasers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxNumLCDs</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a4e84a0d13aae38814fc08cae6a093f13</anchor>
      <arglist>(int maxNumLCDs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxNumPTZs</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a38f088f18a74af857fe951c13d2199db</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxNumSonarBoards</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a339f9df212c6a06becfc36ceac6d1ccb</anchor>
      <arglist>(int maxNumSonarBoards)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxNumVideoDevices</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>ad651709fe80ed0f04b6448cb32da0027</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setParseArgLogLevel</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a83516682059c29c9a10d5ce30663b456</anchor>
      <arglist>(ArLog::LogLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRobotJoyHandler</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a4794cf7276778c6d03f5ea5238026ed3</anchor>
      <arglist>(ArRobotJoyHandler *robotJoyHandler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>shutdown</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a184602a2b3799d61569ec55dd9508450</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>signalHandlerCB</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a081e9173b5c5092d1741c72c6034bc29</anchor>
      <arglist>(int sig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>sonarAddCreator</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>aa67168728385c48d3aa8c6b86e81443e</anchor>
      <arglist>(const char *sonarType, ArRetFunctor2&lt; ArSonarMTX *, int, const char * &gt; *creator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArSonarMTX *</type>
      <name>sonarCreate</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a464e0b3bf94fd6d0cb9e17d3b1d11f07</anchor>
      <arglist>(const char *sonarType, int sonarNumber, const char *prefix=&quot;Aria::sonarCreate&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>sonarGetChoices</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a3ce6b4df4b60c7588fe441077240df7c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>sonarGetTypes</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>adf7caa0ed553d05fd4619839858dc790</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>uninit</name>
      <anchorfile>classAria.html</anchorfile>
      <anchor>a5970d7ac6a16b99b0e08d4cbedd78724</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArInterpolation</name>
    <filename>classArInterpolation.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>addReading</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>a5e4c9a7fc7328d706ba5e36393dd7a3e</anchor>
      <arglist>(ArTime timeOfReading, ArPose position)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArInterpolation</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>a390e2f6b40f8408aaaff951ea6c078e2</anchor>
      <arglist>(size_t numberOfReadings=100)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAllowedMSForPrediction</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>acf464ac1312fd3f5a8da949d95b0b641</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAllowedPercentageForPrediction</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>abfdad1150051171355ce2d5e5aa86c75</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLogPrediction</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>ab1316fbed2756959e0dac7b5cb683fe2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>a5fe6e4e09eff98da75b0e2f223ab1add</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumberOfReadings</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>af62cac6a3bcbe97a5a1b282febf863c4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPose</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>a921584c2abed2141ae892c6239b2b13e</anchor>
      <arglist>(ArTime timeStamp, ArPose *position, ArPoseWithTime *lastData=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>a680d369e76b3ac8c7e65f502adbcedab</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllowedMSForPrediction</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>ae3ea201cbaf4849bdfa68a6c56582ffe</anchor>
      <arglist>(int ms=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllowedPercentageForPrediction</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>a1167744f79eea56c4575eb6db91ea147</anchor>
      <arglist>(int percentage=5000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogPrediction</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>ae050c608bdc05e4f225b915c50c7c939</anchor>
      <arglist>(bool logPrediction=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>a7ff041eb02aea11fd2dd835451f007c0</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfReadings</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>ada65079027b25726721abed43a9a254b</anchor>
      <arglist>(size_t numberOfReadings)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArInterpolation</name>
      <anchorfile>classArInterpolation.html</anchorfile>
      <anchor>a21c245c475dc9cc143a0ddbffb34c8e1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArIrrfDevice</name>
    <filename>classArIrrfDevice.html</filename>
    <base>ArRangeDevice</base>
    <member kind="function">
      <type></type>
      <name>ArIrrfDevice</name>
      <anchorfile>classArIrrfDevice.html</anchorfile>
      <anchor>a4da904b64afbbe45e5925167f1b51b37</anchor>
      <arglist>(size_t currentBufferSize=91, size_t cumulativeBufferSize=273, const char *name=&quot;irrf&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>packetHandler</name>
      <anchorfile>classArIrrfDevice.html</anchorfile>
      <anchor>a66eb7e9f718753e84da45534f77b8fa8</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCumulativeMaxRange</name>
      <anchorfile>classArIrrfDevice.html</anchorfile>
      <anchor>abf611bfe828dc8bf83357b17c1bb1ae7</anchor>
      <arglist>(double r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArIrrfDevice</name>
      <anchorfile>classArIrrfDevice.html</anchorfile>
      <anchor>aff54bda9a487238d493d496a2245294b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArIRs</name>
    <filename>classArIRs.html</filename>
    <base>ArRangeDevice</base>
    <member kind="function">
      <type></type>
      <name>ArIRs</name>
      <anchorfile>classArIRs.html</anchorfile>
      <anchor>afdbbeabbd421f28d510338ff6cca969d</anchor>
      <arglist>(size_t currentBufferSize=10, size_t cumulativeBufferSize=10, const char *name=&quot;irs&quot;, int maxSecondsToKeepCurrent=15)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processReadings</name>
      <anchorfile>classArIRs.html</anchorfile>
      <anchor>aed288cd6442ee56d8609aaade0167c46</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArJoyHandler</name>
    <filename>classArJoyHandler.html</filename>
    <member kind="function">
      <type></type>
      <name>ArJoyHandler</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a2d63b5a62a66bf9dd0c7664d9e9a5f54</anchor>
      <arglist>(bool useOSCal=true, bool useOldJoystick=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endCal</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>ad97d96dcbbf7fdb02691cb6e87f4ad23</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAdjusted</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>acf7e26a06019c33105bdd56bdc495694</anchor>
      <arglist>(int *x, int *y, int *z=NULL)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAxis</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a36402c7f321a4a2b41a68f6b97e7ed4d</anchor>
      <arglist>(unsigned int axis)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getButton</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a519a90b2000a98c4370fef196d9df064</anchor>
      <arglist>(unsigned int button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDoubles</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>ada6b0192aa636e9adc1bdf9b8ed2943d</anchor>
      <arglist>(double *x, double *y, double *z=NULL)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getNumAxes</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>afdb7f941c16c67a3c7093518c3b3d2ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getNumButtons</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>aba9ebe065a068e301283d0b96172f78f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSpeeds</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a151f172e41db03faccba7cffec7c6c55</anchor>
      <arglist>(int *x, int *y, int *z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getStats</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a32d375849c2048d0e69d89ead5d22ef0</anchor>
      <arglist>(int *maxX, int *minX, int *maxY, int *minY, int *cenX, int *cenY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getUnfiltered</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a5d99299d705938712d5443aff2cdc0d9</anchor>
      <arglist>(int *x, int *y, int *z=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseOSCal</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a8057d05613ec0acf0ed8279c2d91f883</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveJoystick</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a03a02f2ff48626658e8323436a324814</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveZAxis</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>acdc7f3ebb1734383972de0e7f6f229ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a8631cae9be13ee781577148974fae79a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeeds</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a6a940625d5e5257e280929b0ed3e84c4</anchor>
      <arglist>(int x, int y, int z=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStats</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a3b40e67c531b4ec5817fa05cbc92147d</anchor>
      <arglist>(int maxX, int minX, int maxY, int minY, int cenX, int cenY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseOSCal</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a8300efa2a57cebcc590fe360d3264f5d</anchor>
      <arglist>(bool useOSCal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startCal</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a0793ed53dbe86b9d72d63f7a5fb9aa86</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArJoyHandler</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a5c9e2e95015a92b3bd691ff1cb0bad81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getNewData</name>
      <anchorfile>classArJoyHandler.html</anchorfile>
      <anchor>a4d05b4b7d1fcac1030d2cd5c2f10b35b</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArKeyHandler</name>
    <filename>classArKeyHandler.html</filename>
    <member kind="enumvalue">
      <name>_EndFKeys</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cadf8ed308714c26f9ea3bbe4f9588c478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>_StartFKeys</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca052b1c08c8fc21d45627e4964df148f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BACKSPACE</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cae503188bb32cb6368e77b697539ad10d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEL</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca78ad2a1dfb1c5e33c5486e64ce158330</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWN</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cab3ecf95789d8f87444856e278393b4d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca2e64c6f146b0a0f4d8c20af96e4fc864</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTER</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cafca668b99557b70aaf5158548f595aa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ESCAPE</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899caf500b147c6b180dfe6fd5acc1a659d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F1</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca3524a3609d85cc5f23b8bd85bbac7974</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F10</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cabd801629e5e7e0b151373f4ad21faec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F11</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca1d08fc2aaa7ae7c8d0684d40c3670e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F12</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca02be0576d8fab229a5d3985cdd2d85e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F2</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca754f64866cda57ce482e6a93f3a1ef2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F3</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cad90da2586653c613dc6d483104b88454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F4</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cafc936ce14eabbaaa14692748dbee508a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F5</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca230feb09acf4dd8295df37104e42c113</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F6</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca930b46a66189e28129055014be0d6795</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F7</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899caf7cc48de182fc7b1fbf493fcdcd881b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F8</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cae6a337c7678c79cf3fe5d89efd397652</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F9</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca4532357da119c9899c53adc024c17efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HOME</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899caeaab834e0a22f88aba4d585941520f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSERT</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca2716e1f59e1fa62141a1e309a16e9543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>KEY</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UP</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca8a1d3905f01b5d27603bb0528912d341</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWN</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cab3ecf95789d8f87444856e278393b4d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca4484301bbabab1fb37e72cbcd6e3e45b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca220c952e7e336650ee7b3e0905971ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ESCAPE</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899caf500b147c6b180dfe6fd5acc1a659d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPACE</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cac7e8d225519fc03645b49532ad11c880</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAB</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca841794093996bdd868fedc6d4dab5c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTER</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cafca668b99557b70aaf5158548f595aa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BACKSPACE</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cae503188bb32cb6368e77b697539ad10d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>_StartFKeys</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca052b1c08c8fc21d45627e4964df148f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F1</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca3524a3609d85cc5f23b8bd85bbac7974</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F2</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca754f64866cda57ce482e6a93f3a1ef2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F3</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cad90da2586653c613dc6d483104b88454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F4</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cafc936ce14eabbaaa14692748dbee508a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F5</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca230feb09acf4dd8295df37104e42c113</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F6</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca930b46a66189e28129055014be0d6795</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F7</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899caf7cc48de182fc7b1fbf493fcdcd881b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F8</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cae6a337c7678c79cf3fe5d89efd397652</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F9</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca4532357da119c9899c53adc024c17efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F10</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cabd801629e5e7e0b151373f4ad21faec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F11</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca1d08fc2aaa7ae7c8d0684d40c3670e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F12</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca02be0576d8fab229a5d3985cdd2d85e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>_EndFKeys</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cadf8ed308714c26f9ea3bbe4f9588c478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEUP</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca0a916e5fd9baf9ed01442a1e0d996f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEDOWN</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899caabbedf3b93d1e2a1f09298be2dbeca30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HOME</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899caeaab834e0a22f88aba4d585941520f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca2e64c6f146b0a0f4d8c20af96e4fc864</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSERT</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca2716e1f59e1fa62141a1e309a16e9543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEL</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca78ad2a1dfb1c5e33c5486e64ce158330</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca4484301bbabab1fb37e72cbcd6e3e45b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEDOWN</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899caabbedf3b93d1e2a1f09298be2dbeca30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGEUP</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca0a916e5fd9baf9ed01442a1e0d996f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca220c952e7e336650ee7b3e0905971ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPACE</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899cac7e8d225519fc03645b49532ad11c880</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAB</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca841794093996bdd868fedc6d4dab5c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UP</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a665246cd772590dd02ea299dd047899ca8a1d3905f01b5d27603bb0528912d341</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addKeyHandler</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>ad5442ebb21cd242ab168e94686e06759</anchor>
      <arglist>(int keyToHandle, ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArKeyHandler</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a8f60d37adaeb8d285a861afed2f38250</anchor>
      <arglist>(bool blocking=false, bool addAriaExitCB=true, FILE *stream=NULL, bool takeKeysInConstructor=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkKeys</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a8b2b9cdf792f36ca199efe5a7109bc73</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getKey</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a1eaee34475ddaae26c5800f53eb9e451</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remKeyHandler</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a6e742bc0a0d071657d4cc1286b07c3ca</anchor>
      <arglist>(int keyToHandler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remKeyHandler</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a293b845bb47ee8b9a4cadf96e95eb335</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restore</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>ae75d46abeb802d1edac99400d387c404</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>takeKeys</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a82fcfaf189ace57adcba70de4dc6982e</anchor>
      <arglist>(bool blocking=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArKeyHandler</name>
      <anchorfile>classArKeyHandler.html</anchorfile>
      <anchor>a5d10a504c35c990c4717026f0ed700ae</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLaser</name>
    <filename>classArLaser.html</filename>
    <base>ArRangeDeviceThreaded</base>
    <member kind="function">
      <type>void</type>
      <name>addConnectCB</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a236f9d156f2d15473e9df61fc70a2581</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDisconnectNormallyCB</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>aa06346a8a6119467ededf5be8c233ef2</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDisconnectOnErrorCB</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a64e315ae4a8d14484cd3b4a49fe0c0d4</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFailedConnectCB</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a19cbbbe1eac0dbbe2dbab7662de213fc</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addIgnoreReading</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a9bdb83984b69159c1d60313d97e02462</anchor>
      <arglist>(double ignoreReading)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addIgnoreReadings</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>af4195556a757928218c50bda74de7541</anchor>
      <arglist>(const char *ignoreReadings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addReadingCB</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a65107d045d7fc92187fa42bb4aff651f</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyTransform</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a550a8f6002f7c6be0755d4ca5eb064a9</anchor>
      <arglist>(ArTransform trans, bool doCumulative=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLaser</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a272fb0a8c6d5b18badb0d9686c8fb33f</anchor>
      <arglist>(int laserNumber, const char *name, unsigned int absoluteMaxRange, bool locationDependent=false, bool appendLaserNumberToName=true)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>asyncConnect</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a1d77d190752ff32a3fd0151309824f50</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>blockingConnect</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a643235ae62fe3dc0cc29579e9a6a08fe</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChooseAutoBaud</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ad3203371c8db7c2201c25869ec9ebff6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChooseDegrees</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a33798560368e114da29e93592c35dd3e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChooseIncrement</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>aaf0c7f4e8800ab0dd13e01f0271ac175</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChooseReflectorBits</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>afb48934d321c2524d6073ec30174d99d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChooseStartingBaud</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a8daf03f2a35612748b08fcbd0490dc17</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChooseUnits</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a604b3c95054903ee5f56a2556a0bbc09</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSetDegrees</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ab7a13b0128851a044e80efcf823ceada</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSetIncrement</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a316b3af24695e884c8eb8d2be0424384</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSetPowerControlled</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>aaa3f9f0ea86470726d35160babce8d4c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>chooseAutoBaud</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a84af619b88c7e66e7ef51e24d6c53825</anchor>
      <arglist>(const char *reflectorBits)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>chooseDegrees</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a88431406706e2f47cf3ad1682e491f51</anchor>
      <arglist>(const char *range)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>chooseIncrement</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>adc169aa8cba88a208d7891901b7767ab</anchor>
      <arglist>(const char *increment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>chooseReflectorBits</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a3b5990d093ca61121e59d24c45d8e9d9</anchor>
      <arglist>(const char *reflectorBits)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>chooseStartingBaud</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a92d47e68332396f96ce150c389bc630f</anchor>
      <arglist>(const char *reflectorBits)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>chooseUnits</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a8ff1c78be3c183831042c48a937a1a15</anchor>
      <arglist>(const char *units)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearIgnoreReadings</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a20dafafda3fe25af5a21eaf7f1432490</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyReadingCount</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a542be29ead46088e92c120a0c17f55e1</anchor>
      <arglist>(const ArLaser *laser)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>disconnect</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a9e10f224560d0745cb916b143190e018</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getAbsoluteMaxRange</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a07be6f7f8367eb9e89b6cbfb108f1184</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getAutoBaudChoice</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>aa4fc5f2f84499590f8a18455d7f0ae1d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::string &gt;</type>
      <name>getAutoBaudChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a12ff86d24282a93bb577dbae8bd6e078</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getAutoBaudChoicesString</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a0ed3ef59239dc9c6caf899cf5b0ae5cf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConnectionTimeoutSeconds</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>addae0e31dd4764aee774fa814b4e8744</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCumulativeCleanDist</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a81e99b11096dedd74c91c68e63b2ef70</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCumulativeCleanInterval</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a0564ec4374f9a0221e875c1aa6286bd0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCumulativeCleanOffset</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a39ea4d8a80cc4085c3ec008282fd7f85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDefaultPortType</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a03595bbe2d74213c9a03e194e38e38e7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDefaultTcpPort</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a48323ebe99a62d959dd4cca153e6b933</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDegreesChoice</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a0d119529c9b0386408ef8b4896f673ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDegreesChoiceDouble</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a58444fa6402069c900f72ff806c58754</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::string &gt;</type>
      <name>getDegreesChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a5bcc3d57c8ca9aeba529455fb7a0669a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>getDegreesChoicesMap</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a8af368e3a42c63decf990f13a7559e01</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDegreesChoicesString</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ad2dc9fa3f3662fbc7b1bebbc2b7ad348</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a53d6fef544cdbe633a6498ba5c90b449</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEndDegrees</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>aa6aa3c7373dc933b8f32bb36c23cd088</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEndDegreesMax</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ac00ecd47eb2dccf89f1ea47a1c878b15</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEndDegreesMin</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a1a9ce63b69d7798e7c2f62c1cd870380</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getFlipped</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>acb9239d5eaa56d116b267600e121d548</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; int &gt; *</type>
      <name>getIgnoreReadings</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a62955723e09d5d65c118f54e879aea8a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIncrement</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ac9b90b830817e39a94a0691da33d70b9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getIncrementChoice</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a90c1a696bcccfc23f3fda49888f0f479</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIncrementChoiceDouble</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a939d173dd053f68caaa02699e96d186d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::string &gt;</type>
      <name>getIncrementChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a65541e8c15b8374cacd9ed73dd9bca65</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>getIncrementChoicesMap</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a0a175b97d970d2ca190bb45fec3dfd5f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getIncrementChoicesString</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a2e187c6c0415e7cadbe3383843f579df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIncrementMax</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>abb5a72dde96c3e661e1a723cf75874df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIncrementMin</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a09f467aeb4459d68e2a0f8d0a5a0be05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArLog::LogLevel</type>
      <name>getInfoLogLevel</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a6db25147d3f81df498d6d290ca1c5dc6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLaserNumber</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a37f609561593f0bd5d36140390d8e553</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastReadingTime</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>afa1394ce2d727ad2069756d29e37a63b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPowerControlled</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ab4001602faa2ab966fe3cfc1c2e57d1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getReadingCount</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a226d3180b8f2f6fd72a9bc5404f8da59</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getReflectorBitsChoice</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ad3f5fa6447d883ac0e8b19858a26dff3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::string &gt;</type>
      <name>getReflectorBitsChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a8feed6899f9f1597262e1733125a9c25</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getReflectorBitsChoicesString</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a4679592efef5644276b72fb26e06176b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getSensorPosition</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>af51797f736a29a26cf40d20e1c16c8fc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSensorPositionTh</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ad1a77661d3bd47d67127cae97910cd64</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSensorPositionX</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a4bea2d26f64e45b4994bb63801a67025</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSensorPositionY</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a0933894e0176d93dc5e1a8b08d04a7bb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSensorPositionZ</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a9176691c9eb4101330efd7d57b19e5e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartDegrees</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ac589039384c421703756eac2861899bf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartDegreesMax</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a61b235df31beb691b6cc909744396a13</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartDegreesMin</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a60cb27a1ac5493d8b10be50e83ec6bb6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStartingBaudChoice</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ae1c7541a0cbde32469aa5c1dbe00aed8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::string &gt;</type>
      <name>getStartingBaudChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a72e5aa6e6e796098622591b2f2bea4aa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStartingBaudChoicesString</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a7f5fc88d55dcd2034131536881a367ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getUnitsChoice</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a3965654085eaefbb214847054d410f58</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::string &gt;</type>
      <name>getUnitsChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a829d6f5a5b3fa2eece4f168238d73d53</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getUnitsChoicesString</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a0892dc899184a732256cb51301bc1d69</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSensorPosition</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>af9913214fae54ea9b344e3f338c4f36f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>aae5c36df5b59ad861debb895e255479b</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isTryingToConnect</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>abf598bffa72bc368b13ec749d045a18d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>laserCheckParams</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ad47916d80345c7077e07e69d644768d2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remConnectCB</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a0cda25728bba5b072bf04843f347d6bb</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDisconnectNormallyCB</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a08785abb26de89508cf3d6fcc04202d8</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDisconnectOnErrorCB</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>af3bc5046f91115386a4581e66dbfe088</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remFailedConnectCB</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a9bbdf1e01d6ce33fe8e5a5fce4ad29c0</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remReadingCB</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a0d650c453962e57a17785cc984d9910b</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLastCumulativeCleanTime</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>af204708d76dce6fa024d5f2c37561143</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConnectionTimeoutSeconds</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a54b701ba0d1e820041c58cd6c552af7a</anchor>
      <arglist>(double seconds)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCumulativeBufferSize</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a5a7f8511f5798fe69367435254871d05</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCumulativeCleanDist</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a2b9c711faf0caae6437b3595e4f68584</anchor>
      <arglist>(double dist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCumulativeCleanInterval</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ad1e2373f5e314249aab538f44a775793</anchor>
      <arglist>(int milliSeconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCumulativeCleanOffset</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a8f1cd89a192537d0b7ecb57587d346dc</anchor>
      <arglist>(int milliSeconds)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ace8f8cee0b620afbee93718c8ff15725</anchor>
      <arglist>(ArDeviceConnection *conn)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setEndDegrees</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a591a6986cfe51d0eca076db375d5d8fa</anchor>
      <arglist>(double endDegrees)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setFlipped</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>affac2bcd738fc7263156ea98a4ed5c3f</anchor>
      <arglist>(bool flipped)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setIncrement</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ab64e257c65cae6a8c70eb585f820b490</anchor>
      <arglist>(double increment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInfoLogLevel</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>af50f54a7c18fdedd38a491cf03bb94d2</anchor>
      <arglist>(ArLog::LogLevel infoLogLevel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxRange</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a9dbfc2bfcb219fbe1e38ce25f0c5a95f</anchor>
      <arglist>(unsigned int maxRange)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPowerControlled</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ad2cf1cb56e6c74a878d568553d2efbe0</anchor>
      <arglist>(bool powerControlled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSensorPosition</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>aee150c3670f2467f0778bc0a372ae657</anchor>
      <arglist>(double x, double y, double th, double z=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSensorPosition</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>af84acd1ab2aa0b667efbb98f265b0ab6</anchor>
      <arglist>(ArPose pose, double z=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setStartDegrees</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a42e053c1cf6c6660cf1d66e1b643415e</anchor>
      <arglist>(double startDegrees)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArLaser</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a979366cbfdaa5b0634f2fa19235ae1cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>useSimpleNamingForAllLasers</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ad204bf080aa736ca97f292b4922d06ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserAllowAutoBaudChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a2723d19d9890c725e598b7390299a0c5</anchor>
      <arglist>(const char *defaultAutoBaudChoice, std::list&lt; std::string &gt; autoBaudChoices)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserAllowDegreesChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>ad9a97064d229d52ff76f414ccf2fd07a</anchor>
      <arglist>(const char *defaultDegreesChoice, std::map&lt; std::string, double &gt; degreesChoices)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserAllowIncrementChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a87122e7e23a2f17fb6c4a98c7ac40221</anchor>
      <arglist>(const char *defaultIncrementChoice, std::map&lt; std::string, double &gt; incrementChoices)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserAllowReflectorBitsChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a10b21970469892caa1be8d268ef19056</anchor>
      <arglist>(const char *defaultReflectorBitsChoice, std::list&lt; std::string &gt; reflectorBitsChoices)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserAllowSetDegrees</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a25f2ed8311794b070e2ac368281cfb54</anchor>
      <arglist>(double defaultStartDegrees, double startDegreesMin, double startDegreesMax, double defaultEndDegrees, double endDegreesMin, double endDegreesMax)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserAllowSetIncrement</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a2db7ce636aea9daff1f3c759b3396b66</anchor>
      <arglist>(double defaultIncrement, double incrementMin, double incrementMax)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserAllowSetPowerControlled</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a02685a2a3d09e912858163a67cdbee81</anchor>
      <arglist>(bool defaultPowerControlled)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserAllowStartingBaudChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>aa77bbc89f190ec6f026470e9263eb262</anchor>
      <arglist>(const char *defaultStartingBaudChoice, std::list&lt; std::string &gt; startingBaudChoices)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserAllowUnitsChoices</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a751a2ce63b1ff300fb1c62ee9e4d6d49</anchor>
      <arglist>(const char *defaultUnitsChoice, std::list&lt; std::string &gt; unitsChoices)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>laserCheckLostConnection</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a6ce9b6c649bbaac893df0527a13edee6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>laserConnect</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a16bb1250e673605e8d6df6fe4183fd7c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>laserDisconnectNormally</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a4522f80d2e8b75fcee12d91f561e454a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>laserDisconnectOnError</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>aec12d2ac44b6a8fa2f92ef3f21c5957e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>laserFailedConnect</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a5754853bf0032b38a83227bb9dafdba6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserProcessReadings</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a86f27a3ce6b983eec51cf019af825e7f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>laserPullUnsetParamsFromRobot</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a0e98ec9447b39317d4a62c64ecbd924b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserSetAbsoluteMaxRange</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a3b64acd0f410e645195a1540559fc69c</anchor>
      <arglist>(unsigned int absoluteMaxRange)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserSetDefaultPortType</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a3c67d8b109bc777870f6b980f0b63835</anchor>
      <arglist>(const char *defaultPortType)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>laserSetDefaultTcpPort</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>a342b4b111293a15782d0d7ef7665abea</anchor>
      <arglist>(int defaultLaserTcpPort)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>laserSetName</name>
      <anchorfile>classArLaser.html</anchorfile>
      <anchor>abbfe9db8030fc4c33cc0d2464e658948</anchor>
      <arglist>(const char *name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLaserConnector</name>
    <filename>classArLaserConnector.html</filename>
    <class kind="class">ArLaserConnector::LaserData</class>
    <member kind="function">
      <type>bool</type>
      <name>addLaser</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>a56f7cd0494ca739b156c7fb40481c154</anchor>
      <arglist>(ArLaser *laser, int laserNumber=1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addPlaceholderLaser</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>a5d3a60cee41aeb9cf635f17e8530b114</anchor>
      <arglist>(ArLaser *placeholderLaser, int laserNumber=1, bool takeOwnershipOfPlaceholder=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLaserConnector</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>a6a5f821d02aee9232e6efc0e8defa39a</anchor>
      <arglist>(ArArgumentParser *parser, ArRobot *robot, ArRobotConnector *robotConnector, bool autoParseArgs=true, ArLog::LogLevel infoLogLevel=ArLog::Verbose, ArRetFunctor1&lt; bool, const char * &gt; *turnOnPowerOutputCB=NULL, ArRetFunctor1&lt; bool, const char * &gt; *turnOffPowerOutputCB=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectLaser</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>a64a2572b43a50830c91b32cbe2f06377</anchor>
      <arglist>(ArLaser *laser, int laserNumber=1, bool forceConnection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectLasers</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>ab97ce6a5fedebf44526773bc674b970e</anchor>
      <arglist>(bool continueOnFailedConnect=false, bool addConnectedLasersToRobot=true, bool addAllLasersToRobot=false, bool turnOnLasers=true, bool powerCycleLaserOnFailedConnect=true, int *failedOnLaser=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ArLaser *</type>
      <name>getLaser</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>ae6beda0c6c5a45092dae687b94110a7f</anchor>
      <arglist>(int laserNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logLaserData</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>a60d4485340c08e6faf6745df23804b20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOptions</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>a2269b39b5c02bfc2b38eb96fd6c89558</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>a710b647a8bec2df3ecd07758657648d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>acc9bd203df03476e0e53c00f54539d62</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>replaceLaser</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>a7508f51488da99dc40d1927f491254d9</anchor>
      <arglist>(ArLaser *laser, int laserNumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupLaser</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>afb397c8907a2aef78363fbdc2ac6b0b5</anchor>
      <arglist>(ArLaser *laser, int laserNumber=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArLaserConnector</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>aceceb24f39adc2383fe2fd6d4d715994</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logLaserOptions</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>a1beb3dd1ff246bb15e06c99c2a3ebda4</anchor>
      <arglist>(LaserData *laserdata, bool header=true, bool metaOpts=true) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>parseLaserArgs</name>
      <anchorfile>classArLaserConnector.html</anchorfile>
      <anchor>a84a3ba2df666ea534f6fd6fb2210e430</anchor>
      <arglist>(ArArgumentParser *parser, LaserData *laserData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLaserFilter</name>
    <filename>classArLaserFilter.html</filename>
    <base>ArLaser</base>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArLaserFilter.html</anchorfile>
      <anchor>a2c35980ce288cfbf31e91794517f0918</anchor>
      <arglist>(ArConfig *config, const char *sectionName, const char *prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLaserFilter</name>
      <anchorfile>classArLaserFilter.html</anchorfile>
      <anchor>aad164e615575c265cce79db2d5f30f1d</anchor>
      <arglist>(ArLaser *laser, const char *name=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ArLaser *</type>
      <name>getBaseLaser</name>
      <anchorfile>classArLaserFilter.html</anchorfile>
      <anchor>ab8f80332b7fb10bc8c7142e62e638d03</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRobot</name>
      <anchorfile>classArLaserFilter.html</anchorfile>
      <anchor>a34863ac177e60b7576fe456ab5a92aaa</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArLaserFilter</name>
      <anchorfile>classArLaserFilter.html</anchorfile>
      <anchor>a6bfeb9f6fb73c0fbdc7d8f7fb07eca18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkRanges</name>
      <anchorfile>classArLaserFilter.html</anchorfile>
      <anchor>ac45f5ad00c2a20723ad95b94c26c92cb</anchor>
      <arglist>(int thisReading, int otherReading, double factor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLaserLogger</name>
    <filename>classArLaserLogger.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addGoal</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>aed914ae4f87562b479ebde3a0b2bc844</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInfoToLog</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a4130b7bbe7d31b18cc3e4cfdebb38bad</anchor>
      <arglist>(const char *str,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInfoToLogPlain</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>acd67438efbbf9db3a8d8c887dd9a8889</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTagToLog</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>ad551fb95d5451da5866cbab25987e590</anchor>
      <arglist>(const char *str,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTagToLogPlain</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a21ebf19cc66b73847504e094ec4872b8</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLaserLogger</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>ad8d94145940256823ad2490a3b021f4b</anchor>
      <arglist>(ArRobot *robot, ArLaser *laser, double distDiff, double degDiff, const char *fileName, bool addGoals=false, ArJoyHandler *joyHandler=NULL, const char *baseDirectory=NULL, bool useReflectorValues=false, ArRobotJoyHandler *robotJoyHandler=NULL, const std::map&lt; std::string, ArRetFunctor3&lt; int, ArTime, ArPose *, ArPoseWithTime * &gt; *, ArStrCaseCmpOp &gt; *extraLocationData=NULL, std::list&lt; ArLaser * &gt; *extraLasers=NULL)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDegDiff</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a198c9eff1ee9f5ce32a586d430b2af72</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDistDiff</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a9804317e3c7512eeae9904da96674e1e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDegDiff</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a25e3f2aa0a2f528ff2ca39e096217210</anchor>
      <arglist>(double degDiff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistDiff</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>ab5f7cefe7bea23d31c6c78d1a68c0915</anchor>
      <arglist>(double distDiff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>takeNewReadings</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a45eedca8e82d2b7557f98428e8dc2f5c</anchor>
      <arglist>(bool takeNew)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>takeOldReadings</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a0b20f09e8ad9893fe8f6c20600d8f76c</anchor>
      <arglist>(bool takeOld)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>takeReading</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>ac95dbfe9306efe3305e484703b241c21</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takingNewReadings</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>afcd9091ff9b844c044527231e2fc41f1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takingOldReadings</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a75fc2c03430190f8cd5a3af1538f58d5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasFileOpenedSuccessfully</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a2ea88347c3edc52d64ac63c3957d5b60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArLaserLogger</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a0991feacd4e7c99527acc29766d21b66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>internalTakeLaserReading</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a2be0b2e8120ee205ef7ccc2545d5bba8</anchor>
      <arglist>(ArLaser *laser, int laserNumber)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>robotTask</name>
      <anchorfile>classArLaserLogger.html</anchorfile>
      <anchor>a08a3c39a68ea790d04d975c038c1f253</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLaserReflectorDevice</name>
    <filename>classArLaserReflectorDevice.html</filename>
    <base>ArRangeDevice</base>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArLaserReflectorDevice.html</anchorfile>
      <anchor>ae7320eaf39d6265a3775b0b5bd7cfa39</anchor>
      <arglist>(ArConfig *config, const char *section)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLaserReflectorDevice</name>
      <anchorfile>classArLaserReflectorDevice.html</anchorfile>
      <anchor>ab2eddd6ba43f1abae80fcb448816ff88</anchor>
      <arglist>(ArRangeDevice *laser, ArRobot *robot, const char *name=&quot;reflector&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processReadings</name>
      <anchorfile>classArLaserReflectorDevice.html</anchorfile>
      <anchor>ac1d632589ff1f64069c8a8510ae8fc57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRobot</name>
      <anchorfile>classArLaserReflectorDevice.html</anchorfile>
      <anchor>a39e71bab1bad429c6ce92da2531f0804</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArLaserReflectorDevice</name>
      <anchorfile>classArLaserReflectorDevice.html</anchorfile>
      <anchor>aafa8153e3642c883ca225238355251b2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLCDConnector</name>
    <filename>classArLCDConnector.html</filename>
    <class kind="class">ArLCDConnector::LCDData</class>
    <member kind="function">
      <type>bool</type>
      <name>addLCD</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>a0e5c977459a45f7d427527fed2400309</anchor>
      <arglist>(ArLCDMTX *lcd, int lcdNumber=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLCDConnector</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>a37fab797364dac72e738a013315819d8</anchor>
      <arglist>(ArArgumentParser *parser, ArRobot *robot, ArRobotConnector *robotConnector, bool autoParseArgs=true, ArLog::LogLevel infoLogLevel=ArLog::Verbose, ArRetFunctor1&lt; bool, const char * &gt; *turnOnPowerOutputCB=NULL, ArRetFunctor1&lt; bool, const char * &gt; *turnOffPowerOutputCB=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectLCD</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>a32048729f0effc437c9cd4f4f6282947</anchor>
      <arglist>(ArLCDMTX *lcd, int lcdNumber=1, bool forceConnection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectLCDs</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>af5d7234e69ec8553a16a782512ae5107</anchor>
      <arglist>(bool continueOnFailedConnect=false, bool addConnectedLCDsToRobot=true, bool addAllLCDsToRobot=false, bool turnOnLCDs=true, bool powerCycleLCDOnFailedConnect=true)</arglist>
    </member>
    <member kind="function">
      <type>ArLCDMTX *</type>
      <name>getLCD</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>a012abad7bad611ea0fed4f379006f2ae</anchor>
      <arglist>(int lcdNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOptions</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>a34b4e6d8fc3e4d4e0fb2d933dd315e38</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>a8bd074e41fe21a1767f709af8fc007cf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>abe46f27b6e09706dadf2a3363ad13150</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>replaceLCD</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>aae1d4058dce672d7c567af1035504a91</anchor>
      <arglist>(ArLCDMTX *lcd, int lcdNumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupLCD</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>a39ce55dba2cee1abc8c81974d36c5980</anchor>
      <arglist>(ArLCDMTX *lcd, int lcdNumber=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArLCDConnector</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>a370ca6c048736c69e4e47ea27e3e0d13</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logLCDOptions</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>abb76d5a7b56541b14227e30bdfe137b3</anchor>
      <arglist>(LCDData *lcddata, bool header=true, bool metaOpts=true) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>parseLCDArgs</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>a9c7948f254caa740a88174215b98b480</anchor>
      <arglist>(ArArgumentParser *parser, LCDData *lcdData)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>turnOffPower</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>ace62f03bd3beb5e9c5ec8e6cccff8d2b</anchor>
      <arglist>(LCDData *LCDData)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>turnOnPower</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>a9c8ed38acaa9561bd862257009e9dada</anchor>
      <arglist>(LCDData *LCDData)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>verifyFirmware</name>
      <anchorfile>classArLCDConnector.html</anchorfile>
      <anchor>aea2b47042fea7d8fb5130a9f63903e50</anchor>
      <arglist>(LCDData *LCDData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLCDMTX</name>
    <filename>classArLCDMTX.html</filename>
    <base>ArASyncTask</base>
    <member kind="function">
      <type>void</type>
      <name>addDisconnectOnErrorCB</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>acbbed457a335bff24ea5a713cd994c92</anchor>
      <arglist>(ArFunctor *functor, int position=51)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLCDMTX</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a041af97b8167c78432d8e8cd7427c3ca</anchor>
      <arglist>(int lcdBoardNum=0, const char *name=&quot;MTXLCD&quot;, ArDeviceConnection *conn=NULL, ArRobot *robot=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkLostConnection</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a1debef53e986ad7298d316ee2c9b30d7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectOnError</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>abdd89ebffc643c3546a93cdb8bb046a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConnectionTimeoutSeconds</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>ad41f288d3635dc6b97c3b5f812174932</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDefaultPortType</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a21f7c2cf31388821d59a79961b7a0094</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDefaultTcpPort</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a48b670b3468724e5e0e5f5b98ab830d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a45983faae2dbaad4ccd7bc9c8e2e4294</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastReadingTime</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>aadae836757c01fc965980626337bb58f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getReadingCount</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>aefa12f57205582abe5c99ffbcf24b2c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalMTXLCDOverrideBackLight</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a1e1d61560d9869ea2553e61c88445529</anchor>
      <arglist>(bool backlight)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalMTXLCDOverrideBootScreenText</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>af57fd4251e9fc0639a2b805796816ede</anchor>
      <arglist>(const char *status)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalMTXLCDOverrideMainScreenText</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a2304bae98d665c2e3ad5d14129430e0e</anchor>
      <arglist>(const char *status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lockDevice</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>afa9ed2ea063c5e0b5980f42bf8306fab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDisconnectOnErrorCB</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a1c75fac1e748fe8aa0bf01bfb4203548</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConnectionTimeoutSeconds</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a90a81280066e1f846bdf1c3ea86b4e7e</anchor>
      <arglist>(double seconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>aec210e5a7f76b7cda9de12575f7f8f6a</anchor>
      <arglist>(ArDeviceConnection *conn)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setMTXLCDMainScreenText</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a98b5d8aa099d5715fad35ed0d23aa28d</anchor>
      <arglist>(const char *status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRobot</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a28567d893dcd37d63d8e73ca101abb78</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tryLockDevice</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a4653d10313c6469ee2390609c901e67f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>unlockDevice</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a4baae6be75c601355eae2506fd914440</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyFwVersion</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a83f59ad9cf63c23efb4a626087515fe8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArLCDMTX</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a6c0e43bc9c8ea58a9e7c15d0fd342eb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setFirmwareDir</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>a039990127cefb36818e4569404381e00</anchor>
      <arglist>(const char *dir)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>downloadFirmware</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>ae6ffcb3bf5e722499cd65d7f8575458c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArLCDMTX.html</anchorfile>
      <anchor>ac75b94e7b027371dedeeb5f1471d062d</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLine</name>
    <filename>classArLine.html</filename>
    <member kind="function">
      <type></type>
      <name>ArLine</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>a354ec3d2c8cf8f0b293342211dbfc49c</anchor>
      <arglist>(double a, double b, double c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLine</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>a50a8459d2a61b5f642171a6089cdedb9</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getA</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>aa7134e0c73e47d0876ed343fb08ef71f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getB</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>af19ff516be6b08b8ac9d9ecc3fe61947</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getC</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>a44c5ed84c36e8f0304dbc6496463b071</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPerpDist</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>a96639b1bc28257d630fc411e830f3e48</anchor>
      <arglist>(const ArPose &amp;pose) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPerpPoint</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>a0aba08db33ae832039d6d18e4ee47bd5</anchor>
      <arglist>(const ArPose &amp;pose, ArPose *perpPoint) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPerpSquaredDist</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>ac182e5075456add7dc11432628fe72c9</anchor>
      <arglist>(const ArPose &amp;pose) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>ac2bc68325156ba79797b4e8f5796b979</anchor>
      <arglist>(const ArLine *line, ArPose *pose) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeLinePerp</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>ab3a98d068c0c21b719d741a18a721d24</anchor>
      <arglist>(const ArPose *pose, ArLine *line) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newParameters</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>a7456bec53303f5d3986678f5aae8b711</anchor>
      <arglist>(double a, double b, double c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newParametersFromEndpoints</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>ad759b425af8bdd4415a6adda3b316026</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator!=</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>a7e0f84958de053479e066f543f929075</anchor>
      <arglist>(const ArLine &amp;other) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator==</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>a9242021aaa56015e60b50b411cedc05b</anchor>
      <arglist>(const ArLine &amp;other) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArLine</name>
      <anchorfile>classArLine.html</anchorfile>
      <anchor>ae8662fdd690b85449406e38e86581ec9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLineFinder</name>
    <filename>classArLineFinder.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a5a780895d188337a9fdf83d1c1489f10</anchor>
      <arglist>(ArConfig *config, const char *section)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLineFinder</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a4ba4057c9cb9ff4cf70ba0fba08dbdbf</anchor>
      <arglist>(ArRangeDevice *dev)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; int, ArLineFinderSegment * &gt; *</type>
      <name>getLines</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a2215f0f36e3f166a0e2905717654c0b0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLinesAndSaveThem</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>ace8edfb7fe1305cf1f0ae5bd45ba0bfe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; ArLineFinderSegment * &gt;</type>
      <name>getLinesAsSet</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a1119f9d010ff5b696ad244d7e37201ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getLinesTakenPose</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a78ce65f47b4c01649b714a59aa9c3e70</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; int, ArPose &gt; *</type>
      <name>getNonLinePoints</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>ab0bd21d67fea304323cdaa9d16683ea4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; ArPose &gt;</type>
      <name>getNonLinePointsAsSet</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>ae4478cfa23f5038869d6f91754d26afc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getVerbose</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a8c5f3e53b9675c8aca9f3fc55e35c225</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveLast</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a9f35483f773d1a7c7d1b2a3187813f5c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLineCombiningParams</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a0d16a8574fdec219d84e2b9950f64eb8</anchor>
      <arglist>(int angleTol=30, int linesCloseEnough=75)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLineCreationParams</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>ad678a82c38151206c3ec9e81205a9a2c</anchor>
      <arglist>(int minLineLen=40, int minLinePoints=2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLineFilteringParams</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a3bec25846008ec5f0ba26b6386ffa8a0</anchor>
      <arglist>(int minPointsInLine=3, int minLineLength=75)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLineValidParams</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a78772bf45a900d845845890fc606c5b4</anchor>
      <arglist>(int maxDistFromLine=30, int maxAveDistFromLine=20)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxDistBetweenPoints</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a593452d40024d177170b2227d8275ac1</anchor>
      <arglist>(int maxDistBetweenPoints=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerbose</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>a58b38357803dc7047cd13b5e11985706</anchor>
      <arglist>(bool verbose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArLineFinder</name>
      <anchorfile>classArLineFinder.html</anchorfile>
      <anchor>aeaa5f8f8ea66a14b377d1801e79f14ed</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLineFinderSegment</name>
    <filename>classArLineFinderSegment.html</filename>
    <base>ArLineSegment</base>
  </compound>
  <compound kind="class">
    <name>ArLineSegment</name>
    <filename>classArLineSegment.html</filename>
    <member kind="function">
      <type></type>
      <name>ArLineSegment</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>adf266f98e266c55d8481c5dd19a7b0a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLineSegment</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a89e1983340aaf6914c1625743a190a06</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLineSegment</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>afc1f6a4b2f18a4cc712c818044b50bb3</anchor>
      <arglist>(ArPose pose1, ArPose pose2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getA</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>aafa9df593aaf29658dfb47c47b904855</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getB</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>aee434d8513eaf9eb67921135ee7b3a88</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getC</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a7e9b0bcb0f2f76939ef4a18a801ed27e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDistToLine</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>ade742a13ddab6b17ae5776509abc63d8</anchor>
      <arglist>(const ArPose &amp;pose) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getEndPoint1</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a919c6fd2348539ef27703d3cc33a8e86</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getEndPoint2</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a3b194557ef0f783bf972ed723cc6a703</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLengthOf</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>ad78f03adf53dd5eaa4faa70b05e9f061</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getMidPoint</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a0c7d1fdf191320212a9618dbc71d78f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPerpDist</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>ad427ddc8bcda146d30eb648cbf03c1d5</anchor>
      <arglist>(const ArPose &amp;pose) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPerpPoint</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>aedafa8a9d99719e36fd25afc00ce849d</anchor>
      <arglist>(const ArPose &amp;pose, ArPose *perpPoint) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPerpPoint</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a2d4267d94a5beff5aa9d68ed77486cf1</anchor>
      <arglist>(const ArPose *pose, ArPose *perpPoint) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPerpSquaredDist</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a59dc06bba44228d821a8e66f3466f253</anchor>
      <arglist>(const ArPose &amp;pose) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getX1</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>afead34f15dfee4f7e3d71b459708fef2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getX2</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a1e7c9a96a559a0f0a5b2e1fc66719af8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getY1</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>adcd7905aff1ea6738d6a6f32709566c3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getY2</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>affcefc314b3b30c351d62fa38a56c908</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a880e9d3dd91aea3801e09ccc1927ad7a</anchor>
      <arglist>(const ArLine *line, ArPose *pose) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>ae7c5ee7d3b03168e4e0bde71676e4f01</anchor>
      <arglist>(ArLineSegment *line, ArPose *pose) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>linePointIsInSegment</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>abcaed64aff8f2ba27363eff4b5bac2f2</anchor>
      <arglist>(ArPose *pose) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newEndPoints</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a06b5753804cf4c1e89f63c9404cf556b</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newEndPoints</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a2a76e890bcbd024e0217ab1a2297bdfe</anchor>
      <arglist>(const ArPose &amp;pt1, const ArPose &amp;pt2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator&lt;</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a7395ef0e03cb1a9c24473b951a8b142a</anchor>
      <arglist>(const ArLineSegment &amp;other) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator==</name>
      <anchorfile>classArLineSegment.html</anchorfile>
      <anchor>a6a95aa2ca094723b39f10406a6a0fe4e</anchor>
      <arglist>(const ArLineSegment &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArLineSegmentCmpOp</name>
    <filename>structArLineSegmentCmpOp.html</filename>
  </compound>
  <compound kind="class">
    <name>ArListPos</name>
    <filename>classArListPos.html</filename>
    <member kind="enumvalue">
      <name>FIRST</name>
      <anchorfile>classArListPos.html</anchorfile>
      <anchor>adb42d52c70a646c5698c5513cd25bbd0a7573a55fbcdb54b1768e9ce574407d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST</name>
      <anchorfile>classArListPos.html</anchorfile>
      <anchor>adb42d52c70a646c5698c5513cd25bbd0a3c55111fa6c7f63c41fc0b387f5b57d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Pos</name>
      <anchorfile>classArListPos.html</anchorfile>
      <anchor>adb42d52c70a646c5698c5513cd25bbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIRST</name>
      <anchorfile>classArListPos.html</anchorfile>
      <anchor>adb42d52c70a646c5698c5513cd25bbd0a7573a55fbcdb54b1768e9ce574407d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST</name>
      <anchorfile>classArListPos.html</anchorfile>
      <anchor>adb42d52c70a646c5698c5513cd25bbd0a3c55111fa6c7f63c41fc0b387f5b57d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLLACoords</name>
    <filename>classArLLACoords.html</filename>
    <base>Ar3DPoint</base>
    <member kind="function">
      <type>ArECEFCoords</type>
      <name>LLA2ECEF</name>
      <anchorfile>classArLLACoords.html</anchorfile>
      <anchor>a046bc32d4a0c50f0458c6588821c2f2b</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLMS1XX</name>
    <filename>classArLMS1XX.html</filename>
    <base>ArLaser</base>
    <member kind="function">
      <type></type>
      <name>ArLMS1XX</name>
      <anchorfile>classArLMS1XX.html</anchorfile>
      <anchor>abcc385d24557abb5ec93485e3ffcb308</anchor>
      <arglist>(int laserNumber, const char *name, LaserModel laserModel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArLMS1XX.html</anchorfile>
      <anchor>ae1eaeeb5852d0aaabc7bbd296f9a5aad</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArLMS1XX</name>
      <anchorfile>classArLMS1XX.html</anchorfile>
      <anchor>a606cfce20cef704dd4ae28f972e8bed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArLMS1XX.html</anchorfile>
      <anchor>ac98edaa209ef6050a7d02a93cb95cab7</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>validateCheckSum</name>
      <anchorfile>classArLMS1XX.html</anchorfile>
      <anchor>a21daf48cf5afb26fb6e041a8257da9cf</anchor>
      <arglist>(ArLMS1XXPacket *packet)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLMS1XXPacketReceiver</name>
    <filename>classArLMS1XXPacketReceiver.html</filename>
    <member kind="function">
      <type></type>
      <name>ArLMS1XXPacketReceiver</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>af4324335834cae1aaa4f0ea8954f4d4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>a74f41e1f13c0e072ece511eb3358c89e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArLMS1XXPacket *</type>
      <name>receivePacket</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>a421d9c2b5a071e00b4ac88dcb5c06752</anchor>
      <arglist>(unsigned int msWait=0, bool shortcut=false, bool ignoreRemainders=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>a12df0f47c23b78140427c5e5e7194a0a</anchor>
      <arglist>(ArDeviceConnection *conn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArLMS1XXPacketReceiver</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>a8557ab678a0908b898a49094855a3b66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>DATA</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>a8cb71629a6d7fba2403287e64ac9778cab66ccc38de892b9229663982878ff3a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>REMAINDER</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>a8cb71629a6d7fba2403287e64ac9778cacd32be9c1d68a61b89c9d9582b900255</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STARTING</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>a8cb71629a6d7fba2403287e64ac9778ca72781f10c24f26e7e61060f965ee4066</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>State</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>a8cb71629a6d7fba2403287e64ac9778c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STARTING</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>a8cb71629a6d7fba2403287e64ac9778ca72781f10c24f26e7e61060f965ee4066</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>DATA</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>a8cb71629a6d7fba2403287e64ac9778cab66ccc38de892b9229663982878ff3a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>REMAINDER</name>
      <anchorfile>classArLMS1XXPacketReceiver.html</anchorfile>
      <anchor>a8cb71629a6d7fba2403287e64ac9778cacd32be9c1d68a61b89c9d9582b900255</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLMS2xx</name>
    <filename>classArLMS2xx.html</filename>
    <base>ArLaser</base>
    <member kind="function">
      <type></type>
      <name>ArLMS2xx</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a35a1785f89177c7f6d6c889e83182e6e</anchor>
      <arglist>(int laserNumber, const char *name=&quot;lms2xx&quot;, bool appendLaserNumberToName=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>asyncConnect</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>aacc14f3f02375cee086de34707608eab</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>blockingConnect</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a7ecef9bcf50f9678d70a7dbd02694f75</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>disconnect</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a4887e80f3dd03873d6f125675fc186c1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>ae470f8938872a50575ed23f8b1efaf3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>aba2207a0fc5478d5ca374ec6e4353267</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a29f6e5d289fa5d4a1d88b413b9e533c6</anchor>
      <arglist>(ArDeviceConnection *conn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArLMS2xx</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a8a51275ff0abcded9e0ac47d6725d2e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>State</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_NONE</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a2988c26cbb714c9591a5d6d55cf48d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_INIT</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a168ecfaec4b95766bd782511ef9ef6a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_WAIT_FOR_POWER_ON</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a770b8b551bd904f1e3b75d52804368d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_CHANGE_BAUD</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9adc5f3151deb031ef61c0f3e9b612c55f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_CONFIGURE</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a9bb2f3c316a002b98fd26448a58bf766</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_WAIT_FOR_CONFIGURE_ACK</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a3628dd84d685fdc4c67c57ab98b04750</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_INSTALL_MODE</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a1b94eb9010c3f8d46ad299f0b7ec1af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_WAIT_FOR_INSTALL_MODE_ACK</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a931f4fb1dd626d591d4ac28b7a9ea841</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_SET_MODE</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a8bda130c97e1e2a726b62a2a1296316d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_WAIT_FOR_SET_MODE_ACK</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a800c47a249edb71089a94c6a7b4dee24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_START_READINGS</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a7194a5a0a0321a050d061a74decffc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_WAIT_FOR_START_ACK</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a4da57d994deca01d92a35d2057c04acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_CONNECTED</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9afde2d3a2d7e49a7e0c68a7c10d5f143d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_CHANGE_BAUD</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9adc5f3151deb031ef61c0f3e9b612c55f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_CONFIGURE</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a9bb2f3c316a002b98fd26448a58bf766</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_CONNECTED</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9afde2d3a2d7e49a7e0c68a7c10d5f143d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_INIT</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a168ecfaec4b95766bd782511ef9ef6a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_INSTALL_MODE</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a1b94eb9010c3f8d46ad299f0b7ec1af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_NONE</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a2988c26cbb714c9591a5d6d55cf48d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_SET_MODE</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a8bda130c97e1e2a726b62a2a1296316d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_START_READINGS</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a7194a5a0a0321a050d061a74decffc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_WAIT_FOR_CONFIGURE_ACK</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a3628dd84d685fdc4c67c57ab98b04750</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_WAIT_FOR_INSTALL_MODE_ACK</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a931f4fb1dd626d591d4ac28b7a9ea841</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_WAIT_FOR_POWER_ON</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a770b8b551bd904f1e3b75d52804368d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_WAIT_FOR_SET_MODE_ACK</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a800c47a249edb71089a94c6a7b4dee24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>STATE_WAIT_FOR_START_ACK</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a52d9790fcad32f8c11ea9c16229245a9a4da57d994deca01d92a35d2057c04acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>finishParams</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a4bbda8d32016d315daaaf7d89d5a711e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>internalConnectHandler</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a5fd996ff51632f2d9ef5d650c2b2f3d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>internalConnectSim</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a8666c7ae676dd336014c53094b50e17d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>internalRunOnRobot</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a9e0d55cb5d724782b1e98728ffffdc3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sensorInterpCallback</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>ab2018ff154f7f0a04e272c324d745130</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>sickGetIsUsingSim</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>a55abef9fa4bac7e6072f862b6da13eb1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sickSetIsUsingSim</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>aab069d280d42a48bad8f181f2fbb3709</anchor>
      <arglist>(bool usingSim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>switchState</name>
      <anchorfile>classArLMS2xx.html</anchorfile>
      <anchor>aa777ddd7a53037e204d195a56e8ae1b7</anchor>
      <arglist>(State state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLMS2xxPacket</name>
    <filename>classArLMS2xxPacket.html</filename>
    <base>ArBasePacket</base>
    <member kind="function">
      <type></type>
      <name>ArLMS2xxPacket</name>
      <anchorfile>classArLMS2xxPacket.html</anchorfile>
      <anchor>a712e614a3026c45a84d1388c9af27a88</anchor>
      <arglist>(unsigned char sendingAddress=0)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::Byte2</type>
      <name>calcCRC</name>
      <anchorfile>classArLMS2xxPacket.html</anchorfile>
      <anchor>a30653437cea989aff6003187e948c746</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>duplicatePacket</name>
      <anchorfile>classArLMS2xxPacket.html</anchorfile>
      <anchor>a56bdc1e84bba8aa4a69c6dedbede87f2</anchor>
      <arglist>(ArLMS2xxPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::UByte</type>
      <name>getID</name>
      <anchorfile>classArLMS2xxPacket.html</anchorfile>
      <anchor>a195d60fbd46e509752ae7a69694bb7be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getReceivedAddress</name>
      <anchorfile>classArLMS2xxPacket.html</anchorfile>
      <anchor>a606bd5e594f6196e361017290b614b9d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getSendingAddress</name>
      <anchorfile>classArLMS2xxPacket.html</anchorfile>
      <anchor>a7c7a3533b66cbd8524d828db1a61f875</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getTimeReceived</name>
      <anchorfile>classArLMS2xxPacket.html</anchorfile>
      <anchor>a07d3b35b8b7d3fa67b099813153c3c4c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSendingAddress</name>
      <anchorfile>classArLMS2xxPacket.html</anchorfile>
      <anchor>a890eae1fd01a93d67e30eeb084831c60</anchor>
      <arglist>(unsigned char address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeReceived</name>
      <anchorfile>classArLMS2xxPacket.html</anchorfile>
      <anchor>a87082d5dc6fb124a105c61f7a950a1fd</anchor>
      <arglist>(ArTime timeReceived)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyCRC</name>
      <anchorfile>classArLMS2xxPacket.html</anchorfile>
      <anchor>adfc4d4acd53f003affcf15150d668f7d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArLMS2xxPacket</name>
      <anchorfile>classArLMS2xxPacket.html</anchorfile>
      <anchor>a7c02308a8bb605b9bad9732856624411</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLMS2xxPacketReceiver</name>
    <filename>classArLMS2xxPacketReceiver.html</filename>
    <member kind="function">
      <type></type>
      <name>ArLMS2xxPacketReceiver</name>
      <anchorfile>classArLMS2xxPacketReceiver.html</anchorfile>
      <anchor>a0b9f745f9b5a4b738d984f0d452932a2</anchor>
      <arglist>(unsigned char receivingAddress=0, bool allocatePackets=false, bool useBase0Address=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLMS2xxPacketReceiver</name>
      <anchorfile>classArLMS2xxPacketReceiver.html</anchorfile>
      <anchor>a0fc9d9985edbcfc7c750b52c1769a7a5</anchor>
      <arglist>(ArDeviceConnection *deviceConnection, unsigned char receivingAddress=0, bool allocatePackets=false, bool useBase0Address=false)</arglist>
    </member>
    <member kind="function">
      <type>ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArLMS2xxPacketReceiver.html</anchorfile>
      <anchor>af274a7df9a84e51241eb8afb8d5216b0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAllocatingPackets</name>
      <anchorfile>classArLMS2xxPacketReceiver.html</anchorfile>
      <anchor>a1c0a0f317997d36722ea589a95e0c8f9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArLMS2xxPacket *</type>
      <name>receivePacket</name>
      <anchorfile>classArLMS2xxPacketReceiver.html</anchorfile>
      <anchor>ab57e0f8cbb7867a52a7032ed513719c9</anchor>
      <arglist>(unsigned int msWait=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArLMS2xxPacketReceiver.html</anchorfile>
      <anchor>a055f6c6dc99f85cd9f63b45964bfc4b6</anchor>
      <arglist>(ArDeviceConnection *deviceConnection)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArLMS2xxPacketReceiver</name>
      <anchorfile>classArLMS2xxPacketReceiver.html</anchorfile>
      <anchor>a1e5efa967fc165efef52ea5f8216000a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLog</name>
    <filename>classArLog.html</filename>
    <member kind="enumvalue">
      <name>Colbert</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aa62617e816d9caa5853bf4ce9b34ca10ab09ef7c8ec14d623c0aad3f78a596a77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>File</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aa62617e816d9caa5853bf4ce9b34ca10a35b2c9a3d5c6bb0f2dbe2064cc0163db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LogLevel</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>ac8cc0fb3aa323ab2a1c21340fdd1dce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Terse</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>ac8cc0fb3aa323ab2a1c21340fdd1dce3a012daf6573594f91242f8dd7c02eb74b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>ac8cc0fb3aa323ab2a1c21340fdd1dce3a7040faf60eeb155eaa85d439b1066ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Verbose</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>ac8cc0fb3aa323ab2a1c21340fdd1dce3a6e80d09c67dad73e9ba736e91ec893be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LogType</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aa62617e816d9caa5853bf4ce9b34ca10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StdOut</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aa62617e816d9caa5853bf4ce9b34ca10a9b9548406090127b57f335d9ecb35e41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StdErr</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aa62617e816d9caa5853bf4ce9b34ca10acc775da407aa66d7ad368b9d1f80b70c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>File</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aa62617e816d9caa5853bf4ce9b34ca10a35b2c9a3d5c6bb0f2dbe2064cc0163db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Colbert</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aa62617e816d9caa5853bf4ce9b34ca10ab09ef7c8ec14d623c0aad3f78a596a77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aa62617e816d9caa5853bf4ce9b34ca10a24413a3b5b7242dbd446adcae533ad76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aa62617e816d9caa5853bf4ce9b34ca10a24413a3b5b7242dbd446adcae533ad76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>ac8cc0fb3aa323ab2a1c21340fdd1dce3a7040faf60eeb155eaa85d439b1066ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StdErr</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aa62617e816d9caa5853bf4ce9b34ca10acc775da407aa66d7ad368b9d1f80b70c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StdOut</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aa62617e816d9caa5853bf4ce9b34ca10a9b9548406090127b57f335d9ecb35e41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Terse</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>ac8cc0fb3aa323ab2a1c21340fdd1dce3a012daf6573594f91242f8dd7c02eb74b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Verbose</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>ac8cc0fb3aa323ab2a1c21340fdd1dce3a6e80d09c67dad73e9ba736e91ec893be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addToConfig</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a830b6edab2079ae1ffeb7e164e30636b</anchor>
      <arglist>(ArConfig *config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clearFunctor</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a971bb1ab47f4a2c0ab8d72b523d7d617</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>close</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a9cd0b4b08ef0ef0a0f51ebbfaaad1b98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>debug</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a2f4cc82023fcaaab0d41bc9603fda8e4</anchor>
      <arglist>(const char *str,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>error</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>ac30a111c39fe705140fdcdc4221bef8e</anchor>
      <arglist>(const char *str,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>info</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>acb3d1663148daf8fa0a29cfc9dda09e5</anchor>
      <arglist>(const char *str,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>init</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a74fa320b89ec1ece70053722c91f7c71</anchor>
      <arglist>(LogType type, LogLevel level, const char *fileName=&quot;&quot;, bool logTime=false, bool alsoPrint=false, bool printThisCall=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>internalForceLockup</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aeb1eee01332bd15f3cc150928239980a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>log</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a43a8b3789126c818f390f24bdbceccce</anchor>
      <arglist>(LogLevel level, const char *str,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logBacktrace</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>adce6969b47e8bfbc0d98d5875dfc3483</anchor>
      <arglist>(LogLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logErrorFromOS</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a402af42ce9e591ff8a43fa749aebfb5b</anchor>
      <arglist>(LogLevel level, const char *str,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logErrorFromOSNoLock</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>ab31af89bff2fc0b81ca067646de83111</anchor>
      <arglist>(LogLevel level, const char *str,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logErrorFromOSPlain</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a76ae32a1dd7670afa9795147d1a32be6</anchor>
      <arglist>(LogLevel level, const char *str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logErrorFromOSPlainNoLock</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a3f291b41885b8144817e26aeb9d262b3</anchor>
      <arglist>(LogLevel level, const char *str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>logFileContents</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a3ae2f0f277cf93c23e18059a7b9454aa</anchor>
      <arglist>(LogLevel level, const char *fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logPlain</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a252879acad25b3c1e9f0c58aad8d27a3</anchor>
      <arglist>(LogLevel level, const char *str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setFunctor</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a386868be5c2bbdd02683ac99973b54fb</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setLogLevel</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a91fba572e55221e5b01f45d94ed871be</anchor>
      <arglist>(LogLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>warning</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>aaba300bc3c468faba6fd5cd03d7a7c34</anchor>
      <arglist>(const char *str,...)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static void(*</type>
      <name>colbertPrint</name>
      <anchorfile>classArLog.html</anchorfile>
      <anchor>a052c8e9891ff891c9a66b709d608bb67</anchor>
      <arglist>)(int i, const char *str)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLogFileConnection</name>
    <filename>classArLogFileConnection.html</filename>
    <base>ArDeviceConnection</base>
    <member kind="enumeration">
      <type></type>
      <name>Open</name>
      <anchorfile>classArLogFileConnection.html</anchorfile>
      <anchor>a3f9f03f5608a2b7254836645ac6848bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_FILE_NOT_FOUND</name>
      <anchorfile>classArLogFileConnection.html</anchorfile>
      <anchor>a3f9f03f5608a2b7254836645ac6848bda4481537d5595c470ce7d50bf9f9b48b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_NOT_A_LOG_FILE</name>
      <anchorfile>classArLogFileConnection.html</anchorfile>
      <anchor>a3f9f03f5608a2b7254836645ac6848bda27cb9ee9c3c3d31f1dc535efe95c8c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_FILE_NOT_FOUND</name>
      <anchorfile>classArLogFileConnection.html</anchorfile>
      <anchor>a3f9f03f5608a2b7254836645ac6848bda4481537d5595c470ce7d50bf9f9b48b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_NOT_A_LOG_FILE</name>
      <anchorfile>classArLogFileConnection.html</anchorfile>
      <anchor>a3f9f03f5608a2b7254836645ac6848bda27cb9ee9c3c3d31f1dc535efe95c8c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArLogFileConnection</name>
      <anchorfile>classArLogFileConnection.html</anchorfile>
      <anchor>a5790036cd172e4ecd2a3c0be99df5360</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLogFile</name>
      <anchorfile>classArLogFileConnection.html</anchorfile>
      <anchor>ac24272ef8fd203c72de78ddffd20a8c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>internalOpen</name>
      <anchorfile>classArLogFileConnection.html</anchorfile>
      <anchor>a7aa3b8d6b1ea94bb027b0e2ee31ba9a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>open</name>
      <anchorfile>classArLogFileConnection.html</anchorfile>
      <anchor>acff846381d1deb64052994aa23686254</anchor>
      <arglist>(const char *fname=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArLogFileConnection</name>
      <anchorfile>classArLogFileConnection.html</anchorfile>
      <anchor>a6a085a3eb86853a6dd114660ee8bfc2c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMap</name>
    <filename>classArMap.html</filename>
    <base>ArMapInterface</base>
    <member kind="function">
      <type></type>
      <name>ArMap</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a523ac726e8b27faac5527c084c08e13b</anchor>
      <arglist>(const char *baseDirectory=&quot;./&quot;, bool addToGlobalConfig=true, const char *configSection=&quot;Files&quot;, const char *configParam=&quot;Map&quot;, const char *configDesc=&quot;Map of the environment that the robot uses for navigation&quot;, bool ignoreEmptyFileName=true, ArPriority::Priority priority=ArPriority::IMPORTANT, const char *tempDirectory=NULL, int configProcessFilePriority=100)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMap</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>adf1c0cdc2f799b3f50278384a3e74d65</anchor>
      <arglist>(const ArMap &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeConfigMapName</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a11995a78bb0d51ba50ea9c08d03cd18f</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceMapLoadOnConfigProcessFile</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a05add0fac51f2684edc69b383e143e18</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual struct stat</type>
      <name>getReadFileStat</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a0413938cf922ff7f52e31b42fbbabfee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadDataPoint</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a8c3ba083163ca88783b5740236a97674</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>ArMap &amp;</type>
      <name>operator=</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>ad2d5ce146ac05551800576c8017c6772</anchor>
      <arglist>(const ArMap &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>readFile</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a41309477c89bc6ee5a8c90c46cc3ab5b</anchor>
      <arglist>(const char *fileName, char *errorBuffer, size_t errorBufferLen, unsigned char *md5DigestBuffer, size_t md5DigestBufferLen)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readFileAndChangeConfig</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a11f9c419258fa726a49a4a04d9ba55ec</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>writeFile</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a3922ae9a351c1739a24d9247f7db1cc5</anchor>
      <arglist>(const char *fileName, bool internalCall, unsigned char *md5DigestBuffer=NULL, size_t md5DigestBufferLen=0, time_t fileTimestamp=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMap</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>acdfbf4724853ca99ae14c13bdbaf8c1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>processFile</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>af3bce537be525ff49525c0a1e8092120</anchor>
      <arglist>(char *errorBuffer, size_t errorBufferLen)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myBaseDirectory</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a01f7d988136fbe3a5eb9b288dfac15ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myConfigMapName</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>af0de41f28ee0645bf0f23083bcf95045</anchor>
      <arglist>[MAX_MAP_NAME_LENGTH]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myConfigParam</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>af3230b4681176a9a01306a695c25cde2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myConfigProcessedBefore</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>afc199acb6d98745f25f1df4e80c0bc01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapSimple *const</type>
      <name>myCurrentMap</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a01274885f960a5bb1c20e88ed50c66bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myFileName</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a9f6421c176d43f6a58d8441fd1e3f5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myForceMapLoad</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>ad6e91be7858896f29ab7d7fc0729869f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIgnoreCase</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a6befe1c38c78cf59eef71876ae9acd31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIgnoreEmptyFileName</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a817c8c3333de770059aa492a03fbdff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsQuiet</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>ab5c3fa10f35669d3c124fb9ae629e4f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapSimple *</type>
      <name>myLoadingMap</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>a14c2e2f4b5fff67792089f8c213563c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor2C&lt; bool, ArMap, char *, size_t &gt;</type>
      <name>myProcessFileCB</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>accb8749562709e3fba2226460ccc2311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>struct stat</type>
      <name>myReadFileStat</name>
      <anchorfile>classArMap.html</anchorfile>
      <anchor>ae49f89e971bdd7a5690a3c9ab8882fa5</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="classArMap" title="Thread issuses, and changing the map">MapThreading</docanchor>
    <docanchor file="classArMap" title="Map Objects">MapObjects</docanchor>
  </compound>
  <compound kind="class">
    <name>ArMapChangeDetails</name>
    <filename>classArMapChangeDetails.html</filename>
    <class kind="struct">ArMapChangeDetails::ArMapScanChangeDetails</class>
    <member kind="enumvalue">
      <name>CHANGE_TYPE_COUNT</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a9fb1e7517342c4a2d2b67a96f4e60df3a5b99d287bb56d59d29306dfc38ea7888</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADDITIONS</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ae40f8bf0789880c41e790d271e723f56a3d3611f9a8bbac9ecb307c6bd0c534e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANGE_TYPE_COUNT</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a9fb1e7517342c4a2d2b67a96f4e60df3a5b99d287bb56d59d29306dfc38ea7888</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETIONS</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ae40f8bf0789880c41e790d271e723f56a22243bc461eb8f7256b43d48fbab93e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_CHANGE_TYPE</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ae40f8bf0789880c41e790d271e723f56a77d8c81cd415084ade91207b729ff5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MapLineChangeType</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ae40f8bf0789880c41e790d271e723f56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETIONS</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ae40f8bf0789880c41e790d271e723f56a22243bc461eb8f7256b43d48fbab93e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADDITIONS</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ae40f8bf0789880c41e790d271e723f56a3d3611f9a8bbac9ecb307c6bd0c534e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_CHANGE_TYPE</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ae40f8bf0789880c41e790d271e723f56a77d8c81cd415084ade91207b729ff5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapChangeDetails</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a689d0cb52969fb4abaa34abbf4cc70ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapChangeDetails</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>aea0d43fc534317e4aa3fce60f06100ec</anchor>
      <arglist>(const ArMapChangeDetails &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createChildArgMap</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>acfb66c2ac18a3c41fd5984f8a98a371e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::string &gt;</type>
      <name>findChangedInfoNames</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a33ddb34eca4d1abfe662f5ee872a3834</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArMapFileLineSet *</type>
      <name>getChangedInfoLines</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a61d4b5c63eb04c92ee4934eef0fb1ab3</anchor>
      <arglist>(const char *infoName, MapLineChangeType change)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ArLineSegment &gt; *</type>
      <name>getChangedLineSegments</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a19274f61c900a54d524e3399f9356195</anchor>
      <arglist>(MapLineChangeType change, const char *scanType)</arglist>
    </member>
    <member kind="function">
      <type>ArMapFileLineSet *</type>
      <name>getChangedObjectLines</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a4eeb1d0195ac83ef34fb2f70426c5811</anchor>
      <arglist>(MapLineChangeType change)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ArPose &gt; *</type>
      <name>getChangedPoints</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ad5ba917656be215aee067fb0f4fb4759</anchor>
      <arglist>(MapLineChangeType change, const char *scanType)</arglist>
    </member>
    <member kind="function">
      <type>ArMapFileLineSet *</type>
      <name>getChangedSummaryLines</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a62d7b7d3b85afe4792449903b4bd37e8</anchor>
      <arglist>(MapLineChangeType change, const char *scanType)</arglist>
    </member>
    <member kind="function">
      <type>ArMapFileLineSet *</type>
      <name>getChangedSupplementLines</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>aa4ff621d37c73479592e1a87c87bb115</anchor>
      <arglist>(MapLineChangeType change)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getNewMapId</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ad146f150fda308abde18cd01eee28ee1</anchor>
      <arglist>(ArMapId *mapIdOut)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getOrigMapId</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ab1ac850ed5c504b22cc881667f5d84f6</anchor>
      <arglist>(ArMapId *mapIdOut)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::string &gt; *</type>
      <name>getScanTypes</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a5b8b98e5153e1fb57dfe2fa7dd3c997a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChildArg</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>adaaefb8305d1d5a43ff3401521698ccb</anchor>
      <arglist>(const char *infoName, ArArgumentBuilder *arg) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChildArg</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a73cc579d960690b190d2a5993a0dc951</anchor>
      <arglist>(const char *infoName, const char *arg0Text) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ac677e14c7806d32cdb5deb3f422c24c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a54576d8af45ab633e4383b0746c741a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArMapChangeDetails &amp;</type>
      <name>operator=</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a569e1b9ff0de4777ceed07bb0c2a54c8</anchor>
      <arglist>(const ArMapChangeDetails &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNewMapId</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>aa0845abe1f1fe4f32430a468286cb7ae</anchor>
      <arglist>(const ArMapId &amp;mapId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrigMapId</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a4e6cd5ffc6b68963c2768fb77166356d</anchor>
      <arglist>(const ArMapId &amp;mapId)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArMapChangeDetails</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a6543be978257171640e756eff3d69bca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArMapScanChangeDetails *</type>
      <name>getScanChangeDetails</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a3f94a6a930afe8d6e016571ab689d9ad</anchor>
      <arglist>(const char *scanType)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapFileLineSet</type>
      <name>myChangedObjectLines</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a12cb9feabaf2ff22a1d5d21a40a9dbba</anchor>
      <arglist>[CHANGE_TYPE_COUNT]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapFileLineSet</type>
      <name>myChangedSupplementLines</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ab8d6aab17561bbb129c86cd5795359db</anchor>
      <arglist>[CHANGE_TYPE_COUNT]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::map&lt; std::string, bool &gt; &gt;</type>
      <name>myInfoNameToMapOfChildArgsMap</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a7dc65da9aafa5d077485285024e3fbe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, ArMapFileLineSet &gt;</type>
      <name>myInfoToChangeMaps</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a362706feb9472c6ab9ea3dd3db2fddb7</anchor>
      <arglist>[CHANGE_TYPE_COUNT]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myMutex</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ace9d575e3d03d367339f3333eacd7262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapId</type>
      <name>myNewMapId</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>aabfbbd2d649068da8d6a5896274a68c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapScanChangeDetails</type>
      <name>myNullScanTypeChanges</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ae5b147709e026fb483a405f92ceb0de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapId</type>
      <name>myOrigMapId</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a2edfabaec4e13057477ebdb37d7620e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::string &gt;</type>
      <name>myScanTypeList</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>a316bb0ff963ec4e52fbe7a9856d99d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, ArMapScanChangeDetails * &gt;</type>
      <name>myScanTypeToChangesMap</name>
      <anchorfile>classArMapChangeDetails.html</anchorfile>
      <anchor>ac549745ae4d27be1d0d5b32b6ef81262</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapChangedHelper</name>
    <filename>classArMapChangedHelper.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addMapChangedCB</name>
      <anchorfile>classArMapChangedHelper.html</anchorfile>
      <anchor>a40a1a16c9598ff83d4c37fda99ec8284</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPreMapChangedCB</name>
      <anchorfile>classArMapChangedHelper.html</anchorfile>
      <anchor>a4e51c894eb1da97ecf49ca0de71e4f47</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapChangedHelper</name>
      <anchorfile>classArMapChangedHelper.html</anchorfile>
      <anchor>a770140b90e12e2eb21b763a21e13a5ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArLog::LogLevel</type>
      <name>getMapChangedLogLevel</name>
      <anchorfile>classArMapChangedHelper.html</anchorfile>
      <anchor>a65f777fba662092d9d00ad2f47c06998</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invokeMapChangedCallbacks</name>
      <anchorfile>classArMapChangedHelper.html</anchorfile>
      <anchor>abee0d3bcc613b97ba921a09f546bc27b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remMapChangedCB</name>
      <anchorfile>classArMapChangedHelper.html</anchorfile>
      <anchor>aa7cb77e7259253dfe1cb234ee9f7a494</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remPreMapChangedCB</name>
      <anchorfile>classArMapChangedHelper.html</anchorfile>
      <anchor>acc26bc73c7fa765593dbe94e93f67270</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMapChangedLogLevel</name>
      <anchorfile>classArMapChangedHelper.html</anchorfile>
      <anchor>a3e9e39cdb95944e63a3c78bba1fa644a</anchor>
      <arglist>(ArLog::LogLevel level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapChangedHelper</name>
      <anchorfile>classArMapChangedHelper.html</anchorfile>
      <anchor>a33136a68564903d4b873bc2203f6d0b0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapFileLine</name>
    <filename>classArMapFileLine.html</filename>
    <member kind="function">
      <type></type>
      <name>ArMapFileLine</name>
      <anchorfile>classArMapFileLine.html</anchorfile>
      <anchor>aee5e980bc772bf7798798f710a869afe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapFileLine</name>
      <anchorfile>classArMapFileLine.html</anchorfile>
      <anchor>abc529444b835fb0bc1ca293767115200</anchor>
      <arglist>(int lineNum, const char *lineText)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapFileLine</name>
      <anchorfile>classArMapFileLine.html</anchorfile>
      <anchor>aab0f31cece19010d2f35eaf43d619304</anchor>
      <arglist>(const ArMapFileLine &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLineNum</name>
      <anchorfile>classArMapFileLine.html</anchorfile>
      <anchor>a285a42c92cc6f279ee5e8dd3ba6eb2b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLineText</name>
      <anchorfile>classArMapFileLine.html</anchorfile>
      <anchor>a79a3d201a8f115d73c81528efe7497e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArMapFileLine &amp;</type>
      <name>operator=</name>
      <anchorfile>classArMapFileLine.html</anchorfile>
      <anchor>a84145c38f42e7b5d4463b3b388d22546</anchor>
      <arglist>(const ArMapFileLine &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArMapFileLine</name>
      <anchorfile>classArMapFileLine.html</anchorfile>
      <anchor>a1464d2e8f7493881f7993ebfd46b791d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myLineNum</name>
      <anchorfile>classArMapFileLine.html</anchorfile>
      <anchor>af0bce9c79482b4e995739a338ac892d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLineText</name>
      <anchorfile>classArMapFileLine.html</anchorfile>
      <anchor>a7865ea98e75eec39f00281ff66554265</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator&lt;</name>
      <anchorfile>classArMapFileLine.html</anchorfile>
      <anchor>a08898721edb96853f4a1cf751a622af1</anchor>
      <arglist>(const ArMapFileLine &amp;line1, const ArMapFileLine &amp;line2)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArMapFileLineCompare</name>
    <filename>structArMapFileLineCompare.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structArMapFileLineCompare.html</anchorfile>
      <anchor>aeba3d98795c80cd3577b89ca70029e30</anchor>
      <arglist>(const ArMapFileLine &amp;line1, const ArMapFileLine &amp;line2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapFileLineGroup</name>
    <filename>classArMapFileLineGroup.html</filename>
    <member kind="function">
      <type></type>
      <name>ArMapFileLineGroup</name>
      <anchorfile>classArMapFileLineGroup.html</anchorfile>
      <anchor>a67ab542cf87d12aef4930e96517ae08f</anchor>
      <arglist>(const ArMapFileLine &amp;parentLine)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ArMapFileLine &gt; *</type>
      <name>getChildLines</name>
      <anchorfile>classArMapFileLineGroup.html</anchorfile>
      <anchor>a4ee6ac06ee2ca2b1d9a8b8ac4b52f5bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArMapFileLine *</type>
      <name>getParentLine</name>
      <anchorfile>classArMapFileLineGroup.html</anchorfile>
      <anchor>a6ed2a09a6533700103548db5c71173b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArMapFileLineGroup.html</anchorfile>
      <anchor>afca3b9a269a141010dfc9d7f39624157</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArMapFileLineGroup</name>
      <anchorfile>classArMapFileLineGroup.html</anchorfile>
      <anchor>a034a573f82ee79dff32979898e2e84d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ArMapFileLine &gt;</type>
      <name>myChildLines</name>
      <anchorfile>classArMapFileLineGroup.html</anchorfile>
      <anchor>ad8465320d1298ce4f4d310e2e9f50286</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArMapFileLine</type>
      <name>myParentLine</name>
      <anchorfile>classArMapFileLineGroup.html</anchorfile>
      <anchor>a08a8914792f5a7e5942ca0c49fc0d3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator&lt;</name>
      <anchorfile>classArMapFileLineGroup.html</anchorfile>
      <anchor>a5e0a7dbb5c7ff904061d4fe3943dab8a</anchor>
      <arglist>(const ArMapFileLineGroup &amp;line1, const ArMapFileLineGroup &amp;line2)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArMapFileLineGroupCompare</name>
    <filename>structArMapFileLineGroupCompare.html</filename>
  </compound>
  <compound kind="struct">
    <name>ArMapFileLineGroupLineNumCompare</name>
    <filename>structArMapFileLineGroupLineNumCompare.html</filename>
  </compound>
  <compound kind="class">
    <name>ArMapFileLineSet</name>
    <filename>classArMapFileLineSet.html</filename>
    <member kind="function">
      <type></type>
      <name>ArMapFileLineSet</name>
      <anchorfile>classArMapFileLineSet.html</anchorfile>
      <anchor>a56f67f260e889e579aca10c96f0ecce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapFileLineSet</name>
      <anchorfile>classArMapFileLineSet.html</anchorfile>
      <anchor>a20ffa556fb29cc8002edd0032397e641</anchor>
      <arglist>(const ArMapFileLineSet &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>find</name>
      <anchorfile>classArMapFileLineSet.html</anchorfile>
      <anchor>a25035b27bfa197ea998be47f1551aff3</anchor>
      <arglist>(const ArMapFileLine &amp;groupParent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArMapFileLineSet.html</anchorfile>
      <anchor>ac8656203a7a214c9955931dfdb6b1b38</anchor>
      <arglist>(const char *prefix)</arglist>
    </member>
    <member kind="function">
      <type>ArMapFileLineSet &amp;</type>
      <name>operator=</name>
      <anchorfile>classArMapFileLineSet.html</anchorfile>
      <anchor>ae5559e622528fd3f22f864092d14535b</anchor>
      <arglist>(const ArMapFileLineSet &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArMapFileLineSet</name>
      <anchorfile>classArMapFileLineSet.html</anchorfile>
      <anchor>a999e7ed2d6b3e7e16858fc866553a660</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>calculateChanges</name>
      <anchorfile>classArMapFileLineSet.html</anchorfile>
      <anchor>ad5e7e11ac5b86446510d94509b9656b2</anchor>
      <arglist>(ArMapFileLineSet &amp;origLines, ArMapFileLineSet &amp;newLines, ArMapFileLineSet *deletedLinesOut, ArMapFileLineSet *addedLinesOut, bool isCheckChildren=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapFileLineSetWriter</name>
    <filename>classArMapFileLineSetWriter.html</filename>
    <base>ArFunctor1&lt; const char * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArMapFileLineSetWriter</name>
      <anchorfile>classArMapFileLineSetWriter.html</anchorfile>
      <anchor>a2a9e788c9f8fdef95425f7673d1245a9</anchor>
      <arglist>(ArMapFileLineSet *multiSet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArMapFileLineSetWriter.html</anchorfile>
      <anchor>a488c4227b8101d5a3538e418e0d188d8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArMapFileLineSetWriter.html</anchorfile>
      <anchor>a48d96f7d59d447205de6cb500a75f163</anchor>
      <arglist>(const char *p1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAddingChildren</name>
      <anchorfile>classArMapFileLineSetWriter.html</anchorfile>
      <anchor>a4dd988514d252492ecca115f8c99f1b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAddingChildren</name>
      <anchorfile>classArMapFileLineSetWriter.html</anchorfile>
      <anchor>a8dbeb32d969dc8c11382e1e9fca0455f</anchor>
      <arglist>(bool isAddingChildren)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArMapFileLineSetWriter</name>
      <anchorfile>classArMapFileLineSetWriter.html</anchorfile>
      <anchor>a0219dae98e61b7e7cac5ec92ec9a45da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myChildLineNum</name>
      <anchorfile>classArMapFileLineSetWriter.html</anchorfile>
      <anchor>abe2a4e1b2bb34e0e94c0d53cc03551fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsAddingChildren</name>
      <anchorfile>classArMapFileLineSetWriter.html</anchorfile>
      <anchor>ac71385eeaa6eafaf0bc3e479089735b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myLineNum</name>
      <anchorfile>classArMapFileLineSetWriter.html</anchorfile>
      <anchor>a4d33735663e4275ccf67dcbe850ae037</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapFileLineSet *</type>
      <name>myMultiSet</name>
      <anchorfile>classArMapFileLineSetWriter.html</anchorfile>
      <anchor>ae5d1ee405519654d7baf1463b967329d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapGPSCoords</name>
    <filename>classArMapGPSCoords.html</filename>
    <base>ArENUCoords</base>
    <member kind="function">
      <type>bool</type>
      <name>convertLLA2MapCoords</name>
      <anchorfile>classArMapGPSCoords.html</anchorfile>
      <anchor>ae5bc854889450db24b9da00b050ca937</anchor>
      <arglist>(const double lat, const double lon, const double alt, double &amp;ea, double &amp;no, double &amp;up) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>convertMap2LLACoords</name>
      <anchorfile>classArMapGPSCoords.html</anchorfile>
      <anchor>ae2fa8e14ec073397223177ece2fd4a54</anchor>
      <arglist>(const double ea, const double no, const double up, double &amp;lat, double &amp;lon, double &amp;alt) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapId</name>
    <filename>classArMapId.html</filename>
    <member kind="function">
      <type></type>
      <name>ArMapId</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>ad3cc409ba542fe58763c49aa24945b0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapId</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a5568f0f32615040f75fd7092718dd4fa</anchor>
      <arglist>(const char *sourceName, const char *fileName, const unsigned char *checksum, size_t checksumLength, long int size, const time_t timestamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapId</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>ad40630e2aa3e0b6aa6b7bad7755e37de</anchor>
      <arglist>(const ArMapId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>adb8c8bafb3403d11787e4c0f59942cef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>getChecksum</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a786de6c7f07b642cee64cdc37aff93e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getChecksumLength</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>aa921174571456a04c5e59b35d52c997f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDisplayChecksum</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a113f34f23bb8291f0a110724fdeef9cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileName</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a410aef2069cbe512f2482349f64240a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>long int</type>
      <name>getSize</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a495268b384e23abe809141c2ec35a6c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSourceName</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>ad5a8d121c330e8b86a04cbbd2baaae38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>getTimestamp</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a63842901aff1690a2d97135ff7f2f3a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>ae26d105529b0ac5990d85e8c11bb19f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameFile</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>ab88f7fb945dc1b8851d6ab86b7f53a33</anchor>
      <arglist>(const ArMapId &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidTimestamp</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a78f42249db55178e613460114f470bc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVersionOfSameFile</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>abdf72128f3e96525fe1972ab1c6e38fd</anchor>
      <arglist>(const ArMapId &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>af8581efeef777c46c541aa25de94d2cb</anchor>
      <arglist>(const char *prefix) const </arglist>
    </member>
    <member kind="function">
      <type>ArMapId &amp;</type>
      <name>operator=</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>ae7ec69f2bb62f34c45b432f6f7bfde7b</anchor>
      <arglist>(const ArMapId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecksum</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a6d9239049134c75926fa255b6e9f52b5</anchor>
      <arglist>(const unsigned char *checksum, size_t checksumLen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a344b1fdb05b649b668058d552a3cde7a</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a6ed118838193dced4dd91e8b3da25770</anchor>
      <arglist>(long int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceName</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a494ab7c84dfd7b17dbbe4a8398452201</anchor>
      <arglist>(const char *sourceName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimestamp</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a4e59a63ccb1a30fb87972b4d06c98422</anchor>
      <arglist>(const time_t &amp;timestamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArMapId</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>ab23ba762139c4a8972bdeaf05ef2c503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>create</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>ae7de2a138d5fdf92acea8af6912e9797</anchor>
      <arglist>(const char *fileName, ArMapId *mapIdOut)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>fromPacket</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a1de5dd4440815386c41973e4f7e3a5f6</anchor>
      <arglist>(ArBasePacket *packetIn, ArMapId *mapIdOut)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>toPacket</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>adab69a6432e77d20a3594708ae234056</anchor>
      <arglist>(const ArMapId &amp;mapId, ArBasePacket *packetOut)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned char *</type>
      <name>myChecksum</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a4e70cd587004497f0b3026feb1c8ea47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>myChecksumLength</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>ae426b5d7689fef93d3f1bd6dd75771e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char *</type>
      <name>myDisplayChecksum</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a06410a856f4b9f27996e8ba79ec5aad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>myDisplayChecksumLength</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>aa8acb493bd7b96a6996bd8a5761282c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myFileName</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a484e726893eaeecb8254b0bc85f7b957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long int</type>
      <name>mySize</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>acb1c0da6f70d65634dc2f16fc5cc937d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mySourceName</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a3e39960ec9528154fb2fdbc23eb48af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>time_t</type>
      <name>myTimestamp</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a0f8656deeae851ea62e48b20e3a7fb8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>aa89a23c5dab9abfe50f29accfc50c54a</anchor>
      <arglist>(const ArMapId &amp;id1, const ArMapId &amp;id2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classArMapId.html</anchorfile>
      <anchor>a8f273108823f7f0c0f83aee0e949ec3a</anchor>
      <arglist>(const ArMapId &amp;id1, const ArMapId &amp;id2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapInfo</name>
    <filename>classArMapInfo.html</filename>
    <base>ArMapInfoInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addToFileParser</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>a0d0a37eca627905dc95cb4b6f9fb6dca</anchor>
      <arglist>(ArFileParser *fileParser)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapInfo</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>a64aca9b41e3725bba5bd23245e8900a2</anchor>
      <arglist>(const char **infoNameList=NULL, size_t infoNameCount=0, const char *keywordPrefix=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapInfo</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>a07b8db48234e55ad9adb31e860a99f8f</anchor>
      <arglist>(const ArMapInfo &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>a03c175f8ca6eda26947c911bf79c7e1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTime</type>
      <name>getTimeChanged</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>ac9f85a5f4aa9a5548da8b89e3a16b398</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArMapInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>a3670788d07a9ab21f1b03b00c722bbd4</anchor>
      <arglist>(const ArMapInfo &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>remFromFileParser</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>ab8c461f8113eecd5167311cfe4688194</anchor>
      <arglist>(ArFileParser *fileParser)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapInfo</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>a7bc057ca471744d4a1626fb6f9bef21d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createMultiSet</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>a47330197b34aa4900f7c9c4edf1c4342</anchor>
      <arglist>(const char *infoName, ArMapFileLineSet *multiSet, ArMapChangeDetails *changeDetails)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>handleInfo</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>aba380d4364bc109de7d689dd8085246c</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setChanged</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>a108d2d0535ee3b0180e0ff466f68e385</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDefaultInfoNames</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>aa98cb3723a042b1eb3920d3be5b20e88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myNumInfos</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>ad44fb721a9afcd2bc29ca31b2d1b7225</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myTimeChanged</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>ade2daa3df56560d4cdd2601bf03acad2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>ArMapSimple</name>
      <anchorfile>classArMapInfo.html</anchorfile>
      <anchor>a2951f673179bfe13b83ad53df3eec560</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapInfoInterface</name>
    <filename>classArMapInfoInterface.html</filename>
    <member kind="enumvalue">
      <name>INFO_COUNT</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>a5de957b3fa4519b1ff562f1ee9d9240da20ee240af44438cad2f33cfe29f21b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAIRN_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05afab7a58fe818b209b1932ee8d758db27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUSTOM_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a6fda900fe4e3a84219b49c8670377b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIRST_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a43cc914ec328dc61f7ad3ac3c7241c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INFO_COUNT</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>a5de957b3fa4519b1ff562f1ee9d9240da20ee240af44438cad2f33cfe29f21b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InfoType</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAP_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a34eb25df5af2b80fc9da559b7074b2a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIRST_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a43cc914ec328dc61f7ad3ac3c7241c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>META_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05af2f297edecf3ad24764990d325d35f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TASK_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05af8292aef78325420d45fb11f7a0bbf67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROUTE_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a7ae389082ea4c263a4df2f3aa3186a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCHED_TASK_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a3b4136d47451943fde3375cdb811c98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCHED_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a6322eef461adaf54bd22c6eda06523b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAIRN_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05afab7a58fe818b209b1932ee8d758db27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUSTOM_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a6fda900fe4e3a84219b49c8670377b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a96063b169201f877050e201d280f6404</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a96063b169201f877050e201d280f6404</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAP_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a34eb25df5af2b80fc9da559b7074b2a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>META_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05af2f297edecf3ad24764990d325d35f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROUTE_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a7ae389082ea4c263a4df2f3aa3186a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCHED_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a6322eef461adaf54bd22c6eda06523b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCHED_TASK_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05a3b4136d47451943fde3375cdb811c98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TASK_INFO</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae8f1a9d7cce478985fc30c9237d93e05af8292aef78325420d45fb11f7a0bbf67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapInfoInterface</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>aa2b0edebd71ed20087faf5a9b96e0e01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; ArArgumentBuilder * &gt; *</type>
      <name>getInfo</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>a377012af07697ccb5b2d5cbff842d10c</anchor>
      <arglist>(const char *infoName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; ArArgumentBuilder * &gt; *</type>
      <name>getInfo</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>a25271fd1737e048170dae5e5dc5e841a</anchor>
      <arglist>(int infoType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getInfoCount</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>a4f87bdbc62656d509bdfdc638ebe9af2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getInfoName</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>a7ee59537e836bd0e7cde332a6bc46140</anchor>
      <arglist>(int infoType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; std::string &gt;</type>
      <name>getInfoNames</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae76435246b06fe6f967f4c2d098cd959</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; ArArgumentBuilder * &gt; *</type>
      <name>getMapInfo</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>a91d7186534412c603f6f6ac2a9e8d4f7</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setInfo</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>af8e673838d267f7831d56c7cd7822e32</anchor>
      <arglist>(const char *infoName, const std::list&lt; ArArgumentBuilder * &gt; *infoList, ArMapChangeDetails *changeDetails=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setInfo</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>afe493ef1948a114cbd69b22c8b0043f0</anchor>
      <arglist>(int infoType, const std::list&lt; ArArgumentBuilder * &gt; *infoList, ArMapChangeDetails *changeDetails=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setMapInfo</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>a04615a60f87e76efc5149c116cdc5119</anchor>
      <arglist>(const std::list&lt; ArArgumentBuilder * &gt; *mapInfo, ArMapChangeDetails *changeDetails=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writeInfoToFunctor</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>a7e6f85608759c92ed8079cd047a3ea32</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, const char *endOfLineChars)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapInfoInterface</name>
      <anchorfile>classArMapInfoInterface.html</anchorfile>
      <anchor>ae9bef84cbe069ec2619d9e80504f2059</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapInterface</name>
    <filename>classArMapInterface.html</filename>
    <base>ArHasFileName</base>
    <base>ArMapInfoInterface</base>
    <base>ArMapObjectsInterface</base>
    <base>ArMapScanInterface</base>
    <base>ArMapSupplementInterface</base>
    <member kind="enumvalue">
      <name>MAX_MAP_NAME_LENGTH</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>af7fa23936aff2ed8a39aa0566d1d2773a40732d41ab529094aace100632e2c16b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_MAP_NAME_LENGTH</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>af7fa23936aff2ed8a39aa0566d1d2773a40732d41ab529094aace100632e2c16b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addMapChangedCB</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a4473ac4e92936dab506739e7a20b9810</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addMapChangedCB</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a8f72e43ccdc17ca9ace947b0cd6a3647</anchor>
      <arglist>(ArFunctor *functor, int position=50)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addPostWriteFileCB</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a40d8eea550274935ff957b93f340dc60</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPreMapChangedCB</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a68292e93e05b174ee8f35ee5cd11403b</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addPreMapChangedCB</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a7be484cdd56bc5610073ea7a70824c75</anchor>
      <arglist>(ArFunctor *functor, int position=50)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addPreWriteFileCB</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a7b1e1bc876eba9f442f170449b79f69e</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapInterface</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>afe8e08b6c419a144dc5622b785c584df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>calculateChecksum</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a11d230f4851af9cd23683ec1b425f7e8</anchor>
      <arglist>(unsigned char *md5DigestBuffer, size_t md5DigestBufferLen)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a3545fd896f5bfa3b23c3585483d7aa8e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArMapInterface *</type>
      <name>clone</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>abc68f5bb2b270a3621206c0bb60de750</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>createRealFileName</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a1c7ea2928593dabdb79eaf328f803123</anchor>
      <arglist>(const char *fileName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArArgumentBuilder *</type>
      <name>findMapObjectParams</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a69999157a3713d4ada7d47f6a3087b73</anchor>
      <arglist>(const char *mapObjectName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getBaseDirectory</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a6a75aadc1642ea9f8f6004c09fa94306</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArMapObjectsInterface *</type>
      <name>getChildObjects</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a209d91e860f6c22478b6b91a190a59a0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getFileName</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a4e4b9de7ebaa896d12728e2b16d5eb0f</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getIgnoreCase</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>abd35c2a4363d41c6633fd064a45188bd</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getIgnoreEmptyFileName</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>ae71fec67708492f07fe4cf88fe5bd570</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArMapInfoInterface *</type>
      <name>getInactiveInfo</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>af71351c58a7c772b852002babf282220</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArMapObjectsInterface *</type>
      <name>getInactiveObjects</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a06520aefeb5654a4b4adae7f4b5c0e5a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArLog::LogLevel</type>
      <name>getMapChangedLogLevel</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a55d2dc775f7dfb095f4a97c1c8493f82</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getMapId</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a42438b0cdb01d4f1613b05dcaa8bae60</anchor>
      <arglist>(ArMapId *mapIdOut, bool isInternalCall=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual struct stat</type>
      <name>getReadFileStat</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>ab9736c0a90ec57e51b3415ef787de861</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; ArArgumentBuilder * &gt; *</type>
      <name>getRemainder</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a33d5f7c640ead8c14268379b35d5cbe0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; std::string &gt;</type>
      <name>getScanTypes</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>af1c75dac69881ba57ffd7826dd600a32</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getTempDirectory</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a15ff7bcde5b7655300e8e35f59eaab7a</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLoadingDataStarted</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a660969c77405c2795a47ce58f0625977</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLoadingLinesAndDataStarted</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a6d2628ce711c2d6774746586932f7913</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>lock</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a2e72e85ff0680d98570b096cf24938ba</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>mapChanged</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a00f12f15367b9c97592b0f45fda2fc2f</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>parseLine</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a7a5270bda8f803df83079940ac6e15e5</anchor>
      <arglist>(char *line)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>parsingComplete</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a7aa64d691b47caab38efa72a90767294</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>readFile</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a9ec33c9ef77c8d6fcd6f68b33d0385d9</anchor>
      <arglist>(const char *fileName, char *errorBuffer=NULL, size_t errorBufferLen=0, unsigned char *md5DigestBuffer=NULL, size_t md5DigestBufferLen=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>refresh</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a412f9906797ed2e34e6d4589033e3d80</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remMapChangedCB</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a65da492e1379f9a9d226b552a2be65d3</anchor>
      <arglist>(ArFunctor *functor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remPostWriteFileCB</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a80f3ea46ca3969d4eaf6253b39c84f5c</anchor>
      <arglist>(ArFunctor *functor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remPreMapChangedCB</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a0563d1953c0795a0ee85ebb2a7c9b13c</anchor>
      <arglist>(ArFunctor *functor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remPreWriteFileCB</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a44fbadba38009509c473ca622a59b8b1</anchor>
      <arglist>(ArFunctor *functor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>set</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a20061ab5be4b9b469a7221ca12fdd9be</anchor>
      <arglist>(ArMapInterface *other)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setBaseDirectory</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a2389288fc4c29e1d380cd961877c2acd</anchor>
      <arglist>(const char *baseDirectory)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setIgnoreCase</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a60ca7573c074769719b00c3c96ec17c4</anchor>
      <arglist>(bool ignoreCase=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setIgnoreEmptyFileName</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>aa65367c7823f46fdae42d53f201699a5</anchor>
      <arglist>(bool ignore)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMapChangedLogLevel</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a5774ac76e0e7dc6b47a5125bc00c2b51</anchor>
      <arglist>(ArLog::LogLevel level)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setMapObjectParams</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>acac90c5ce18a25ecd6d08ce8116a27aa</anchor>
      <arglist>(const char *mapObjectName, ArArgumentBuilder *params, ArMapChangeDetails *changeDetails=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setQuiet</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>ac3226d90f6e888de43fa4ab4e86c1a52</anchor>
      <arglist>(bool isQuiet)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setScanTypes</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>ac519568cc0d2e3a87d4e7feabf04a7aa</anchor>
      <arglist>(const std::list&lt; std::string &gt; &amp;scanTypeList)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSourceFileName</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>adc9644192ab38bd3b8a019d6e910ef42</anchor>
      <arglist>(const char *sourceName, const char *fileName, bool isInternalCall=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setTempDirectory</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a3dbb287b9996bc395755015c6474b01c</anchor>
      <arglist>(const char *tempDirectory)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>tryLock</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a43cd5a39e989e99453e59fad86408897</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>unlock</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a0f53472e8700abcc05a85b9f7a7d6820</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>writeFile</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>ade2aaba8c0a991964c2a623987a589fe</anchor>
      <arglist>(const char *fileName, bool internalCall=false, unsigned char *md5DigestBuffer=NULL, size_t md5DigestBufferLen=0, time_t fileTimestamp=-1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writeObjectsToFunctor</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>abc4e372308bbf06195dea3c0bccc93b8</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, const char *endOfLineChars, bool isOverrideAsSingleScan=false, const char *maxCategory=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writeToFunctor</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a4721211e839289dc8ab24202e07471cc</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, const char *endOfLineChars)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapInterface</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>ab3a168bc2130af13b415979a75e536fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>createRealFileName</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>aadffe2b39f07bbc856355e1b70a08be0</anchor>
      <arglist>(const char *baseDirectory, const char *fileName, bool isIgnoreCase)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>MAP_CATEGORY_2D_COMPOSITE</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a8e0c7cffd95768e5eecb468ca1c116bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>MAP_CATEGORY_2D_EXTENDED</name>
      <anchorfile>classArMapInterface.html</anchorfile>
      <anchor>a0ecb554bd7784500b4495dbc8a64fb71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapObject</name>
    <filename>classArMapObject.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ArgIndex</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a9cf669c28f135e476680b16d0f508037</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapObject</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a04a5dec36b6f4f0f064721d48d677cea</anchor>
      <arglist>(const char *type, ArPose pose, const char *description, const char *iconName, const char *name, bool hasFromTo, ArPose fromPose, ArPose toPose)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapObject</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a92498be3366701daad9697ae7848c4aa</anchor>
      <arglist>(const ArMapObject &amp;mapObject)</arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>findCenter</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a4fe80a4961f0ad2457f81bb7a7d939d1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBaseType</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>aa6620dc2f7392c663bc50d3bc7efc451</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDescription</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>aed1d5394a7230bf2ef0853f9524c0f03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileName</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a47e67c93dafae3cfe4dc3bbc090f60c7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getFromPose</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a5117cb8110b7c42583cf488a99cb36f8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFromToRotation</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a747aad8f96a00691ee99aedca9789a68</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArLineSegment</type>
      <name>getFromToSegment</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a12337274b83132eb3ec733c46e674cdd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; ArLineSegment &gt;</type>
      <name>getFromToSegments</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a813ffccdb0715efe5688c6bbe227761b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getIconName</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>ac963d727fdff35027f9e2e8109c4fe1b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getId</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>aab2f33fef559f537cb9348754f349f10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a97e225506e836b3b76962d33d9a0e6ea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getPose</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>ab3a48e0694d6426c8fe1ac3f98a7b324</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ArPose &gt;</type>
      <name>getRegionVertices</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>ab5e9b2d1443c999c47f4e5cb1d0995df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStringRepresentation</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>aaa93ec1a87ea0df3b9ef753dccd8bd48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getToPose</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a63121c59f6e9b36fe72abbe5d6383fb5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getType</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a292d43e1e744d50891a225e67f7aface</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFromTo</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a673578fc0faa0aaa00964ff404c28716</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPointInside</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>aff9eed69985da29cb25be390b821cebf</anchor>
      <arglist>(const ArPose &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a2ed252d7403cc3ec9956e93b8dcfe67b</anchor>
      <arglist>(const char *intro=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>aaac20b11f5069923449201228c4573a7</anchor>
      <arglist>(const ArMapObject &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>ArMapObject &amp;</type>
      <name>operator=</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>ad96db94d0e8e3a39ea0761540c194999</anchor>
      <arglist>(const ArMapObject &amp;mapObject)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>ad4ef278ce9c035c2759ddb430a6313a2</anchor>
      <arglist>(const char *description)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>toString</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a4a0fe2b2d5f7784cca465f0b64228538</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapObject</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>ace18554350f0c0bc0fdcc9dda571c192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArMapObject *</type>
      <name>createMapObject</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>aead99125fbdae726a76e29b0548b22bc</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myBaseType</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a8b29495e8502d424d17acc37457dcbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myDescription</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a9135e770e3fa0e7571b7ca9558383806</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPose</type>
      <name>myFromPose</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>abe5b2706339eefab4c166c88c17402c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLineSegment</type>
      <name>myFromToSegment</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a5a28e3f9aad377c8729e4240db2052e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArLineSegment &gt;</type>
      <name>myFromToSegments</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>abb31b8180472beb4f4a6705d7d6644b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHasFromTo</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a82cad9f1ae570f23b8bdd0cae6288bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myIconName</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a37b4b8946edf85068b7300f452a42265</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a1555c10eda80c2ec490788227aadbeaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPose</type>
      <name>myPose</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>aa3b2bce84316c7833785674d228a93dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myStringRepresentation</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a374af0727704a595cb8a15d4dbb8fd0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPose</type>
      <name>myToPose</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>a5da63b97d900481df85bbfeda9ce8532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myType</name>
      <anchorfile>classArMapObject.html</anchorfile>
      <anchor>af2460d867bdd419f33d18e8776ae8ca3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArMapObjectCompare</name>
    <filename>structArMapObjectCompare.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structArMapObjectCompare.html</anchorfile>
      <anchor>aec4e5d18bd025816fa9605709c34976d</anchor>
      <arglist>(const ArMapObject *obj1, const ArMapObject *obj2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapObjects</name>
    <filename>classArMapObjects.html</filename>
    <base>ArMapObjectsInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addToFileParser</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>a0340597c45ad5c4c511d1be477fe85b0</anchor>
      <arglist>(ArFileParser *fileParser)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapObjects</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>a878c7712064ee29d268ce2481344007b</anchor>
      <arglist>(const char *keyword=&quot;Cairn:&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapObjects</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>ad72472f5444495bcaaa20ce216cad148</anchor>
      <arglist>(const ArMapObjects &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>a85d6abab824873750665c3e82dcd02d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; ArMapObject * &gt;</type>
      <name>findMapObjectsOfType</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>a84b7aed50c2d050dc1c636cfd34effef</anchor>
      <arglist>(const char *type, bool isIncludeWithHeading=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTime</type>
      <name>getTimeChanged</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>a696ff1e94fed7640cb045c2ea22505d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArMapObjects &amp;</type>
      <name>operator=</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>a9e032b53404cf288313ed13e225a8f91</anchor>
      <arglist>(const ArMapObjects &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>remFromFileParser</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>a6fd910c8f664b8d4583e586c39fb2a01</anchor>
      <arglist>(ArFileParser *fileParser)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapObjects</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>ae533eb7f008f857d7d3fa052977eb984</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>DEFAULT_KEYWORD</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>aa3c78ee64607a72009bbc73f728e4a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createMultiSet</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>add7f3dc824a1ab3447a1ba0f5daf34c4</anchor>
      <arglist>(ArMapFileLineSet *multiSet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logMultiSet</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>a37b9c44c4a5b1426775c041ecf3e825d</anchor>
      <arglist>(const char *prefix, ArMapFileLineSet *multiSet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortMapObjects</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>a6fd3099dd7480714866291d37a00a7d0</anchor>
      <arglist>(std::list&lt; ArMapObject * &gt; *mapObjects)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsSortedObjects</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>af2a607d976af304b865bd1a1d4a1580e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myKeyword</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>a9134901b558d0c6826fda8385fb07435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapObjects, ArArgumentBuilder * &gt;</type>
      <name>myMapObjectCB</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>abf500bcc87bae4afe246a00ced069c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArMapObject * &gt;</type>
      <name>myMapObjects</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>af0067ffc5b7b2d3fd39751b401621bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myTimeChanged</name>
      <anchorfile>classArMapObjects.html</anchorfile>
      <anchor>a704ddf2e126d990f4881c373b199d4e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapObjectsInterface</name>
    <filename>classArMapObjectsInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>ArMapObjectsInterface</name>
      <anchorfile>classArMapObjectsInterface.html</anchorfile>
      <anchor>a8e28fd911e2ae9e7071d7a1917b9582a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArMapObject *</type>
      <name>findFirstMapObject</name>
      <anchorfile>classArMapObjectsInterface.html</anchorfile>
      <anchor>af7ee907155b224d7a85bdd2886fcff2e</anchor>
      <arglist>(const char *name, const char *type, bool isIncludeWithHeading=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArMapObject *</type>
      <name>findMapObject</name>
      <anchorfile>classArMapObjectsInterface.html</anchorfile>
      <anchor>a0e3b929760b5898064e5d3e25796ffb9</anchor>
      <arglist>(const char *name, const char *type=NULL, bool isIncludeWithHeading=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; ArMapObject * &gt;</type>
      <name>findMapObjectsOfType</name>
      <anchorfile>classArMapObjectsInterface.html</anchorfile>
      <anchor>acdabca2faba0483f9eecb51354b86c92</anchor>
      <arglist>(const char *type, bool isIncludeWithHeading=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; ArMapObject * &gt; *</type>
      <name>getMapObjects</name>
      <anchorfile>classArMapObjectsInterface.html</anchorfile>
      <anchor>a66394898f80b1917b5f96aa4b7a8e37c</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMapObjects</name>
      <anchorfile>classArMapObjectsInterface.html</anchorfile>
      <anchor>ac145d6f5324b7e5a251f32907e957cc5</anchor>
      <arglist>(const std::list&lt; ArMapObject * &gt; *mapObjects, bool isSortedObjects=false, ArMapChangeDetails *changeDetails=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writeObjectListToFunctor</name>
      <anchorfile>classArMapObjectsInterface.html</anchorfile>
      <anchor>a0a6ee2839a69de95728956f3125a2c5b</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, const char *endOfLineChars)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapObjectsInterface</name>
      <anchorfile>classArMapObjectsInterface.html</anchorfile>
      <anchor>ada2086bd9de769074e1a1a49225d73e0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapScan</name>
    <filename>classArMapScan.html</filename>
    <base>ArMapScanInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addExtraToFileParser</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a97ec2a8eb3740989010492a3157af723</anchor>
      <arglist>(ArFileParser *fileParser, bool isAddLineHandler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapScan</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>ac920e694690ea776cea8cf6ebfda7e02</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapScan</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a08adcc49bdbd1b747b96d0193a8f4722</anchor>
      <arglist>(const ArMapScan &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>af05b08c5edf8557d6b8c511a768b6177</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getLinesKeyword</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a8e67529500fad0fd5d8c5129dd0e6a2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getPointsKeyword</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a59225eb27a1c37b2554ae02eb156b223</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getScanType</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a43b5268e67be2935a7686646463ea1c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTime</type>
      <name>getTimeChanged</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a3ff4876fe1a6c9e1dbc2b74e5119a546</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArMapScan &amp;</type>
      <name>operator=</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a01a69839a618d6117e6a57a92e141b4e</anchor>
      <arglist>(const ArMapScan &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>remExtraFromFileParser</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a941441f5b97af6c04d3ee4167cc1ea4d</anchor>
      <arglist>(ArFileParser *fileParser)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>unite</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a8173c887e9ae768fb081eb9c6e5fd0a6</anchor>
      <arglist>(ArMapScan *other, bool isIncludeDataPointsAndLines=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeLinesToFunctor</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a3d030e8d7b5fc05db6bb96a1ebaef275</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, const char *endOfLineChars, const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writePointsToFunctor</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a17494ca0b6c3471a8b421ed2e8146015</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, const char *endOfLineChars, const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapScan</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a73250dae953c2a87be2e2296ca636287</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>addHandlerToFileParser</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a07fc69fe0a5d3cbf0a1b672f9dc7b6da</anchor>
      <arglist>(ArFileParser *fileParser, const char *keyword, ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt; *handler)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>getKeywordPrefix</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a1d582d622e424f98430c6683b410292e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>handleDisplayString</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a1b54e13cf841cfabfe96e10ee9df18a9</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>parseNumber</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a51a0c6db286db7b1a814cd0d55694828</anchor>
      <arglist>(char *line, size_t lineLen, size_t *charCountOut, int *numOut) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>parsePose</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>aa3263377d3a571a1bf13682a48d7070a</anchor>
      <arglist>(ArArgumentBuilder *arg, const char *keyword, ArPose *poseOut)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>parseWhitespace</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>accf63bb3c4581f5e623d42e929b26f3a</anchor>
      <arglist>(char *line, size_t lineLen, size_t *charCountOut) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>writeLinesToFunctor</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a00848f20395ce9be80474dbca3fbab03</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, const std::vector&lt; ArLineSegment &gt; &amp;lines, const char *endOfLineChars, const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myDisplayString</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a3e234f86ce05a2c3784e7d999dff12cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myDisplayStringCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>ab30f7a4a4c76a5b2e6c373363efe7a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsSortedLines</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>afd995483a38976e9d51f9bfa4dd1a2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myIsSortedLinesCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a22ed13e79c739240651d39ee67218f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsSortedPoints</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a175c4cf2f0da1de053da4c3a37d7ad8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myIsSortedPointsCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a28b234b4254ab782ddbb602a407cfee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsSummaryScan</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>aeaec113b176115e6cf1a2388c84d1ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myKeywordPrefix</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>ac3ffda8bbf585a1caebb16ab1a3fc8fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myLineCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>addc6935c63baaea5cab3ef2c3e8562b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPose</type>
      <name>myLineMax</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a46fc8a56a41ff0c32c609cb8d094ad5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myLineMaxPosCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>aa9132d681017c124dc92e7e47df5e120</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPose</type>
      <name>myLineMin</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a5c0c25f47d49d39931eded1f505384e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myLineMinPosCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a819144c130d0869d4b6b3fa807060d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ArLineSegment &gt;</type>
      <name>myLines</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a063910b43a3aca639caf06979b2c8fc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLinesKeyword</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>ae043cfb2736d6e71a1c116df2308b5c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLogPrefix</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>aeb116aa1c8cf6ebb077f9a7f1ec0ac18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPose</type>
      <name>myMax</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a4fb9cf89ac1896ac9116e274f1812ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myMaxPosCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>ae85f85edb9ed88e5b19762e350a6a8df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPose</type>
      <name>myMin</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a999be71a44c8b356420d7a85d576ac69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myMinPosCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a6e19b77100b7120f2da0b1d0f881035f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myNumLines</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a27b0bbd85e692de0df01a34c890d8a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myNumLinesCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a1cb8cd80b182fbc2e202aff73c86183b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myNumPoints</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a18118bca9689ce333cded90ee0bc4da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myNumPointsCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>adaedc8e3c275af83596ab92bc2843906</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myPointCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a22da6bfccfa965b71c7a49a6e24067fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ArPose &gt;</type>
      <name>myPoints</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a0f8d6513724102efa4ba22668feda865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myPointsKeyword</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a64ded8247001d9733b4014a4de391865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myResolution</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a681c90b7fb869935615059e2cc5ef131</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</type>
      <name>myResolutionCB</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a3723f1b0267119ce7a79451fa0078b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myScanType</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a85d4d618e8a532fde19e1459e62c8fb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myTimeChanged</name>
      <anchorfile>classArMapScan.html</anchorfile>
      <anchor>a82f2fa1d1c27f33599c6493f0b36bbce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArMapChangeDetails::ArMapScanChangeDetails</name>
    <filename>structArMapChangeDetails_1_1ArMapScanChangeDetails.html</filename>
  </compound>
  <compound kind="class">
    <name>ArMapScanInterface</name>
    <filename>classArMapScanInterface.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>addToFileParser</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>ac2148e6b805f454df92629107524cc6b</anchor>
      <arglist>(ArFileParser *fileParser)=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapScanInterface</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a97ab0fd481e4adbd043a6c565a577216</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArPose</type>
      <name>getLineMaxPose</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>afb1843e08cfcd465ed0e7b81bcb3a080</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArPose</type>
      <name>getLineMinPose</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a73ee1150e0bae55d06c90fe12a448226</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; ArLineSegment &gt; *</type>
      <name>getLines</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>afb236644c2df2f7f1f65c94226a029da</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArPose</type>
      <name>getMaxPose</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>aab1cf68c7c01205c63fc7f64257d8e70</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArPose</type>
      <name>getMinPose</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a30c9b95c5162084dadb8602891254492</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumLines</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a89bc799ecce6710728ef14863fdc97b3</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumPoints</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a891d5c22c516c783e947063298e34494</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; ArPose &gt; *</type>
      <name>getPoints</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a1dcd08b5cfc13ac5dc7d4b165d25bcaf</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getResolution</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a00e165a9f6d1accbf685fdf11bfe072e</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSortedLines</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>ab832d545112db2fe6728a4c832e8dd1f</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSortedPoints</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a96f6ecf236726619b8beca21d93b1d04</anchor>
      <arglist>(const char *scanType=ARMAP_DEFAULT_SCAN_TYPE) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadDataPoint</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>aaf3ec826e7b3180d0ea26071e735fba9</anchor>
      <arglist>(double x, double y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadLineSegment</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>ae19cc5a481b6c73369261a14d7c0c6e1</anchor>
      <arglist>(double x1, double y1, double x2, double y2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>readDataPoint</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>aec0a8ac2dfc18c01f1764e80a0e4588d</anchor>
      <arglist>(char *line)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>readLineSegment</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>aa0ee33dcc7cafeb818b5fc3905be0dc1</anchor>
      <arglist>(char *line)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>remFromFileParser</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a3a5ad36fe57fee02deacff8b7121a9c7</anchor>
      <arglist>(ArFileParser *fileParser)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setLines</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a89b013a50a0bebca595c3cc0d30dccd7</anchor>
      <arglist>(const std::vector&lt; ArLineSegment &gt; *lines, const char *scanType=ARMAP_DEFAULT_SCAN_TYPE, bool isSortedLines=false, ArMapChangeDetails *changeDetails=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPoints</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>ab195302c09f759ed475f20ab9acc9ede</anchor>
      <arglist>(const std::vector&lt; ArPose &gt; *points, const char *scanType=ARMAP_DEFAULT_SCAN_TYPE, bool isSortedPoints=false, ArMapChangeDetails *changeDetails=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setResolution</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>adbff07c05db036ae2135a5686d23b13e</anchor>
      <arglist>(int resolution, const char *scanType=ARMAP_DEFAULT_SCAN_TYPE, ArMapChangeDetails *changeDetails=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writeLinesToFunctor</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a56d0066fd304a1381a5b101317a437ab</anchor>
      <arglist>(ArFunctor2&lt; int, std::vector&lt; ArLineSegment &gt; * &gt; *functor, const char *scanType=ARMAP_DEFAULT_SCAN_TYPE, ArFunctor1&lt; const char * &gt; *keywordFunctor=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writePointsToFunctor</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a5c66d0c8ec8e74a1cae28fb5d26545d2</anchor>
      <arglist>(ArFunctor2&lt; int, std::vector&lt; ArPose &gt; * &gt; *functor, const char *scanType=ARMAP_DEFAULT_SCAN_TYPE, ArFunctor1&lt; const char * &gt; *keywordFunctor=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writeScanToFunctor</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>abb744ca0073a2624cf786710dd03de33</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, const char *endOfLineChars, const char *scanType=ARMAP_DEFAULT_SCAN_TYPE)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapScanInterface</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a31cb8d64d81abe99b086b104157b6cbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isDefaultScanType</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>a3d44443ed74d6fd42d7a63146b2c7c63</anchor>
      <arglist>(const char *scanType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isSummaryScanType</name>
      <anchorfile>classArMapScanInterface.html</anchorfile>
      <anchor>ab1cf557a1fa8c18d71d5de70e8af549c</anchor>
      <arglist>(const char *scanType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapSimple</name>
    <filename>classArMapSimple.html</filename>
    <base>ArMapInterface</base>
    <member kind="function">
      <type></type>
      <name>ArMapSimple</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>a68f06b07d0a6e8afa5a704008e51254c</anchor>
      <arglist>(const char *baseDirectory=&quot;./&quot;, const char *tempDirectory=NULL, const char *overrideMutexName=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapSimple</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>ab8bd2f3df2417e42818db68306eb3e4d</anchor>
      <arglist>(const ArMapSimple &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual struct stat</type>
      <name>getReadFileStat</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>aa4905db6761bbdad452da8e08f1ca871</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadDataPoint</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>a0819d1a5ea6f009622817cfcd0065aad</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>ArMapSimple &amp;</type>
      <name>operator=</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>af0667d167d8caa5327247cc9c8a6e820</anchor>
      <arglist>(const ArMapSimple &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setMapObjectParams</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>a9b3beb8b640bec38f6db16c63fd11232</anchor>
      <arglist>(const char *mapObjectName, ArArgumentBuilder *params, ArMapChangeDetails *changeDetails=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapSimple</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>a93769fbf7a3b9bc08e8ae3808cce4d33</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::list&lt; ArArgumentBuilder * &gt;::iterator</type>
      <name>findMapObjectParamInfo</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>a3062429fe7d030cfca7d104a6c934ca9</anchor>
      <arglist>(const char *mapObjectName, std::list&lt; ArArgumentBuilder * &gt; &amp;cairnInfoList)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>addScansToParser</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>a0b73a8310179f24138bef9bdcb18691c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>createScans</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>a345fc2469a79c45412cffb65453206b1</anchor>
      <arglist>(const std::list&lt; std::string &gt; &amp;scanTypeList)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ArMapScan *</type>
      <name>getScan</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>aeaf857063a0e82b7aec5f3ce612f79b9</anchor>
      <arglist>(const char *scanType) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>handleDataIntro</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>a57947bf24e04ea24770b4749426b1fe3</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>handleMapCategory</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>ad431aa6f27da64f8c59a5aba28bc4601</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>handleSources</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>abae0b896ca7c05f312e8417413932b41</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>remScansFromParser</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>af79fcd26b73f1bdf05281da3148d33ee</anchor>
      <arglist>(bool isRemovePointsAndLinesKeywords=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>a9e5988a75045c514c4193f6021fdf970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArArgumentBuilder * &gt;</type>
      <name>myRemainderList</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>a10a83b0172fed99570bc7c48e5186ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static int</type>
      <name>ourTempFileNumber</name>
      <anchorfile>classArMapSimple.html</anchorfile>
      <anchor>a7cb6f51e68cb335fc6b943d23646d046</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapSupplement</name>
    <filename>classArMapSupplement.html</filename>
    <base>ArMapSupplementInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addToFileParser</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>a53ed1455526134b431c48c42b8fd2c5f</anchor>
      <arglist>(ArFileParser *fileParser)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapSupplement</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>a0b3f2d405e20ab8eeff0bbd930bc8e02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapSupplement</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>adef56ae98f94dc86abe32fad945f25c6</anchor>
      <arglist>(const ArMapSupplement &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>ae0ac91bd659e98e1b8af1495b1b7ba64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getOriginAltitude</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>a5801da979e0f61f17d5f817077c1a565</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArPose</type>
      <name>getOriginLatLong</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>aaac7156d21748dccce2ff802c88b0d62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTime</type>
      <name>getTimeChanged</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>aca0f626143301eabf9d147a75761c4ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasOriginLatLongAlt</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>adcd0cf74a45552d7fd2be3e1589afbca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArMapSupplement &amp;</type>
      <name>operator=</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>afb9a2724b29be3b65a311bd064cc421d</anchor>
      <arglist>(const ArMapSupplement &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>remFromFileParser</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>a255e38a34b02b5e14325937a0872e5a0</anchor>
      <arglist>(ArFileParser *fileParser)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapSupplement</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>a854b7b4c5afa719530da3e82424c1960</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHasOriginLatLongAlt</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>aa3b8e2daf8c0ebc0c704f7a7b62890ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myOriginAltitude</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>a21cca2898a3a48bbf944c2e41566ef09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPose</type>
      <name>myOriginLatLong</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>a3401cb641331cd68890244e02fd9fd45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArMapSupplement, ArArgumentBuilder * &gt;</type>
      <name>myOriginLatLongAltCB</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>a3975db0d155a7fa638d362795164f8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myTimeChanged</name>
      <anchorfile>classArMapSupplement.html</anchorfile>
      <anchor>ab14cd42834454b520761c63983f2a202</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapSupplementInterface</name>
    <filename>classArMapSupplementInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>ArMapSupplementInterface</name>
      <anchorfile>classArMapSupplementInterface.html</anchorfile>
      <anchor>a75e349954bd7cab8ab02cbef2477afbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getOriginAltitude</name>
      <anchorfile>classArMapSupplementInterface.html</anchorfile>
      <anchor>af88e4a2570cad93de78b6ffaea8a79d8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArPose</type>
      <name>getOriginLatLong</name>
      <anchorfile>classArMapSupplementInterface.html</anchorfile>
      <anchor>a40cf90a392ae8ef708c9ef6de2a958d5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasOriginLatLongAlt</name>
      <anchorfile>classArMapSupplementInterface.html</anchorfile>
      <anchor>a8e20fd22020e562a213b1bd572ff6557</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setOriginLatLongAlt</name>
      <anchorfile>classArMapSupplementInterface.html</anchorfile>
      <anchor>af3019f796bc838b1d41a525f710ce9e2</anchor>
      <arglist>(bool hasOriginLatLong, const ArPose &amp;originLatLong, double altitude, ArMapChangeDetails *changeDetails=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writeSupplementToFunctor</name>
      <anchorfile>classArMapSupplementInterface.html</anchorfile>
      <anchor>a718ef19d1c4028465dd45808e9f01427</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, const char *endOfLineChars)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapSupplementInterface</name>
      <anchorfile>classArMapSupplementInterface.html</anchorfile>
      <anchor>ad2a0de4d8b9a9eab364b18e5d1baf05d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMath</name>
    <filename>classArMath.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>addAngle</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga1f04eeb3c55892aef6fc179f48eaba18</anchor>
      <arglist>(double ang1, double ang2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>angleBetween</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga67e1a8742f38e6cfbe48cdb89ab8a740</anchor>
      <arglist>(double angle, double startAngle, double endAngle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>atan2</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gadd5c8cde271a71c44bbfa0b6376ba1ec</anchor>
      <arglist>(double y, double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>cos</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga953ffdd0b569b33cbfd5a8f69cf3c69a</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>degToRad</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga8ba5702dba30a0c26b27b86c91550a95</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>distanceBetween</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga039288e2f8735206972f51b99ac9f281</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>epsilon</name>
      <anchorfile>classArMath.html</anchorfile>
      <anchor>a97bcee20d8fdb394518c14c9305e6321</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>fabs</name>
      <anchorfile>classArMath.html</anchorfile>
      <anchor>a82f8be1c5071b6c35106200c18ca7907</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>fixAngle</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga56e81d05c4a713bcc04b0c620b787d50</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>getRandMax</name>
      <anchorfile>classArMath.html</anchorfile>
      <anchor>a9da14fe185f50575ae2a73bce973b76c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNan</name>
      <anchorfile>classArMath.html</anchorfile>
      <anchor>aa6e3fa90a83fef0e18968fa4a9d08f0b</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>log2</name>
      <anchorfile>classArMath.html</anchorfile>
      <anchor>a583fedfac988a59c6abeed473b7db7a8</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>pointRotate</name>
      <anchorfile>classArMath.html</anchorfile>
      <anchor>a659ef1482342a40b844e1a3afa1d3388</anchor>
      <arglist>(double *x, double *y, double th)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>radToDeg</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga6301ec48137480318f9c2c8e06ab3b09</anchor>
      <arglist>(double rad)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>random</name>
      <anchorfile>classArMath.html</anchorfile>
      <anchor>aa6e0fe8a0dc83eab361e795105f44909</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>randomInRange</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga4ef94ed579aafcf73419b20ecc7a7138</anchor>
      <arglist>(long m, long n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>roundInt</name>
      <anchorfile>classArMath.html</anchorfile>
      <anchor>a5cc85672a327b96f1668aaf8efc58c7a</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>roundShort</name>
      <anchorfile>classArMath.html</anchorfile>
      <anchor>ae00541ce402737e1edfbb1c6f81169d1</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>sin</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaeb05754b7747988dd97a961eaded6830</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>squaredDistanceBetween</name>
      <anchorfile>classArMath.html</anchorfile>
      <anchor>a906b3be38482624e6501b617b43b4a6a</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>subAngle</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaaddbe148df227cf5f85aff738379adbc</anchor>
      <arglist>(double ang1, double ang2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>tan</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaad297269fc57d48d6ee91e64f2917610</anchor>
      <arglist>(double angle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMD5Calculator</name>
    <filename>classArMD5Calculator.html</filename>
    <member kind="enumvalue">
      <name>DIGEST_LENGTH</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>a16841a56222cfaf5723162c1d86a8b3ba1c49adf9388dec84457b4f47ec6a0cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPLAY_LENGTH</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>a16841a56222cfaf5723162c1d86a8b3bac98025b3fc272549daee5ddae9891b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIGEST_LENGTH</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>a16841a56222cfaf5723162c1d86a8b3ba1c49adf9388dec84457b4f47ec6a0cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPLAY_LENGTH</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>a16841a56222cfaf5723162c1d86a8b3bac98025b3fc272549daee5ddae9891b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>a2a324c364297833ecac7753b560b40bd</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMD5Calculator</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>ad90a558420ceff563300e34105ec079d</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *secondFunctor=NULL)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char *</type>
      <name>getDigest</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>aef4103c21641a51a33e73eca8c777bca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor1&lt; const char * &gt; *</type>
      <name>getFunctor</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>ab2305b6b6eb70bd19038d4a9e573d709</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor1&lt; const char * &gt; *</type>
      <name>getSecondFunctor</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>aeaed713440b44b3390261ca1f3ff05f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>a64f94e252440188ae8a5645b7253b6c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSecondFunctor</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>a74700595af320f4e13bb445d8173ac1f</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *secondFunctor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArMD5Calculator</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>a458484fc2b7bb2059e6c85de4d5de8c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>calculateChecksum</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>a116c11f846d8fdf055aa202d388dec8f</anchor>
      <arglist>(const char *fileName, unsigned char *md5DigestBuffer, size_t md5DigestBufferLen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>toDisplay</name>
      <anchorfile>classArMD5Calculator.html</anchorfile>
      <anchor>abf82e1535ba09d30f0696792c6f9e43b</anchor>
      <arglist>(const unsigned char *digestBuf, size_t digestLength, char *displayBuf, size_t displayLength)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMode</name>
    <filename>classArMode.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>activate</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>a334c6d1127cea9c71d3231241eda0750</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMode</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>abd776be7a002621eb93dd285c6cdeeaf</anchor>
      <arglist>(ArRobot *robot, const char *name, char key, char key2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>baseActivate</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>a9e18e55584317466f4d1984220334683</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>baseDeactivate</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>a8e7f6b63efc4fd98d908f8c7ba925e30</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deactivate</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>a8bd934247de3b8912e403ae33a86f2bf</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getKey</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>a3a26b93738b421457a55c1e349d2a459</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getKey2</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>add12b8d05da6cafefaf3d99f97d3b376</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>aa687cea3c910201fa3284c25590b25ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>help</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>ab4299b6d4982292b29de39d29c5d7f81</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userTask</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>aa612d33698ee01dbf3801d3fabae6af8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMode</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>a3234fc6c9f57782161b509bcbfec8267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>baseHelp</name>
      <anchorfile>classArMode.html</anchorfile>
      <anchor>ad4197cc69eb0bba23cdf98692cfbf22f</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModeActs</name>
    <filename>classArModeActs.html</filename>
    <base>ArMode</base>
    <member kind="function">
      <type></type>
      <name>ArModeActs</name>
      <anchorfile>classArModeActs.html</anchorfile>
      <anchor>acac23199fb75ccbaffe4c1ed4a80a2ee</anchor>
      <arglist>(ArRobot *robot, const char *name, char key, char key2, ArACTS_1_2 *acts=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArModeActs</name>
      <anchorfile>classArModeActs.html</anchorfile>
      <anchor>aceec4f810a8fc6be48bda177f40c0130</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModeCamera</name>
    <filename>classArModeCamera.html</filename>
    <base>ArMode</base>
    <member kind="function">
      <type></type>
      <name>ArModeCamera</name>
      <anchorfile>classArModeCamera.html</anchorfile>
      <anchor>a54182bfd93424b84a04ecfe54f5d66ef</anchor>
      <arglist>(ArRobot *robot, const char *name, char key, char key2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArModeCamera</name>
      <anchorfile>classArModeCamera.html</anchorfile>
      <anchor>a2c52e2b0fa8801c61c7012a9fe089b21</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModeConfig</name>
    <filename>classArModeConfig.html</filename>
    <base>ArMode</base>
    <member kind="function">
      <type></type>
      <name>ArModeConfig</name>
      <anchorfile>classArModeConfig.html</anchorfile>
      <anchor>a417a673c5009a41f6aed31b5b404d287</anchor>
      <arglist>(ArRobot *robot, const char *name, char key, char key2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModeGripper</name>
    <filename>classArModeGripper.html</filename>
    <base>ArMode</base>
    <member kind="function">
      <type></type>
      <name>ArModeGripper</name>
      <anchorfile>classArModeGripper.html</anchorfile>
      <anchor>a59ed4dccc77d2e9dab21f25f1e3ae39c</anchor>
      <arglist>(ArRobot *robot, const char *name, char key, char key2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArModeGripper</name>
      <anchorfile>classArModeGripper.html</anchorfile>
      <anchor>ad8da6623a9da2e832cca0c7ffad3b6f1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModeRobotStatus</name>
    <filename>classArModeRobotStatus.html</filename>
    <base>ArMode</base>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>byte_as_bitstring</name>
      <anchorfile>classArModeRobotStatus.html</anchorfile>
      <anchor>a21c762353f220b80ce2153ceba7a5dd0</anchor>
      <arglist>(unsigned char byte)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>int16_as_bitstring</name>
      <anchorfile>classArModeRobotStatus.html</anchorfile>
      <anchor>a3160ba8f777eb33e422fde4c2fa18bc4</anchor>
      <arglist>(ArTypes::Byte2 n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>int32_as_bitstring</name>
      <anchorfile>classArModeRobotStatus.html</anchorfile>
      <anchor>ac2d14ce41de5fb6208c0aafd77c34743</anchor>
      <arglist>(ArTypes::Byte4 n)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModeSonar</name>
    <filename>classArModeSonar.html</filename>
    <base>ArMode</base>
    <member kind="function">
      <type></type>
      <name>ArModeSonar</name>
      <anchorfile>classArModeSonar.html</anchorfile>
      <anchor>a8b9424f136116a328657e78ebebb9cd5</anchor>
      <arglist>(ArRobot *robot, const char *name, char key, char key2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArModeSonar</name>
      <anchorfile>classArModeSonar.html</anchorfile>
      <anchor>a2b0bc9b6af9b9e31c31ffc8adda14860</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModeTCM2</name>
    <filename>classArModeTCM2.html</filename>
    <base>ArMode</base>
    <member kind="function">
      <type></type>
      <name>ArModeTCM2</name>
      <anchorfile>classArModeTCM2.html</anchorfile>
      <anchor>a30f5d9d27d2b106f3f7b7f01a3a774c4</anchor>
      <arglist>(ArRobot *robot, const char *name, char key, char key2, ArTCM2 *tcm2=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArModeTCM2</name>
      <anchorfile>classArModeTCM2.html</anchorfile>
      <anchor>a8dd5542ba7a35aeac363368d7f3b3115</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModeTeleop</name>
    <filename>classArModeTeleop.html</filename>
    <base>ArMode</base>
    <member kind="function">
      <type></type>
      <name>ArModeTeleop</name>
      <anchorfile>classArModeTeleop.html</anchorfile>
      <anchor>a58cb40ecd1b185b299374b0cc02b3217</anchor>
      <arglist>(ArRobot *robot, const char *name, char key, char key2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArModeTeleop</name>
      <anchorfile>classArModeTeleop.html</anchorfile>
      <anchor>a3f5133faf2dcc60b5aedd07ab0b1fb49</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModeUnguardedTeleop</name>
    <filename>classArModeUnguardedTeleop.html</filename>
    <base>ArMode</base>
    <member kind="function">
      <type></type>
      <name>ArModeUnguardedTeleop</name>
      <anchorfile>classArModeUnguardedTeleop.html</anchorfile>
      <anchor>a59aad3992b7b39abe57a4cc0a7bafa47</anchor>
      <arglist>(ArRobot *robot, const char *name, char key, char key2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArModeUnguardedTeleop</name>
      <anchorfile>classArModeUnguardedTeleop.html</anchorfile>
      <anchor>a4a76b87872bd43d4e837f65b843878be</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModeWander</name>
    <filename>classArModeWander.html</filename>
    <base>ArMode</base>
    <member kind="function">
      <type></type>
      <name>ArModeWander</name>
      <anchorfile>classArModeWander.html</anchorfile>
      <anchor>ac39e3d821756d4089e8900d91b4cfdac</anchor>
      <arglist>(ArRobot *robot, const char *name, char key, char key2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArModeWander</name>
      <anchorfile>classArModeWander.html</anchorfile>
      <anchor>a2510e690fd30487b81b3751253700a13</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModule</name>
    <filename>classArModule.html</filename>
    <member kind="function">
      <type></type>
      <name>ArModule</name>
      <anchorfile>classArModule.html</anchorfile>
      <anchor>a11d2b4a25b1ea529a75dedd5c9aab74b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>exit</name>
      <anchorfile>classArModule.html</anchorfile>
      <anchor>a6556f5f806fbbd4f25b0c6f0c2997984</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>ArRobot *</type>
      <name>getRobot</name>
      <anchorfile>classArModule.html</anchorfile>
      <anchor>a548cc99c70edc3f7406fc938d3388e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>init</name>
      <anchorfile>classArModule.html</anchorfile>
      <anchor>a6774bb941d02907c8e4187011a9f3f8d</anchor>
      <arglist>(ArRobot *robot, void *argument=NULL)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRobot</name>
      <anchorfile>classArModule.html</anchorfile>
      <anchor>abd953e39d1b2f40dd8a1a3eaee96c29e</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArModule</name>
      <anchorfile>classArModule.html</anchorfile>
      <anchor>afd2757f2cfab1587e56ef78015569359</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArModule.html</anchorfile>
      <anchor>a307f8ec063fbb0cb9e7ec1ed21d12422</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArModuleLoader</name>
    <filename>classArModuleLoader.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_SUCCESS</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4a936b7a8cc20cc46acdd970cf7efab64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_ALREADY_LOADED</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4aee4f0363dc85d4044d6e025ff9b201bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED_OPEN</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4a9e0552cd4f9a42608051e62a98499a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_INVALID</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4a2b4cfa6d997517ad6b77ca6a7883cd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_INIT_FAILED</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4a40e62c3cdbbadeb5b2c0efe69b8648ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_EXIT_FAILED</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4ab68f87a06fe705a7171a2248999bc1d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_NOT_FOUND</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4a748dad391df18837484389a9eee39eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_ALREADY_LOADED</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4aee4f0363dc85d4044d6e025ff9b201bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_EXIT_FAILED</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4ab68f87a06fe705a7171a2248999bc1d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED_OPEN</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4a9e0552cd4f9a42608051e62a98499a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_INIT_FAILED</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4a40e62c3cdbbadeb5b2c0efe69b8648ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_INVALID</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4a2b4cfa6d997517ad6b77ca6a7883cd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_NOT_FOUND</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4a748dad391df18837484389a9eee39eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_SUCCESS</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a98c3c3b3fa04816d2943582e373b63e4a936b7a8cc20cc46acdd970cf7efab64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Status</type>
      <name>close</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a07f8693efb31b83b1203690ff2e632b3</anchor>
      <arglist>(const char *modName, bool quiet=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>closeAll</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>adcd0da65257d336589ed50ab6b9ebfee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Status</type>
      <name>load</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>a63d2b1e8a16c3ebc8e34482f72499b23</anchor>
      <arglist>(const char *modName, ArRobot *robot, void *modArgument=NULL, bool quiet=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Status</type>
      <name>reload</name>
      <anchorfile>classArModuleLoader.html</anchorfile>
      <anchor>aa43852d5d5ebbecebf8595a5a32015c2</anchor>
      <arglist>(const char *modName, ArRobot *robot, void *modArgument=NULL, bool quiet=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMTXIO</name>
    <filename>classArMTXIO.html</filename>
    <member kind="function">
      <type></type>
      <name>ArMTXIO</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a3d6e28d7bfca2e817e1341a98952ca45</anchor>
      <arglist>(const char *dev=&quot;/dev/mtx&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closeIO</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a815ca10341bb99b6a64a45c71839fed8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAnalogValue</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a558b9180960e48586d589c8cc69fbb78</anchor>
      <arglist>(int port, double *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAnalogValue</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a117e5759e083f18e438115cb28b5ab71</anchor>
      <arglist>(double *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAnalogValueRaw</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a7431997322b2fd41f5e922c83534d9e7</anchor>
      <arglist>(int port, int *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBumperInput</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a8b2a36a8cdb1adad076a37061ddec1dc</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getCompatibilityCode</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>add40b94926e0a977826bd5242b1ad684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalInputBit</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>ab012a068f62533b648897414ce1c49a0</anchor>
      <arglist>(int bank, int bit)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getFirmwareRevision</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a1dbe6aa70f5f7c788c494a2c2bf0def6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getFirmwareVersion</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a9d621fa024c4fa0dfa9604f94ab9f084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getFPGAType</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a6c2f565d8ddf71d8608a32832829c80b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLIDARSafety</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a512843991010de8b58b553a983a51f4e</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLightPole</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a7310a80431e27afe2114b4d15a8bae32</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getMotionPowerStatus</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a95e8e3d814729007a0f41c379e76bc98</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPowerStatus1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>afd5c97ef1e103f1f53616c8779a8c7f4</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPowerStatus2</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>ae975d74a9d5540af32ffe7a4774c5d18</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAnalogSupported</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a04b364734fc191d615b3fcbd855542c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a77e058904a383074449322d3dcb2e6a3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lock</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a2860f600f2d9d64540e8371b32928311</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDigitalOutputBit</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>ab430cbe540ece2e0a85a486340eeb598</anchor>
      <arglist>(int bank, int bit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setLightPole</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>af6abc725e5b3af4474653551617ce007</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPowerOutput</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a6796234c0c4f46eb8ff0c5f941922084</anchor>
      <arglist>(int bank, int bit, bool on)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tryLock</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>afb1bde6630ed9ed8a1b78473fc476d07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unlock</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a30f799f1e10d8120ce2461cb49505941</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMTXIO</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>adeb605ebc6943a354885575328179577</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Direction</type>
      <name>getDigitalBankDirection</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a5dc3faa57345015472214ed7b0445679</anchor>
      <arglist>(int bank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDigitalBankOutputs</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a2542706e9f34cd5e1896a11a75a79492</anchor>
      <arglist>(int bank, unsigned char val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalBankInputs</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>aa4892b3cc96b9ff1aed50c5d63600c17</anchor>
      <arglist>(int bank, unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalBankOutputs</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a22b9960822ec8e1556d192f602ec6daf</anchor>
      <arglist>(int bank, unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPeripheralPowerBankOutputs</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>add1dd92e5d96c98492eea5767d22b677</anchor>
      <arglist>(int bank, unsigned char val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalIOInputMon1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>ac47bff0a034ae88b148c47b2efe88812</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalIOInputMon2</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a2521d19b43ce084c8a94e06bad46e7d2</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSemaphore1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a628c6551e20d9d7f87024b84ad1d7c0f</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getESTOPStatus1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a5144dad1b3d3b21467c171416d22e0b0</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compareESTOPStatus4HighNibbleAgainst</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a8882dbf9857d8dcd0f5dccce78764635</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalOutputControl1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a607d7a55d0e1b2d1bfe95951df137d25</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPeripheralPower1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a27a9234707bc2286fb4485fcd977e32c</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPeripheralPower1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>adf8d51631b53ac1af842620698af1bfa</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPeripheralPower2</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a9c3d6ee6c2e10314c6c9cef73bb3c75c</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPeripheralPower2</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a4b258603eb05b7304b3011e10aaf0b43</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPeripheralPower3</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a89b356e28785c2578ce31f3073b9ec01</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPeripheralPower3</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>abf62ca70ab5ba2bf0ceab74b9d68d7eb</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLIDARControl</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a4c88f07800f423817ecf198b1f53c990</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAnalogIOBlock1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a2c7ba12aebeaed26e35df8f1459b0c3a</anchor>
      <arglist>(int analog, unsigned short *val)</arglist>
    </member>
    <member kind="function">
      <type>Direction</type>
      <name>getDigitalBankDirection</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a5dc3faa57345015472214ed7b0445679</anchor>
      <arglist>(int bank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDigitalBankOutputs</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a2542706e9f34cd5e1896a11a75a79492</anchor>
      <arglist>(int bank, unsigned char val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalBankInputs</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>aa4892b3cc96b9ff1aed50c5d63600c17</anchor>
      <arglist>(int bank, unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalBankOutputs</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a22b9960822ec8e1556d192f602ec6daf</anchor>
      <arglist>(int bank, unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPeripheralPowerBankOutputs</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>add1dd92e5d96c98492eea5767d22b677</anchor>
      <arglist>(int bank, unsigned char val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalIOInputMon1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>ac47bff0a034ae88b148c47b2efe88812</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalIOInputMon2</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a2521d19b43ce084c8a94e06bad46e7d2</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSemaphore1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a628c6551e20d9d7f87024b84ad1d7c0f</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getESTOPStatus1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a5144dad1b3d3b21467c171416d22e0b0</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compareESTOPStatus4HighNibbleAgainst</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a8882dbf9857d8dcd0f5dccce78764635</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalOutputControl1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a607d7a55d0e1b2d1bfe95951df137d25</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPeripheralPower1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a27a9234707bc2286fb4485fcd977e32c</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPeripheralPower1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>adf8d51631b53ac1af842620698af1bfa</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPeripheralPower2</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a9c3d6ee6c2e10314c6c9cef73bb3c75c</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPeripheralPower2</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a4b258603eb05b7304b3011e10aaf0b43</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPeripheralPower3</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a89b356e28785c2578ce31f3073b9ec01</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPeripheralPower3</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>abf62ca70ab5ba2bf0ceab74b9d68d7eb</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLIDARControl</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a4c88f07800f423817ecf198b1f53c990</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAnalogIOBlock1</name>
      <anchorfile>classArMTXIO.html</anchorfile>
      <anchor>a2c7ba12aebeaed26e35df8f1459b0c3a</anchor>
      <arglist>(int analog, unsigned short *val)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMutex</name>
    <filename>classArMutex.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a5b6ab50205f1004c939f3946cfca3c62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED_INIT</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a5b6ab50205f1004c939f3946cfca3c62a410e62490f5c6ca8e320d60d1a25081b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a5b6ab50205f1004c939f3946cfca3c62afef90eab73ec7c605c7d2093572db8ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_ALREADY_LOCKED</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a5b6ab50205f1004c939f3946cfca3c62a5a52964b5d55e36a0d170a49a8384961</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_ALREADY_LOCKED</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a5b6ab50205f1004c939f3946cfca3c62a5a52964b5d55e36a0d170a49a8384961</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a5b6ab50205f1004c939f3946cfca3c62afef90eab73ec7c605c7d2093572db8ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED_INIT</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a5b6ab50205f1004c939f3946cfca3c62a410e62490f5c6ca8e320d60d1a25081b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMutex</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a69c6e7a984d23363faabf5969a0aa51b</anchor>
      <arglist>(bool recursive=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMutex</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a3eb0fbf29060b36c2c61d590104fa8f3</anchor>
      <arglist>(const ArMutex &amp;mutex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getError</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>ab6c0c5262a57b1cad42da3ed161dcd74</anchor>
      <arglist>(int messageNumber) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MutexType &amp;</type>
      <name>getMutex</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a906a64080c402fc53e6502d4163ed34d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lock</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a7b6aee74872c19fb8829d96dc3e52f34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLog</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a98c8e884ea991c9eead1359ac4c915bb</anchor>
      <arglist>(bool log)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogName</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a00069ede1325b6f9f500ef2636858262</anchor>
      <arglist>(const char *logName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogNameVar</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a7211feb3bf6a740a857ca6e338229f1b</anchor>
      <arglist>(const char *logName,...)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tryLock</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a76ff7a4aa451cc9c2b08dda0ae77d823</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>unlock</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>afb51b5514a9456f23441e479fe58fb46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMutex</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a0993ae31527043d9c9c7fa75b6529080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getLockWarningTime</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a427415d8a47d36abee174f8504c2ce67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getUnlockWarningTime</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>a97bab3f08a097cc206169deec0a96bb7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setLockWarningTime</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>ad0df3cd5e0d03c21975d0380585596d1</anchor>
      <arglist>(double lockWarningSeconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setUnlockWarningTime</name>
      <anchorfile>classArMutex.html</anchorfile>
      <anchor>af9459634b10d103c933e058ce73f6874</anchor>
      <arglist>(double unlockWarningSeconds)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArNetServer</name>
    <filename>classArNetServer.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>addCommand</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>afb0b05acf65940aa9901180c3d30d90f</anchor>
      <arglist>(const char *command, ArFunctor3&lt; char **, int, ArSocket * &gt; *functor, const char *help)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArNetServer</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>adb2596fe97147dc3a97ba7456b832182</anchor>
      <arglist>(bool addAriaExitCB=true, bool doNotAddShutdownServer=false, const char *name=&quot;ArNetServer&quot;, ArNetServer *childServer=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a585cbb215a87b295fe779b5a3f51a49d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtraString</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>ae350d8c6fbfaf5eb56119a180052f90c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLoggingDataReceived</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a8898066cda1bfcd97f3a64932f8fc854</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLoggingDataSent</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a085deea8c6bc035b2662e71a64660ac8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a9bbaffbed3c5c8b754fb2dc708f406d0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseWrongEndChars</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a147e7ed93f89d4d8e074ea7d9a56da2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalAddSocketToDeleteList</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a613d3d2cb636c6333eb6c61dd1d44e9d</anchor>
      <arglist>(ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalAddSocketToList</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>abbd859c31cb329d5a7704d535760b78c</anchor>
      <arglist>(ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalEcho</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>acaef493c4dcbadbfe6a7f7489dd91ee0</anchor>
      <arglist>(char **argv, int argc, ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalGreeting</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>ab3333b501d77a8429ab436501245aafa</anchor>
      <arglist>(ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalHelp</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a4efa2b4d5cb77d30818006ceec44d6a9</anchor>
      <arglist>(ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalHelp</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>af2cde94f0d6a9b8988a03b8eeae68302</anchor>
      <arglist>(char **argv, int argc, ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalQuit</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a787480726e054180ff73d882f63003f2</anchor>
      <arglist>(char **argv, int argc, ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalShutdownServer</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a1d419812d0e22c5b5a06554422a63d43</anchor>
      <arglist>(char **argv, int argc, ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a757cde3ca5c10e425b52947a40ec9576</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lock</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>adad67a2984e10158d2f3fc2aa9d76848</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>open</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a2adba95c22d9c26a043607e0d9eca6fb</anchor>
      <arglist>(ArRobot *robot, unsigned int port, const char *password, bool multipleClients=true, const char *openOnIP=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parseCommandOnSocket</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>aae6ec2c5068f345ba6b71eac5feb14b7</anchor>
      <arglist>(ArArgumentBuilder *args, ArSocket *socket, bool allowLog=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remCommand</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>abcd9ebd2b558cee0f7b7cebeb19668c0</anchor>
      <arglist>(const char *command)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runOnce</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a8e9492bc9ae8b1532e03011e905d17ef</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendToAllClients</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>ade210003bbf1e5278c84edf02d6ab8f8</anchor>
      <arglist>(const char *str,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendToAllClientsNextCycle</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a2e6140b7f5a5f0e3bb556656987d2ef9</anchor>
      <arglist>(const char *str,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendToAllClientsNextCyclePlain</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>adbf096ab2679d161088fd89c24ddf8aa</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendToAllClientsNextCyclePlainBool</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a2c166467363d3ff8f27ca5af52d814ae</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendToAllClientsPlain</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a125da31f6f0e4e972ab3b4ed21a3a57c</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendToClient</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a154bcecd778d228733e12d59433b4694</anchor>
      <arglist>(ArSocket *socket, const char *ipString, const char *str,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendToClientPlain</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>aea4701e6336752c33f953e8468387050</anchor>
      <arglist>(ArSocket *socket, const char *ipString, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraString</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a248c52b98027051b9dc704eb5a7394e1</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoggingDataReceived</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a7a2b02fa6a8d241d641d1a85a4a9633b</anchor>
      <arglist>(bool loggingData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoggingDataSent</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a6f7a8a45e2abcd8a1e15be1840242f2c</anchor>
      <arglist>(bool loggingData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseWrongEndChars</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>ab0191d3877009e3f6008d773078f13e9</anchor>
      <arglist>(bool useWrongEndChars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>squelchNormal</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a72ef70e49298ec21d93790d439ed6508</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tryLock</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>ac8ce3b6acefffe6f45aaa657c77d83d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unlock</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a33d9ec5daab02a5f1b3ef29205c07047</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArNetServer</name>
      <anchorfile>classArNetServer.html</anchorfile>
      <anchor>a616c4ccb80e620ff9147fbddaff9c5eb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArNMEAParser</name>
    <filename>classArNMEAParser.html</filename>
    <class kind="struct">ArNMEAParser::Message</class>
    <member kind="enumvalue">
      <name>ParseFinished</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>a0744dbcce314aac3cf0d8387ac2bae28a15b7b1736ed0433731f8525c363f04da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseError</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>a0744dbcce314aac3cf0d8387ac2bae28a7420adb873f17180380687ff37d95b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseData</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>a0744dbcce314aac3cf0d8387ac2bae28a71fc6402dd75c50d6a3d19c47f3c2515</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseUpdated</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>a0744dbcce314aac3cf0d8387ac2bae28acd335e880741f24c2214c2decf8f6569</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ArFunctor1&lt; ArNMEAParser::Message &gt;</type>
      <name>Handler</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>a27614b91ab3c5867ec63aac920085911</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>MessageVector</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>ad1bca7653697d031218526dd174f6cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseData</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>a0744dbcce314aac3cf0d8387ac2bae28a71fc6402dd75c50d6a3d19c47f3c2515</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseError</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>a0744dbcce314aac3cf0d8387ac2bae28a7420adb873f17180380687ff37d95b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseFinished</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>a0744dbcce314aac3cf0d8387ac2bae28a15b7b1736ed0433731f8525c363f04da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseUpdated</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>a0744dbcce314aac3cf0d8387ac2bae28acd335e880741f24c2214c2decf8f6569</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHandler</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>aca42b6a20a0a386a43ec5bb134db1378</anchor>
      <arglist>(const char *messageID, ArNMEAParser::Handler *handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArNMEAParser</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>a6753f888a5d582c31d7711cc681f83e1</anchor>
      <arglist>(const char *name=&quot;NMEA Parser&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreChecksum</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>adaff0c3a09d1bcf634f7172fc0ea3c6d</anchor>
      <arglist>(bool ignore)</arglist>
    </member>
    <member kind="variable">
      <type>enum ArNMEAParser::@19</type>
      <name>ParseFlags</name>
      <anchorfile>classArNMEAParser.html</anchorfile>
      <anchor>aef94d5aad9cf707aca899bb2c948dadf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArNovatelGPS</name>
    <filename>classArNovatelGPS.html</filename>
    <base virtualness="virtual">ArGPS</base>
  </compound>
  <compound kind="class">
    <name>ArNovatelSPAN</name>
    <filename>classArNovatelSPAN.html</filename>
    <base virtualness="virtual">ArNovatelGPS</base>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleGPRMC</name>
      <anchorfile>classArNovatelSPAN.html</anchorfile>
      <anchor>ac34405b487e4326a71b4f6812608ad06</anchor>
      <arglist>(ArNMEAParser::Message msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArP2Arm</name>
    <filename>classArP2Arm.html</filename>
    <member kind="enumvalue">
      <name>ALREADY_CONNECTED</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a5a36990c7bdcc3db9601e545d4a88507</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALREADY_INITED</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a85a1005ca93ede9758c36538dea59a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMM_FAILED</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a4258de5e1fbd8de7ab06f94d5fb883da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COULD_NOT_OPEN_PORT</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a08528a0dec126926b58cb6c09ea1afa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COULD_NOT_SET_UP_PORT</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94aeb8005d5ac6ec1f6843cddd9f010eb6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InfoPacket</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a0fefe90aabf68167d7e5450464b03beba9bce11144f1826391cb4aa568cba886b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_JOINT</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a7dd407a9cf8ca330fa1f1bc5463a589b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_POSITION</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a1a7fb3c689068b5cec3c4710daccb018</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_ARM_FOUND</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a3de7bc4503b701dd32527d740a785df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_CONNECTED</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94ac5788d1174b4a16830bfb20de929d7c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_INITED</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a9fae319150fb8796d9ab1a4feeca4b40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PacketType</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a0fefe90aabf68167d7e5450464b03beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StatusPacket</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a0fefe90aabf68167d7e5450464b03beba95a0a8922a69c4df590759f918df528c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InfoPacket</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a0fefe90aabf68167d7e5450464b03beba9bce11144f1826391cb4aa568cba886b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROBOT_NOT_SETUP</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94ab15664bb39dbd09b045d7783ac97372b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUCCESS</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a2ffcdb24a114a9398e330f1184366035</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALREADY_INITED</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a85a1005ca93ede9758c36538dea59a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_INITED</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a9fae319150fb8796d9ab1a4feeca4b40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROBOT_NOT_SETUP</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94ab15664bb39dbd09b045d7783ac97372b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_ARM_FOUND</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a3de7bc4503b701dd32527d740a785df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMM_FAILED</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a4258de5e1fbd8de7ab06f94d5fb883da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COULD_NOT_OPEN_PORT</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a08528a0dec126926b58cb6c09ea1afa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COULD_NOT_SET_UP_PORT</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94aeb8005d5ac6ec1f6843cddd9f010eb6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALREADY_CONNECTED</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a5a36990c7bdcc3db9601e545d4a88507</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_CONNECTED</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94ac5788d1174b4a16830bfb20de929d7c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_JOINT</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a7dd407a9cf8ca330fa1f1bc5463a589b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_POSITION</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a1a7fb3c689068b5cec3c4710daccb018</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StatusContinuous</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a635bd05c565cd4e3b2ae8ca6358c22afa7006376e59275c2ec3e16c64c6588146</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StatusOff</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a635bd05c565cd4e3b2ae8ca6358c22afa11db582c277bbf10d38bfca2117341c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StatusPacket</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a0fefe90aabf68167d7e5450464b03beba95a0a8922a69c4df590759f918df528c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StatusSingle</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a635bd05c565cd4e3b2ae8ca6358c22afa2a201348300a434a162245436e17b70c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StatusType</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a635bd05c565cd4e3b2ae8ca6358c22af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StatusOff</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a635bd05c565cd4e3b2ae8ca6358c22afa11db582c277bbf10d38bfca2117341c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StatusSingle</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a635bd05c565cd4e3b2ae8ca6358c22afa2a201348300a434a162245436e17b70c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StatusContinuous</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a635bd05c565cd4e3b2ae8ca6358c22afa7006376e59275c2ec3e16c64c6588146</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUCCESS</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5a4a41ffa5c5b09876d7c90ce608bd94a2ffcdb24a114a9398e330f1184366035</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArP2Arm</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ac0d88ccd84dbfa1d1a0c83d85880890e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>checkArm</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ab4533fe9bd23a34f2b916a507cf53778</anchor>
      <arglist>(bool waitForResponse=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>convertDegToTicks</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a47ad7c0c84e2ba7cefec7e6bdc58a927</anchor>
      <arglist>(int joint, float pos, unsigned char *ticks)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>convertTicksToDeg</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a907997b9b6ec05f9100fa7c8d3430a83</anchor>
      <arglist>(int joint, unsigned char pos, float *degrees)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getArmVersion</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>aedf666de22a5e674cb39096a8532cbb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual P2ArmJoint *</type>
      <name>getJoint</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a7cb23bc28fc661565c386df8c57e43e0</anchor>
      <arglist>(int joint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getJointPos</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ae7611f41a8624861a573f1e2599de56c</anchor>
      <arglist>(int joint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned char</type>
      <name>getJointPosTicks</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a9a08a0f2a2df1f209c2bfcea64e970c6</anchor>
      <arglist>(int joint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArTime</type>
      <name>getLastStatusTime</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a035f81585cac7927e1d29a76394a9bf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getMoving</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ae802764f1ea7c94bdd234b548ce39367</anchor>
      <arglist>(int joint=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArRobot *</type>
      <name>getRobot</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>afed509b2d80a73cef9bbbb706f9462ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getStatus</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>aaf319ff9a65a79235e49909448b36489</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>home</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a9baa6351a13c11dbde4439f4366e4392</anchor>
      <arglist>(int joint=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>init</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a4a27053618b7aaf5530a827ba43bcd65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGood</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a749446a7c703bfeea81de6517abf59db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPowered</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a8e27206370aa6fb37546f9efb83d6011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>moveStep</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>af10a7f8c9cc211be15040cfe72408664</anchor>
      <arglist>(int joint, float pos, unsigned char vel=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>moveStepTicks</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>aa012950d47cb4c0a776c19dcf5448aaf</anchor>
      <arglist>(int joint, signed char pos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>moveTo</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>af706ed4089acec6c707c70443c6d76d3</anchor>
      <arglist>(int joint, float pos, unsigned char vel=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>moveToTicks</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>af5bd00a6e1a45ed1828dcd850f56a9a0</anchor>
      <arglist>(int joint, unsigned char pos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>moveVel</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ac0aec5f54e1ddf76d5680f95b4dc4c91</anchor>
      <arglist>(int joint, int vel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>park</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a61c1b3d3f500d5beb8b90e37b8865dc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>powerOff</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a7276ace9a656f82c4eec40a0c8df117a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>powerOn</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a918cf76f54441d9404e06ad0a88e72e8</anchor>
      <arglist>(bool doWait=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>requestInfo</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>aaa36ea8aed0996197d5c4db81b11526d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>requestInit</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a26560f0a101a58fdceaac708c795e0f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>requestStatus</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>acbc67ecfa961741eecd892e121a644c1</anchor>
      <arglist>(StatusType status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>setAutoParkTimer</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ac380a74e9ea7d8c82ab6d9e51724010a</anchor>
      <arglist>(int waitSecs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>setGripperParkTimer</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a6080358c6c361ba6a16b040937549534</anchor>
      <arglist>(int waitSecs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPacketCB</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a778ef93c59f3febeecf672fd06907907</anchor>
      <arglist>(ArFunctor1&lt; PacketType &gt; *func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRobot</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ab8c55e24c8f53131dc2038fdee2e2dd2</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStoppedCB</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ae20cc4c064236272a235c9139fff7b43</anchor>
      <arglist>(ArFunctor *func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>stop</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a5c937d7e7933221e20bd341c6d58aff2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>uninit</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>aaaf0a47fa3aaa0d74a26a8fcd608f297</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArP2Arm</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ad9e852a463f3a4640b3ac9b276a04bdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ArmGood</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ac48d3c00dcda6b0c346cf514a5f46a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ArmHoming</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a1f7933080af12540cc5fc72275097e98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ArmInited</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a8d72666aabcd21cebb7c7f132a24f94c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ArmJoint1</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a721ec9ad9fba5ce6f944d599f5ddb742</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ArmJoint2</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a7ac175f75bc05865c057fd9d1d281bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ArmJoint3</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a4e1fb7f2c0d081329929583e5e0c6f16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ArmJoint4</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>aa399de960408af994dc8a3ae0c826cc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ArmJoint5</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ae620435079fc72b374f9c4dc40bf6fcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ArmJoint6</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ab97c670b1b1ad042b138e30ce289931c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ArmPower</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>ad78fa5c42e06c7f02b4ece45e14a15dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>NumJoints</name>
      <anchorfile>classArP2Arm.html</anchorfile>
      <anchor>a6afea03f0ce9cf6c8b13d3422183f37e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArPixelDevice</name>
    <filename>classArPixelDevice.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ArPixelDevice</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>a01761e3235bc82ceccd5caa68ceded56</anchor>
      <arglist>(int x_size, int y_size, double x_fov, double y_fov, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>a607d4a60cad027a8b0bd016dd51aa5a4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>DataObject ***</type>
      <name>getRawSensorData</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>a0d0e15eacef3e8d94a1454414c794903</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>DataObject ***</type>
      <name>getRawSensorXYZ</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>a3f430a587215207de314359d650d3d9a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>DataObject *</type>
      <name>getSensorData</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>ab2b4a1300d1dceaf6f25d2bef4b07662</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>DataObject *</type>
      <name>getSensorXYZ</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>a908923f418bf207e65c1cb5cee53c03a</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getXDimension</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>a71583b3614c46f55dfcb64683816976a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getXFOV</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>afc0daa1c15f80f5e994df18bf138c8d7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getYDimension</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>af87331b4df0116708f9288c6a80384c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getYFOV</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>a5162bcde6c96dca465963a4117ece247</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lockDevice</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>ae715397d1ac30e8e67924727907dd988</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tryLockDevice</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>a84736070112d9b82ee01df1c5c75d733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>unlockDevice</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>a561f0030e2f000e1b818774ce3ec1f42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArPixelDevice</name>
      <anchorfile>classArPixelDevice.html</anchorfile>
      <anchor>abe0807548f94d153ec931e17e0e6be2d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArPose</name>
    <filename>classArPose.html</filename>
    <member kind="function">
      <type></type>
      <name>ArPose</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>afd5123e9270521a2bb9d353281565e09</anchor>
      <arglist>(double x=0, double y=0, double th=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArPose</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>ae193f806419700a13d9db02d2a6ab049</anchor>
      <arglist>(const ArPose &amp;pose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>findAngleTo</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a9355d4ca56f7ab984f00bbb3f56dcd0f</anchor>
      <arglist>(ArPose position) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>findDistanceTo</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a5ea548bafd383910dec1b9cdee41cad3</anchor>
      <arglist>(ArPose position) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPose</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a26758768a144b4ef7d3e7ca59f7fd113</anchor>
      <arglist>(double *x, double *y, double *th=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTh</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a2a1e5ef4f2a111b36287ff45cf9895b0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getThRad</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a057fb7bbecca25017af9e7caf5c26dc4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getX</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>afd85bde3b0320d19d108b172c3f332b1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getY</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a563e9580f307fe832a7269f72bfda8fb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>log</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a706a9c3b1ae5e3df66a6e6493073c9e8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArPose</type>
      <name>operator+</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>adefd225e28ebad4c30178ffc279c6093</anchor>
      <arglist>(const ArPose &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose &amp;</type>
      <name>operator+=</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>aa352adb121089e665f346604fe01ab57</anchor>
      <arglist>(const ArPose &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArPose</type>
      <name>operator-</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a54057b26dcff38639f2a7251736ba699</anchor>
      <arglist>(const ArPose &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose &amp;</type>
      <name>operator-=</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a0d9334b96ffacea76aecb0d9aa0c65a3</anchor>
      <arglist>(const ArPose &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator&lt;</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>ab3c18cf9d6791d844ec5a23e256a7af4</anchor>
      <arglist>(const ArPose &amp;other) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator==</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a7dfa5212cf5562835fb6651f175ea52c</anchor>
      <arglist>(const ArPose &amp;other) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPose</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>abf45dbda5df0ef680162afdb9a39f6c2</anchor>
      <arglist>(double x, double y, double th=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPose</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>acec7743fcf4b015c11633b6a0bbd0f17</anchor>
      <arglist>(ArPose position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTh</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>af41638451fdd15d53a3f3fc2fcda631e</anchor>
      <arglist>(double th)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThRad</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>ab3ea3ce956995647a5c23f36d4a246fd</anchor>
      <arglist>(double th)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a4abf2da7a65b43472c42cf5e93ed55d2</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>acceb46105151ec0c6a0cdb826adfe056</anchor>
      <arglist>(double y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>squaredFindDistanceTo</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a99beeaeecaae3f5f0bc6066c8812587a</anchor>
      <arglist>(ArPose position) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArPose</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a2f5ec367380b7e23b0ff7cb1c663c740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>compareX</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a25c8bc8baff76da79ca4462c80ec9dae</anchor>
      <arglist>(const ArPose &amp;p1, const ArPose &amp;p2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>compareY</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a72c52e7ae4525830b38e685b8ca20436</anchor>
      <arglist>(const ArPose &amp;p1, const ArPose &amp;p2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>distanceBetween</name>
      <anchorfile>classArPose.html</anchorfile>
      <anchor>a3fe09d769df241cfb0910933070d1049</anchor>
      <arglist>(ArPose pose1, ArPose pose2)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArPoseCmpOp</name>
    <filename>structArPoseCmpOp.html</filename>
  </compound>
  <compound kind="class">
    <name>ArPoseUtil</name>
    <filename>classArPoseUtil.html</filename>
    <member kind="function" static="yes">
      <type>static std::list&lt; ArPose &gt;</type>
      <name>findCornersFromRobotBounds</name>
      <anchorfile>classArPoseUtil.html</anchorfile>
      <anchor>add67d82c53a1f30e9553ec46b2b0bd76</anchor>
      <arglist>(double radius, double widthLeft, double widthRight, double lengthFront, double lengthRear, bool fastButUnsafe)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArPoseWithTime</name>
    <filename>classArPoseWithTime.html</filename>
    <base>ArPose</base>
    <member kind="function">
      <type></type>
      <name>ArPoseWithTime</name>
      <anchorfile>classArPoseWithTime.html</anchorfile>
      <anchor>aab16625fc3daa3c5e624b9fe2981d2e1</anchor>
      <arglist>(const ArPose &amp;pose)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArPriority</name>
    <filename>classArPriority.html</filename>
    <member kind="enumvalue">
      <name>PRIORITY_COUNT</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>acc74b52b60079dc4cb152ef856b731f1a483e4a8e36cc2c56efd319aab1335ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADVANCED</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3aac0720db337e04bd060bb028bf638fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASIC</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a5c086f5a650c2c6cd03445e9176ed391</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALIBRATION</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a6a4efa5480210c6a37c55ac88e6a9db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DETAILED</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a05608cb8b09f2e4af9a099b5261820e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPERT</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3afab38f10a1739a94145a575b96f7dd37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACTORY</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a9d107c4a1a48d5c96e8241c41d35ccff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPORTANT</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3af836d71b4aed41066c4e944d58177210</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERMEDIATE</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a25788045d6829d9f40b67d2b7358e1eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_PRIORITY</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a174495be77df7662d7d909b1212e9409</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NORMAL</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a11a1e48113dade987dbbc50383e13210</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Priority</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPORTANT</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3af836d71b4aed41066c4e944d58177210</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASIC</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a5c086f5a650c2c6cd03445e9176ed391</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NORMAL</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a11a1e48113dade987dbbc50383e13210</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERMEDIATE</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a25788045d6829d9f40b67d2b7358e1eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DETAILED</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a05608cb8b09f2e4af9a099b5261820e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIVIAL</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a40f7bd43e779685d15dbfbfc712fd94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADVANCED</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3aac0720db337e04bd060bb028bf638fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPERT</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3afab38f10a1739a94145a575b96f7dd37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACTORY</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a9d107c4a1a48d5c96e8241c41d35ccff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALIBRATION</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a6a4efa5480210c6a37c55ac88e6a9db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_PRIORITY</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a174495be77df7662d7d909b1212e9409</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIORITY_COUNT</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>acc74b52b60079dc4cb152ef856b731f1a483e4a8e36cc2c56efd319aab1335ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIVIAL</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>aee18574a3aae3c790bd3dadc13cff9a3a40f7bd43e779685d15dbfbfc712fd94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Priority</type>
      <name>getPriorityFromName</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>a6f32e8d5d14acdf65f895b127e0154bc</anchor>
      <arglist>(const char *text, bool *ok=NULL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPriorityName</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>af43b3f866c6363fc904c9f23def376d8</anchor>
      <arglist>(Priority priority)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::map&lt; std::string, ArPriority::Priority, ArStrCaseCmpOp &gt;</type>
      <name>ourNameToPriorityMap</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>a95e2d21dcf212852b8a0478eedce0fbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::map&lt; Priority, std::string &gt;</type>
      <name>ourPriorityNames</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>a240a80c164f51df166fb41e83b7f5ed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourStringsInited</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>a6959e3be6df37cb677a207d6e2459f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::string</type>
      <name>ourUnknownPriorityName</name>
      <anchorfile>classArPriority.html</anchorfile>
      <anchor>a3a778eecb67765c36ee7f9face4195fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArPriorityResolver</name>
    <filename>classArPriorityResolver.html</filename>
    <base>ArResolver</base>
    <member kind="function">
      <type></type>
      <name>ArPriorityResolver</name>
      <anchorfile>classArPriorityResolver.html</anchorfile>
      <anchor>a03e0ccd4bf4178ffe4d4c884fe40e45c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionDesired *</type>
      <name>resolve</name>
      <anchorfile>classArPriorityResolver.html</anchorfile>
      <anchor>a821f19d1ea216f0272e710593a3d4e3b</anchor>
      <arglist>(ArResolver::ActionMap *actions, ArRobot *robot, bool logActions=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArPriorityResolver</name>
      <anchorfile>classArPriorityResolver.html</anchorfile>
      <anchor>aff6ec2f4b6d00bd6167e1b267c12bd9f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArPTZ</name>
    <filename>classArPTZ.html</filename>
    <member kind="function">
      <type></type>
      <name>ArPTZ</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a6cf3bdfcadf28cd9f2bbf90d8139ab55</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canGetFOV</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ab4ca5b3e1be2ee119d15f65fe68a5888</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canGetRealPanTilt</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a9dc961e4c30c2bb0416738aeadbe91f5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canGetRealZoom</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a55319bacfbe4957906921e8adc91931d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canPanTiltSlew</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a03c8f1ea4c5b669613a40db7b68d9a3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canSetFocus</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a119236ee8a07d43f7fb0b3fe00e6d9b9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canSetGain</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a32a5b100581efdb0d9c3d014bf1bd01e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSetSpeed</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a47b5b46bcd96a1e353e975823ee699cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canZoom</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a26898283fecc9536d90b819fc751d410</anchor>
      <arglist>(void) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>connectHandler</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>adef045e90f521a77f9bfc2d99e3a95d0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getAuxPort</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a0877c07c65573657b4d24866611802e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ad2e327ae16f4d1acacdbafad884db46c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getFocus</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a13b9d4b3baa22e9b6801d01cc5737075</anchor>
      <arglist>(double focus) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getFOVAtMaxZoom</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ab36cb8cbef420550ab48d68775ed3f83</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getFOVAtMinZoom</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>aa2aaa084407e91a58c762f3576516843</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGain</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>acab19a3e31eba42189b640f594ea94f1</anchor>
      <arglist>(double gain) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getInverted</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a7e0225d1ea1e322e0753f07665d7b34d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxNegPan</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a4dcefee2f9373bc949e9e205fbc7a505</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxNegTilt</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a389a3eb3ea39bd8f3cc706afb6e576d3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxPan</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a470a9501a6b9aa9a984f58dab7481449</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxPanSpeed</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a165f84a26b141ed27ad7273d7e0d4743</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxPosPan</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a1f3c4f0c3f0950c892e605ffec34bc86</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxPosTilt</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>adf6fb70e256999e62aa5c001f4a59596</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxTilt</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a23a54d4c5334f7dfde331e91e389f093</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxTiltSpeed</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>af252b272fbee5828d95b801a2df8575d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getMaxZoom</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>adbe4dd5593dc638005a7c0dfbdd5de37</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinPan</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>af5e9a1c0a7e31c002c40440475997250</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinTilt</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ad3158b7894920926b3cbaf2e89d62d82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getMinZoom</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ae89a0e1f2458e59625c4849944b0c8ca</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPan</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a9d76370937c1cb2170e7a07a0157d949</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArRobot *</type>
      <name>getRobot</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a710d7180edd16a2ce3f86fa258daff68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTilt</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ae9f4ff90958537f6bdc095e9ed12ebe6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getTypeName</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a1b638f8a180e0b66ae52b9b1ef949f42</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getZoom</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a3fa77b2691a7cd7ae9f823ba9271a33a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>haltPanTilt</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a5999b31048e3e9dce664c5dcea6c6469</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>haltZoom</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a6b16aaf1b7dc7c879a4a17eda28f88fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>init</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>adc51dbc6919fc6cde0e04985246c6a61</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>packetHandler</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a5080255e0f228a996b264c2c6e01906f</anchor>
      <arglist>(ArBasePacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>pan</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a284e5582d1b05baa961463c8a8198de3</anchor>
      <arglist>(double degrees)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>panRel</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a961a03bbd153b3361a711ef18c52513e</anchor>
      <arglist>(double degrees)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>panSlew</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a0ed7ad95d451edc2dc38385132daeee6</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>panTilt</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a451b080c77f0b6a1104db1752f48bece</anchor>
      <arglist>(double degreesPan, double degreesTilt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>panTiltRel</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a6036f53a3305e6f0e84025b693057439</anchor>
      <arglist>(double degreesPan, double degreesTilt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArBasePacket *</type>
      <name>readPacket</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>aa8060077b590db3d0f129143798ec953</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a5b4a5e0245ea974434fac47e07b32be8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>robotPacketHandler</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>aaa03afae5d2ce2928d8be9e093cf444a</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sendPacket</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>af54c78e35932bbbdbf3a13b55248ebf3</anchor>
      <arglist>(ArBasePacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sensorInterpHandler</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a2fcdd100e22ead53fbd69b7e619fd14c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setAutoFocus</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a5f4b03e9d9e99581b1000d8258c6a1be</anchor>
      <arglist>(bool af=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setAuxPort</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ac66ea3fad07e4f1a06e6a482059e2c96</anchor>
      <arglist>(int auxPort)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ac2e1b00edab294cdacf1d05d1a75bf5b</anchor>
      <arglist>(ArDeviceConnection *connection, bool driveFromRobotLoop=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setFocus</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>acc46ed669fc193d5eca5c4716d93fb26</anchor>
      <arglist>(double focus) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setGain</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a37c0f3fcea79f9979894d25a339953ac</anchor>
      <arglist>(double gain) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInverted</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>acd0092aeb13d29dc4900818c5d819809</anchor>
      <arglist>(bool inv)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPanSpeed</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a2ca6ce6f3808a6cf2c01f55c4edb975b</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRobot</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a2dd6d9bafa2b26f8ee482be2b49a5783</anchor>
      <arglist>(ArRobot *r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTiltSpeed</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a4ad63f6a50f4be8fc4cbf58e77373301</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>tilt</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a924db75e9b7739125ea6ca9cc1dae9a3</anchor>
      <arglist>(double degrees)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>tiltRel</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a8261c5ce26e3b38fec76268508529d92</anchor>
      <arglist>(double degrees)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>tiltSlew</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a17b926dacaebd7ecf7050549debf4e49</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>zoom</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ac6253215273db093527abe6d517b9f95</anchor>
      <arglist>(int zoomValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>zoomRel</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>add57c9d4bcd50226e130aabf3ce6dfec</anchor>
      <arglist>(int zoomValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArPTZ</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ac385d830dd56f2fefc0d2c2739b943da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setLimits</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>af636ce588e4385b3dc7263f7fd7fad44</anchor>
      <arglist>(double maxPosPan, double maxNegPan, double maxPosTilt, double maxNegTilt, int maxZoom=0, int minZoom=0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxPosPan_i</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a9b81bc7ca8197caece2e8ee67b4ec374</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>pan_i</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ab8b8318926cbfa578996f1714f040184</anchor>
      <arglist>(double degrees)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxPosPan_i</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>a9b81bc7ca8197caece2e8ee67b4ec374</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>pan_i</name>
      <anchorfile>classArPTZ.html</anchorfile>
      <anchor>ab8b8318926cbfa578996f1714f040184</anchor>
      <arglist>(double degrees)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArPTZConnector</name>
    <filename>classArPTZConnector.html</filename>
    <member kind="typedef">
      <type>ArRetFunctor4&lt; ArPTZ *, size_t, ArPTZParams, ArArgumentParser *, ArRobot * &gt;</type>
      <name>PTZCreateFunc</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>a8e388cec85450c92457ffb128b588014</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>ac360c671ec7b96639bc9e73b166d0f7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectPTZs</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>aef27c83872cacf1d35a5b20c66c7b533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArPTZ *</type>
      <name>findPTZ</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>aa7470e3af93aeeec6c169494b3dc12ce</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumPTZs</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>a581670a703c3f1e1c99fcaa53c95c554</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArPTZ *</type>
      <name>getPTZ</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>a3b7815ff4ba358b80eee7ca1a7e46ad7</anchor>
      <arglist>(size_t i=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ArPTZ * &gt;</type>
      <name>getPTZs</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>ae530b77b17d5a1e96538c1d2124b115f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArRobot *</type>
      <name>getRobot</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>a63ddeae51e4c92839098f21188af8ed4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNumPTZs</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>af2a0970004a49434fa4bf31043c3e9ec</anchor>
      <arglist>(size_t n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArPTZConnector</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>a906087f7a6cdc62c19603e833ed54413</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerPTZType</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>a080ec915958a45d6b1f3f05d589bc993</anchor>
      <arglist>(const std::string &amp;typeName, ArPTZConnector::PTZCreateFunc *func)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ArPTZParams &gt;</type>
      <name>myArguments</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>a15d51bcbaa58023efd45f0f65d54c8b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ArPTZ * &gt;</type>
      <name>myConnectedPTZs</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>af9cb93def6d2c2b67395f668458e3c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ArPTZParams &gt;</type>
      <name>myParams</name>
      <anchorfile>classArPTZConnector.html</anchorfile>
      <anchor>a10f5dbaa1ec6b7dd6a62bab11a6f1d1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArPTZParams</name>
    <filename>classArPTZParams.html</filename>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>classArPTZParams.html</anchorfile>
      <anchor>a6d6dcca50ba4ef9fba71c742327c98a7</anchor>
      <arglist>(const ArPTZParams &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRangeBuffer</name>
    <filename>classArRangeBuffer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addReading</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>aa5245f84f5fc2bd5f763770ddbeadd5f</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addReadingConditional</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a4e819cee21e3dec333402c47485e9fe5</anchor>
      <arglist>(double x, double y, double closeDistSquared, bool *wasAdded=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyTransform</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>adece9da0099a60a306f37acffb3804ed</anchor>
      <arglist>(ArTransform trans)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRangeBuffer</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>ac7f77649fd0c1beb2536999f6cc6fae7</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginInvalidationSweep</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a052e76c8a8d3e9c83887608756543839</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginRedoBuffer</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>ace5239f26b4d2dd869517ae48fdd7942</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a663a0a7490ca9e2de1f358999d5442ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearOlderThan</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a3145935f2bf0313eb38c3477748d6f3d</anchor>
      <arglist>(int milliSeconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearOlderThanSeconds</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a4b1c3ebcf2cdb86202bd1ffe526c1dc0</anchor>
      <arglist>(int seconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endInvalidationSweep</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>adda5ad925a437dda26169a951dc17941</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endRedoBuffer</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a3344ce858d5b3246f95ba8b210234815</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; ArPoseWithTime * &gt; *</type>
      <name>getBuffer</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>aeb7c7d071e997949df575093dcdd94b7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; ArPoseWithTime * &gt; *</type>
      <name>getBuffer</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a904e23bb7652c40c817b4e27b9ad3002</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ArPoseWithTime &gt; *</type>
      <name>getBufferAsVector</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>ab0a4e785b97242cdf05f52a166cd154a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getClosestBox</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a9282cf18f8e0bb308c8b175c4e65ff3a</anchor>
      <arglist>(double x1, double y1, double x2, double y2, ArPose position, unsigned int maxRange, ArPose *readingPos=NULL, ArPose targetPose=ArPose(0, 0, 0)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getClosestPolar</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a4ff2cea3d857c7d17b8f6ac38f934a12</anchor>
      <arglist>(double startAngle, double endAngle, ArPose position, unsigned int maxRange, double *angle=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getEncoderPoseTaken</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>ab668751892a74de9b264e5bba45113f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getPoseTaken</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>aa36f04dadc6437562f4569e7fadc6327</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSize</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a254bc69487b71f8d9171d31c5393dac9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateReading</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a297a1222250eff4d091519494a576db0</anchor>
      <arglist>(std::list&lt; ArPoseWithTime * &gt;::iterator readingIt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redoReading</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>ace888219e83dee531e592ddd75394c18</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a764d3e415dbb6be49c725475209c318f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEncoderPoseTaken</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a56114359a4fff9ed9d64f8caf45a93b7</anchor>
      <arglist>(ArPose p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoseTaken</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a964cff6a88cf073feb693034ed5a23de</anchor>
      <arglist>(ArPose p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a34015d54951d3de04931fd88f84d74ac</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRangeBuffer</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>aa090c14212594aeb564b459059e5a44b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getClosestBoxInList</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a707a75429cb5cdef829a60d76d3364a6</anchor>
      <arglist>(double x1, double y1, double x2, double y2, ArPose position, unsigned int maxRange, ArPose *readingPos, ArPose targetPose, const std::list&lt; ArPoseWithTime * &gt; *buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getClosestPolarInList</name>
      <anchorfile>classArRangeBuffer.html</anchorfile>
      <anchor>a6e6386da42a273f51edfb074c22f3a5f</anchor>
      <arglist>(double startAngle, double endAngle, ArPose position, unsigned int maxRange, double *angle, const std::list&lt; ArPoseWithTime * &gt; *buffer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRangeDevice</name>
    <filename>classArRangeDevice.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addReading</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a06398798458c23f70065baac04471146</anchor>
      <arglist>(double x, double y, bool *wasAdded=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyTransform</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ab7e29948ca6b640272faf43dfe5c4870</anchor>
      <arglist>(ArTransform trans, bool doCumulative=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRangeDevice</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ae5317e9755d5ef4ddda1acbfd5c79f2f</anchor>
      <arglist>(size_t currentBufferSize, size_t cumulativeBufferSize, const char *name, unsigned int maxRange, int maxSecondsToKeepCurrent=0, int maxSecondsToKeepCumulative=0, double maxDistToKeepCumulative=0, bool locationDependent=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearCumulativeOlderThan</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a20c90a21b4f4a1c51bc9d124e217a8ef</anchor>
      <arglist>(int milliSeconds)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearCumulativeOlderThanSeconds</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>adcd491aff714eb3a6924b63d12d65351</anchor>
      <arglist>(int seconds)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearCumulativeReadings</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a82eb3d017534465a60b384ac56f1d2e8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearCurrentReadings</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a8eb9b6ff83ae33a4a5bbe22eb825d1f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cumulativeReadingBox</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>adeab2edd7763ac30d2b33c1cf08bb915</anchor>
      <arglist>(double x1, double y1, double x2, double y2, ArPose *readingPos=NULL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>cumulativeReadingPolar</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a3c898926eb1c04ed457c8e5c3e7566e3</anchor>
      <arglist>(double startAngle, double endAngle, double *angle=NULL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>currentReadingBox</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ac262870eb43b21b1be17ee8621eb3b91</anchor>
      <arglist>(double x1, double y1, double x2, double y2, ArPose *readingPos=NULL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>currentReadingPolar</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a27b080d64bdedd8f593ffcc6c373d609</anchor>
      <arglist>(double startAngle, double endAngle, double *angle=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>filterCallback</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>aaf6c1ba0cd2ac91887cac2856e048c77</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::list&lt; ArSensorReading * &gt; *</type>
      <name>getAdjustedRawReadings</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a08ad025cfa7204fb601f8b5de95bde9b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; ArSensorReading &gt; *</type>
      <name>getAdjustedRawReadingsAsVector</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ac41b98c9f5fdef7916a09433f871e940</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::list&lt; ArPoseWithTime * &gt; *</type>
      <name>getCumulativeBuffer</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>aad3ac9142453f941bc92ba241436453d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; ArPoseWithTime * &gt; *</type>
      <name>getCumulativeBuffer</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a83eb459ed07f7ed361cacc7212db35dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; ArPoseWithTime &gt; *</type>
      <name>getCumulativeBufferAsVector</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>aaa8030e121b625a123286f98a328a5b2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getCumulativeBufferSize</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a49e418e0f7970357893d010d02def770</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArDrawingData *</type>
      <name>getCumulativeDrawingData</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a69d14df2fcd274798d4a886a7b926bff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ArRangeBuffer *</type>
      <name>getCumulativeRangeBuffer</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>aefc6078a128d80de304d5b978baaf31d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArRangeBuffer *</type>
      <name>getCumulativeRangeBuffer</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a064f0165f2a406145e6a8939fd17dfb9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::list&lt; ArPoseWithTime * &gt; *</type>
      <name>getCurrentBuffer</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a072ac84980687ed353b3e5c2e36d6d68</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; ArPoseWithTime * &gt; *</type>
      <name>getCurrentBuffer</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a1395143f849a819e08a10bf6542503ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; ArPoseWithTime &gt; *</type>
      <name>getCurrentBufferAsVector</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a91c1207063423f113406c9de528fc320</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getCurrentBufferSize</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>af1ed5e194cea9d9d68012c783c53f9be</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArDrawingData *</type>
      <name>getCurrentDrawingData</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>acbebb9e3252d1449acff674ebc0c7a10</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ArRangeBuffer *</type>
      <name>getCurrentRangeBuffer</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ad5e497d7893beb13ef903861ba909087</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArRangeBuffer *</type>
      <name>getCurrentRangeBuffer</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>acf6690dffb87973976b557b8190162e8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxDistToKeepCumulative</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>aefc5cdd9adb55399d4e0725754c418ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxInsertDistCumulative</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a506d33c0b4e405476ce2b56097bcbce8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getMaxRange</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a532ea3f49df7591a9ff537743352746e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxSecondsToKeepCumulative</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a3f9c853607709dd259d406c0356edc5b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxSecondsToKeepCurrent</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a51152724f047e69c2aec79bde36ece1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinDistBetweenCumulative</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a900eac07d508c59f5026e423e7777864</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinDistBetweenCurrent</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>aaafc983b6f747863b93c5258b18a4076</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getName</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>adf76b644d209c28628a1f7ba4047b60b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::list&lt; ArSensorReading * &gt; *</type>
      <name>getRawReadings</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ac3f1591ab4bcd08ffeab0254aaf7568b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; ArSensorReading &gt; *</type>
      <name>getRawReadingsAsVector</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a97fdf4c7e7c95ac8e5605df3c87ee1dc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArRobot *</type>
      <name>getRobot</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ae70473f04371cb1b4bcac83f1e2cd5a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocationDependent</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a22e4bf48910f725221760a202206a1e9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lockDevice</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a172e8da71d800f959523e1f3021612d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCumulativeBufferSize</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ad4f7fa1ed25b92afed4de0cb957c313c</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCumulativeDrawingData</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ac5ac42251d038f50250117e7ae21cbdc</anchor>
      <arglist>(ArDrawingData *data, bool takeOwnershipOfData)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentBufferSize</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a0e73bae003a4e3f89f8bddfc843db464</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentDrawingData</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a7b09eb692d4c9d0f9b51cca41f9e9665</anchor>
      <arglist>(ArDrawingData *data, bool takeOwnershipOfData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxDistToKeepCumulative</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a3f1ec2efa5f2d6d34683586919847aa2</anchor>
      <arglist>(double maxDistToKeepCumulative)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxInsertDistCumulative</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a65aaec7f213c343f6c096584928463cc</anchor>
      <arglist>(double maxInsertDistCumulative)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxRange</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a7a31e62e62d21f870c2b4f2f8ec5ceee</anchor>
      <arglist>(unsigned int maxRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxSecondsToKeepCumulative</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a6d797854910a43b6650fb4cee3d8626f</anchor>
      <arglist>(int maxSecondsToKeepCumulative)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxSecondsToKeepCurrent</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ab963e49e5a08704ac08ab7eab040fa8c</anchor>
      <arglist>(int maxSecondsToKeepCurrent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinDistBetweenCumulative</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>acd53bf7cfbba205118c79ab95c8c3f18</anchor>
      <arglist>(double minDistBetweenCumulative)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinDistBetweenCurrent</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ab3b9e8840205f7d1b60a55f27490c1ab</anchor>
      <arglist>(double minDistBetweenCurrent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRobot</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ab5d3eeb36b5347c006e844ee7a103b96</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tryLockDevice</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>ad9f74c2d3090f1c6d94c24bdec580165</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>unlockDevice</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>af889a070950aae211df4637fbb73608e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRangeDevice</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a166b2f88c88663ba337db50a008b5e83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>adjustRawReadings</name>
      <anchorfile>classArRangeDevice.html</anchorfile>
      <anchor>a7774762a642a206a3b57bac9876ba5af</anchor>
      <arglist>(bool interlaced)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRangeDeviceThreaded</name>
    <filename>classArRangeDeviceThreaded.html</filename>
    <base>ArRangeDevice</base>
    <member kind="function">
      <type></type>
      <name>ArRangeDeviceThreaded</name>
      <anchorfile>classArRangeDeviceThreaded.html</anchorfile>
      <anchor>a4073e17466a8609a0929cd18fbe15a5f</anchor>
      <arglist>(size_t currentBufferSize, size_t cumulativeBufferSize, const char *name, unsigned int maxRange, int maxSecondsTokeepCurrent=0, int maxSecondsToKeepCumulative=0, double maxDistToKeepCumulative=0, bool locationDependent=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getRunning</name>
      <anchorfile>classArRangeDeviceThreaded.html</anchorfile>
      <anchor>ad9a031e7475c4d315c1a2ffd779caffd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getRunningWithLock</name>
      <anchorfile>classArRangeDeviceThreaded.html</anchorfile>
      <anchor>a3cf632960210b7329e7f1eec30db2051</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>run</name>
      <anchorfile>classArRangeDeviceThreaded.html</anchorfile>
      <anchor>a320f6e8aa92a6fb68fe4258042895373</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runAsync</name>
      <anchorfile>classArRangeDeviceThreaded.html</anchorfile>
      <anchor>a62cb8f9af9c0152fe228ac59724c89c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArRangeDeviceThreaded.html</anchorfile>
      <anchor>a63404f7a0e435f4add791d33f1dcf5b8</anchor>
      <arglist>(void *arg)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopRunning</name>
      <anchorfile>classArRangeDeviceThreaded.html</anchorfile>
      <anchor>ad3a7a6e1eea852d3ffd8c513a9e98ea0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRangeDeviceThreaded</name>
      <anchorfile>classArRangeDeviceThreaded.html</anchorfile>
      <anchor>a5ef50ea3df3fcf868bd1890640cacd02</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRatioInputJoydrive</name>
    <filename>classArRatioInputJoydrive.html</filename>
    <member kind="function">
      <type></type>
      <name>ArRatioInputJoydrive</name>
      <anchorfile>classArRatioInputJoydrive.html</anchorfile>
      <anchor>a0eba970616c6e0882bf8fe3524a8e042</anchor>
      <arglist>(ArRobot *robot, ArActionRatioInput *input, int priority=50, bool stopIfNoButtonPressed=false, bool useOSCalForJoystick=true)</arglist>
    </member>
    <member kind="function">
      <type>ArJoyHandler *</type>
      <name>getJoyHandler</name>
      <anchorfile>classArRatioInputJoydrive.html</anchorfile>
      <anchor>a6e8547bcaa09bb9d29491d554fd04fef</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getStopIfNoButtonPressed</name>
      <anchorfile>classArRatioInputJoydrive.html</anchorfile>
      <anchor>a4e7543222fc19f6e16ad4702dfdaa33e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseOSCal</name>
      <anchorfile>classArRatioInputJoydrive.html</anchorfile>
      <anchor>af717f859e19cff6158e95f6f24f8995c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>joystickInited</name>
      <anchorfile>classArRatioInputJoydrive.html</anchorfile>
      <anchor>add0e352b358b2f6e7e28de6b6afe3272</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStopIfNoButtonPressed</name>
      <anchorfile>classArRatioInputJoydrive.html</anchorfile>
      <anchor>aca20d4084cea78973c480662bbc22e95</anchor>
      <arglist>(bool stopIfNoButtonPressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseOSCal</name>
      <anchorfile>classArRatioInputJoydrive.html</anchorfile>
      <anchor>a80b26abcf86e8f4e6fe62c84bdc484aa</anchor>
      <arglist>(bool useOSCal)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRatioInputJoydrive</name>
      <anchorfile>classArRatioInputJoydrive.html</anchorfile>
      <anchor>a1c0c4117b7e6b4e7d948070756e357f8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRatioInputKeydrive</name>
    <filename>classArRatioInputKeydrive.html</filename>
    <member kind="function">
      <type></type>
      <name>ArRatioInputKeydrive</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>a7ad465cc6e5cfdc0b1ee83c6828e62b7</anchor>
      <arglist>(ArRobot *robot, ArActionRatioInput *input, int priority=25, double velIncrement=5)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>down</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>ae8cfc81729ad2f4121bd96cbeaf95ad9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor *</type>
      <name>getFireCB</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>a4057db0d0fe17c90c6da1578b45c0fc9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>giveUpKeys</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>a2f6d2e7929557b5d49e38e6308a326b9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>left</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>a95a3661c1023e1383319908e85823141</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>right</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>a42a073f5b8f7c537a0665e0de7cb47ec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>space</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>a80c46271a30e6b60314aecb1497cc117</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>takeKeys</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>a258fec0d47a563c3f157b5d5e5898710</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>up</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>a272f787d3bc0509af4a483e94f796968</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>x</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>a04d20b44dcb30db9ac6b197462701de5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>z</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>a9f26d1e64a20f7e772c6d15474ec642c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRatioInputKeydrive</name>
      <anchorfile>classArRatioInputKeydrive.html</anchorfile>
      <anchor>a12dbc81d513dc6eff19dcbe6cce66f08</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRatioInputRobotJoydrive</name>
    <filename>classArRatioInputRobotJoydrive.html</filename>
    <member kind="function">
      <type></type>
      <name>ArRatioInputRobotJoydrive</name>
      <anchorfile>classArRatioInputRobotJoydrive.html</anchorfile>
      <anchor>a03c97bc64b198063d6e1d86957933dc0</anchor>
      <arglist>(ArRobot *robot, ArActionRatioInput *input, int priority=75, bool requireDeadmanPushed=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRatioInputRobotJoydrive</name>
      <anchorfile>classArRatioInputRobotJoydrive.html</anchorfile>
      <anchor>a14df1190eae5f64b9aa380939dcb6e03</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRecurrentTask</name>
    <filename>classArRecurrentTask.html</filename>
    <base>ArASyncTask</base>
    <member kind="function">
      <type></type>
      <name>ArRecurrentTask</name>
      <anchorfile>classArRecurrentTask.html</anchorfile>
      <anchor>af121eea15d2a91c8202009f9834ab0a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>done</name>
      <anchorfile>classArRecurrentTask.html</anchorfile>
      <anchor>a5c61e6b0e043ae2347df2397cc587fa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>go</name>
      <anchorfile>classArRecurrentTask.html</anchorfile>
      <anchor>ad90f473791b2dedb6785ea60926b7901</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classArRecurrentTask.html</anchorfile>
      <anchor>af0d05370a919110963414b3b817d0982</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>task</name>
      <anchorfile>classArRecurrentTask.html</anchorfile>
      <anchor>abc955dd16adc10a32c250db722f6f3e7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArRecurrentTask</name>
      <anchorfile>classArRecurrentTask.html</anchorfile>
      <anchor>a63c2b464a541d2054e88a119fe846722</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArResolver</name>
    <filename>classArResolver.html</filename>
    <member kind="typedef">
      <type>std::multimap&lt; int, ArAction * &gt;</type>
      <name>ActionMap</name>
      <anchorfile>classArResolver.html</anchorfile>
      <anchor>aeb065039458867c6578cdafec9a784ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getDescription</name>
      <anchorfile>classArResolver.html</anchorfile>
      <anchor>a80fe8143957060b1ca0b627206cbe05b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getName</name>
      <anchorfile>classArResolver.html</anchorfile>
      <anchor>aab0266787f5ee939e6701ee25cc32e82</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArActionDesired *</type>
      <name>resolve</name>
      <anchorfile>classArResolver.html</anchorfile>
      <anchor>a6d94152011beb3d0ec66bba2d7c44729</anchor>
      <arglist>(ActionMap *actions, ArRobot *robot, bool logActions=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArResolver</name>
      <anchorfile>classArResolver.html</anchorfile>
      <anchor>aa4f4c3be19cf8d6b6f1abe164486da56</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor</name>
    <filename>classArRetFunctor.html</filename>
    <templarg>Ret</templarg>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1</name>
    <filename>classArRetFunctor1.html</filename>
    <templarg>Ret</templarg>
    <templarg>P1</templarg>
    <base>ArRetFunctor</base>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(P1 p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; ArBatteryMTX *, int &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; ArBatteryMTX * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual ArBatteryMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArBatteryMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(intp1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; ArDeviceConnection *, const char * &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; ArDeviceConnection * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(const char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; ArLaser *, int &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; ArLaser * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual ArLaser *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArLaser *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(intp1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; ArLCDMTX *, int &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; ArLCDMTX * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual ArLCDMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArLCDMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(intp1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; ArSonarMTX *, int &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; ArSonarMTX * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual ArSonarMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArSonarMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(intp1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(ArArgumentBuilder *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; bool, ArPose &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(ArPosep1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(ArRobotPacket *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; bool, ArTypes::Byte2 * &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(ArTypes::Byte2 *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; bool, ArTypes::UByte4 * &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(ArTypes::UByte4 *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; bool, char * &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; bool, const char * &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(const char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; double, ArPoseWithTime &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; double &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(ArPoseWithTimep1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; int, ArTime &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; int &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(ArTimep1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1&lt; void *, void * &gt;</name>
    <filename>classArRetFunctor1.html</filename>
    <base>ArRetFunctor&lt; void * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual void *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a31f683344726997d579f91a208cda555</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>a87ebc758a8ef023288508360fb38f732</anchor>
      <arglist>(void *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1</name>
      <anchorfile>classArRetFunctor1.html</anchorfile>
      <anchor>aeab556b54350185c42a9721a9c176e91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C</name>
    <filename>classArRetFunctor1C.html</filename>
    <templarg>Ret</templarg>
    <templarg>T</templarg>
    <templarg>P1</templarg>
    <base>ArRetFunctor1</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1), P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArActionRobotJoydrive, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArActionRobotJoydrive &amp;obj, bool(ArActionRobotJoydrive::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArActionRobotJoydrive &amp;obj, bool(ArActionRobotJoydrive::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArActionRobotJoydrive *obj, bool(ArActionRobotJoydrive::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArActionRobotJoydrive *obj, bool(ArActionRobotJoydrive::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArActionRobotJoydrive *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArActionRobotJoydrive &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArAnalogGyro, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArAnalogGyro &amp;obj, bool(ArAnalogGyro::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArAnalogGyro &amp;obj, bool(ArAnalogGyro::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArAnalogGyro *obj, bool(ArAnalogGyro::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArAnalogGyro *obj, bool(ArAnalogGyro::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArAnalogGyro *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArAnalogGyro &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArGripper, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArGripper &amp;obj, bool(ArGripper::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArGripper &amp;obj, bool(ArGripper::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArGripper *obj, bool(ArGripper::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArGripper *obj, bool(ArGripper::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArGripper *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArGripper &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArIrrfDevice, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArIrrfDevice &amp;obj, bool(ArIrrfDevice::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArIrrfDevice &amp;obj, bool(ArIrrfDevice::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArIrrfDevice *obj, bool(ArIrrfDevice::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArIrrfDevice *obj, bool(ArIrrfDevice::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArIrrfDevice *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArIrrfDevice &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArLaserLogger, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArLaserLogger &amp;obj, bool(ArLaserLogger::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArLaserLogger &amp;obj, bool(ArLaserLogger::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArLaserLogger *obj, bool(ArLaserLogger::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArLaserLogger *obj, bool(ArLaserLogger::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArLaserLogger *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArLaserLogger &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArLMS2xx, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArLMS2xx &amp;obj, bool(ArLMS2xx::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArLMS2xx &amp;obj, bool(ArLMS2xx::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArLMS2xx *obj, bool(ArLMS2xx::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArLMS2xx *obj, bool(ArLMS2xx::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArLMS2xx *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArLMS2xx &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArMapInfo, ArArgumentBuilder * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArMapInfo &amp;obj, bool(ArMapInfo::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArMapInfo &amp;obj, bool(ArMapInfo::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArMapInfo *obj, bool(ArMapInfo::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArMapInfo *obj, bool(ArMapInfo::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArMapInfo *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArMapInfo &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArMapObjects, ArArgumentBuilder * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArMapObjects &amp;obj, bool(ArMapObjects::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArMapObjects &amp;obj, bool(ArMapObjects::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArMapObjects *obj, bool(ArMapObjects::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArMapObjects *obj, bool(ArMapObjects::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArMapObjects *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArMapObjects &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArMapScan, ArArgumentBuilder * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArMapScan &amp;obj, bool(ArMapScan::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArMapScan &amp;obj, bool(ArMapScan::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArMapScan *obj, bool(ArMapScan::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArMapScan *obj, bool(ArMapScan::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArMapScan *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArMapScan &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArMapSimple, ArArgumentBuilder * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArMapSimple &amp;obj, bool(ArMapSimple::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArMapSimple &amp;obj, bool(ArMapSimple::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArMapSimple *obj, bool(ArMapSimple::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArMapSimple *obj, bool(ArMapSimple::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArMapSimple *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArMapSimple &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArMapSupplement, ArArgumentBuilder * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArMapSupplement &amp;obj, bool(ArMapSupplement::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArMapSupplement &amp;obj, bool(ArMapSupplement::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArMapSupplement *obj, bool(ArMapSupplement::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArMapSupplement *obj, bool(ArMapSupplement::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArMapSupplement *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArMapSupplement &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArModeRobotStatus, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArModeRobotStatus &amp;obj, bool(ArModeRobotStatus::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArModeRobotStatus &amp;obj, bool(ArModeRobotStatus::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArModeRobotStatus *obj, bool(ArModeRobotStatus::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArModeRobotStatus *obj, bool(ArModeRobotStatus::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArModeRobotStatus *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArModeRobotStatus &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArMTXIO, ArTypes::UByte4 * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArTypes::UByte4 * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArMTXIO &amp;obj, bool(ArMTXIO::*func)(ArTypes::UByte4 *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArMTXIO &amp;obj, bool(ArMTXIO::*func)(ArTypes::UByte4 *), ArTypes::UByte4 *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArMTXIO *obj, bool(ArMTXIO::*func)(ArTypes::UByte4 *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArMTXIO *obj, bool(ArMTXIO::*func)(ArTypes::UByte4 *), ArTypes::UByte4 *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArTypes::UByte4 *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArTypes::UByte4 *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArMTXIO *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArMTXIO &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArP2Arm, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArP2Arm &amp;obj, bool(ArP2Arm::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArP2Arm &amp;obj, bool(ArP2Arm::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArP2Arm *obj, bool(ArP2Arm::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArP2Arm *obj, bool(ArP2Arm::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArP2Arm *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArP2Arm &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArPTZ, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArPTZ &amp;obj, bool(ArPTZ::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArPTZ &amp;obj, bool(ArPTZ::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArPTZ *obj, bool(ArPTZ::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArPTZ *obj, bool(ArPTZ::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArPTZ *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArPTZ &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArRobot, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArRobot &amp;obj, bool(ArRobot::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArRobot &amp;obj, bool(ArRobot::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArRobot *obj, bool(ArRobot::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArRobot *obj, bool(ArRobot::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArRobot *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArRobot &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArRobotBatteryPacketReader, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArRobotBatteryPacketReader &amp;obj, bool(ArRobotBatteryPacketReader::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArRobotBatteryPacketReader &amp;obj, bool(ArRobotBatteryPacketReader::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArRobotBatteryPacketReader *obj, bool(ArRobotBatteryPacketReader::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArRobotBatteryPacketReader *obj, bool(ArRobotBatteryPacketReader::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArRobotBatteryPacketReader *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArRobotBatteryPacketReader &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArRobotConfigPacketReader, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArRobotConfigPacketReader &amp;obj, bool(ArRobotConfigPacketReader::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArRobotConfigPacketReader &amp;obj, bool(ArRobotConfigPacketReader::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArRobotConfigPacketReader *obj, bool(ArRobotConfigPacketReader::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArRobotConfigPacketReader *obj, bool(ArRobotConfigPacketReader::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArRobotConfigPacketReader *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArRobotConfigPacketReader &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArRobotJoyHandler, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArRobotJoyHandler &amp;obj, bool(ArRobotJoyHandler::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArRobotJoyHandler &amp;obj, bool(ArRobotJoyHandler::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArRobotJoyHandler *obj, bool(ArRobotJoyHandler::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArRobotJoyHandler *obj, bool(ArRobotJoyHandler::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArRobotJoyHandler *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArRobotJoyHandler &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArRobotParams, ArArgumentBuilder * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArRobotParams &amp;obj, bool(ArRobotParams::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArRobotParams &amp;obj, bool(ArRobotParams::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArRobotParams *obj, bool(ArRobotParams::*func)(ArArgumentBuilder *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArRobotParams *obj, bool(ArRobotParams::*func)(ArArgumentBuilder *), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArRobotParams *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArRobotParams &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArS3Series, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArS3Series &amp;obj, bool(ArS3Series::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArS3Series &amp;obj, bool(ArS3Series::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArS3Series *obj, bool(ArS3Series::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArS3Series *obj, bool(ArS3Series::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArS3Series *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArS3Series &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArSimulatedGPS, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArSimulatedGPS &amp;obj, bool(ArSimulatedGPS::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArSimulatedGPS &amp;obj, bool(ArSimulatedGPS::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArSimulatedGPS *obj, bool(ArSimulatedGPS::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArSimulatedGPS *obj, bool(ArSimulatedGPS::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArSimulatedGPS *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArSimulatedGPS &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArSimulatedLaser, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArSimulatedLaser &amp;obj, bool(ArSimulatedLaser::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArSimulatedLaser &amp;obj, bool(ArSimulatedLaser::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArSimulatedLaser *obj, bool(ArSimulatedLaser::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArSimulatedLaser *obj, bool(ArSimulatedLaser::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArSimulatedLaser *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArSimulatedLaser &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, ArTCMCompassRobot, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArTCMCompassRobot &amp;obj, bool(ArTCMCompassRobot::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArTCMCompassRobot &amp;obj, bool(ArTCMCompassRobot::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArTCMCompassRobot *obj, bool(ArTCMCompassRobot::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArTCMCompassRobot *obj, bool(ArTCMCompassRobot::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArTCMCompassRobot *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArTCMCompassRobot &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; bool, GyroTask, ArRobotPacket * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; bool, ArRobotPacket * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(GyroTask &amp;obj, bool(GyroTask::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(GyroTask &amp;obj, bool(GyroTask::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(GyroTask *obj, bool(GyroTask::*func)(ArRobotPacket *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(GyroTask *obj, bool(GyroTask::*func)(ArRobotPacket *), ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArRobotPacket *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(GyroTask *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(GyroTask &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; double, ArAnalogGyro, ArPoseWithTime &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; double, ArPoseWithTime &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArAnalogGyro &amp;obj, double(ArAnalogGyro::*func)(ArPoseWithTime))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArAnalogGyro &amp;obj, double(ArAnalogGyro::*func)(ArPoseWithTime), ArPoseWithTimep1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArAnalogGyro *obj, double(ArAnalogGyro::*func)(ArPoseWithTime))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArAnalogGyro *obj, double(ArAnalogGyro::*func)(ArPoseWithTime), ArPoseWithTimep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(ArPoseWithTimep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(ArPoseWithTimep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArAnalogGyro *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArAnalogGyro &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; void *, ArASyncTask, void * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; void *, void * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArASyncTask &amp;obj, void *(ArASyncTask::*func)(void *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArASyncTask &amp;obj, void *(ArASyncTask::*func)(void *), void *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArASyncTask *obj, void *(ArASyncTask::*func)(void *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArASyncTask *obj, void *(ArASyncTask::*func)(void *), void *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(void *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(void *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArASyncTask *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArASyncTask &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor1C&lt; void *, ArRangeDeviceThreaded, void * &gt;</name>
    <filename>classArRetFunctor1C.html</filename>
    <base>ArRetFunctor1&lt; void *, void * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ad482c17534e2462a3f6bdd6717589266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a84478a4cd75694f61a509cee1c3ae6ca</anchor>
      <arglist>(ArRangeDeviceThreaded &amp;obj, void *(ArRangeDeviceThreaded::*func)(void *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a66b7f3f700ae941c689a3a40af38e75f</anchor>
      <arglist>(ArRangeDeviceThreaded &amp;obj, void *(ArRangeDeviceThreaded::*func)(void *), void *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>ab124feaa33feaa0bc8f7f8b0a4f97c2f</anchor>
      <arglist>(ArRangeDeviceThreaded *obj, void *(ArRangeDeviceThreaded::*func)(void *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a47c9199be2ae5239526e40c7e15c6a49</anchor>
      <arglist>(ArRangeDeviceThreaded *obj, void *(ArRangeDeviceThreaded::*func)(void *), void *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4a54066f8c40562870ff82dc068cd8e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a2d6748776fd25d85f1fd1d01d9bb569e</anchor>
      <arglist>(void *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a4dcf994df875260f3905a70831fe0b3a</anchor>
      <arglist>(void *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a3285c9bef22e2a186172c0f7545933f8</anchor>
      <arglist>(ArRangeDeviceThreaded *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>a7f1e68ab539a8c1116142087e07f0208</anchor>
      <arglist>(ArRangeDeviceThreaded &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor1C</name>
      <anchorfile>classArRetFunctor1C.html</anchorfile>
      <anchor>abf62844dee8138017c6fcb58fcfbd7c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2</name>
    <filename>classArRetFunctor2.html</filename>
    <templarg>Ret</templarg>
    <templarg>P1</templarg>
    <templarg>P2</templarg>
    <base>ArRetFunctor1</base>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a188ea2c7923742617ee9c47bd1be9f2d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a3b80e63daf878ff4803de80950dfe64b</anchor>
      <arglist>(P1 p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a05f4054a7a73e830fa157bfbb13679f1</anchor>
      <arglist>(P1 p1, P2 p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>afa85cbc90ba99f37ee16220959257420</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2&lt; ArBatteryMTX *, int, const char * &gt;</name>
    <filename>classArRetFunctor2.html</filename>
    <base>ArRetFunctor1&lt; ArBatteryMTX *, int &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual ArBatteryMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a188ea2c7923742617ee9c47bd1be9f2d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArBatteryMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a3b80e63daf878ff4803de80950dfe64b</anchor>
      <arglist>(intp1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArBatteryMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a05f4054a7a73e830fa157bfbb13679f1</anchor>
      <arglist>(intp1, const char *p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>afa85cbc90ba99f37ee16220959257420</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2&lt; ArDeviceConnection *, const char *, const char * &gt;</name>
    <filename>classArRetFunctor2.html</filename>
    <base>ArRetFunctor1&lt; ArDeviceConnection *, const char * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a188ea2c7923742617ee9c47bd1be9f2d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a3b80e63daf878ff4803de80950dfe64b</anchor>
      <arglist>(const char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a05f4054a7a73e830fa157bfbb13679f1</anchor>
      <arglist>(const char *p1, const char *p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>afa85cbc90ba99f37ee16220959257420</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2&lt; ArLaser *, int, const char * &gt;</name>
    <filename>classArRetFunctor2.html</filename>
    <base>ArRetFunctor1&lt; ArLaser *, int &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual ArLaser *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a188ea2c7923742617ee9c47bd1be9f2d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArLaser *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a3b80e63daf878ff4803de80950dfe64b</anchor>
      <arglist>(intp1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArLaser *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a05f4054a7a73e830fa157bfbb13679f1</anchor>
      <arglist>(intp1, const char *p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>afa85cbc90ba99f37ee16220959257420</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2&lt; ArLCDMTX *, int, const char * &gt;</name>
    <filename>classArRetFunctor2.html</filename>
    <base>ArRetFunctor1&lt; ArLCDMTX *, int &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual ArLCDMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a188ea2c7923742617ee9c47bd1be9f2d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArLCDMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a3b80e63daf878ff4803de80950dfe64b</anchor>
      <arglist>(intp1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArLCDMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a05f4054a7a73e830fa157bfbb13679f1</anchor>
      <arglist>(intp1, const char *p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>afa85cbc90ba99f37ee16220959257420</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2&lt; ArSonarMTX *, int, const char * &gt;</name>
    <filename>classArRetFunctor2.html</filename>
    <base>ArRetFunctor1&lt; ArSonarMTX *, int &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual ArSonarMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a188ea2c7923742617ee9c47bd1be9f2d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArSonarMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a3b80e63daf878ff4803de80950dfe64b</anchor>
      <arglist>(intp1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArSonarMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a05f4054a7a73e830fa157bfbb13679f1</anchor>
      <arglist>(intp1, const char *p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>afa85cbc90ba99f37ee16220959257420</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2&lt; bool, ArArgumentBuilder *, char * &gt;</name>
    <filename>classArRetFunctor2.html</filename>
    <base>ArRetFunctor1&lt; bool, ArArgumentBuilder * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a188ea2c7923742617ee9c47bd1be9f2d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a3b80e63daf878ff4803de80950dfe64b</anchor>
      <arglist>(ArArgumentBuilder *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a05f4054a7a73e830fa157bfbb13679f1</anchor>
      <arglist>(ArArgumentBuilder *p1, char *p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>afa85cbc90ba99f37ee16220959257420</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2&lt; bool, ArTypes::Byte2 *, int &gt;</name>
    <filename>classArRetFunctor2.html</filename>
    <base>ArRetFunctor1&lt; bool, ArTypes::Byte2 * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a188ea2c7923742617ee9c47bd1be9f2d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a3b80e63daf878ff4803de80950dfe64b</anchor>
      <arglist>(ArTypes::Byte2 *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a05f4054a7a73e830fa157bfbb13679f1</anchor>
      <arglist>(ArTypes::Byte2 *p1, intp2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>afa85cbc90ba99f37ee16220959257420</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2&lt; bool, char *, size_t &gt;</name>
    <filename>classArRetFunctor2.html</filename>
    <base>ArRetFunctor1&lt; bool, char * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a188ea2c7923742617ee9c47bd1be9f2d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a3b80e63daf878ff4803de80950dfe64b</anchor>
      <arglist>(char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a05f4054a7a73e830fa157bfbb13679f1</anchor>
      <arglist>(char *p1, size_tp2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>afa85cbc90ba99f37ee16220959257420</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2&lt; bool, const char *, const char * &gt;</name>
    <filename>classArRetFunctor2.html</filename>
    <base>ArRetFunctor1&lt; bool, const char * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a188ea2c7923742617ee9c47bd1be9f2d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a3b80e63daf878ff4803de80950dfe64b</anchor>
      <arglist>(const char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a05f4054a7a73e830fa157bfbb13679f1</anchor>
      <arglist>(const char *p1, const char *p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>afa85cbc90ba99f37ee16220959257420</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2&lt; int, ArTime, ArPose * &gt;</name>
    <filename>classArRetFunctor2.html</filename>
    <base>ArRetFunctor1&lt; int, ArTime &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a188ea2c7923742617ee9c47bd1be9f2d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a3b80e63daf878ff4803de80950dfe64b</anchor>
      <arglist>(ArTimep1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>a05f4054a7a73e830fa157bfbb13679f1</anchor>
      <arglist>(ArTimep1, ArPose *p2)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2</name>
      <anchorfile>classArRetFunctor2.html</anchorfile>
      <anchor>afa85cbc90ba99f37ee16220959257420</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2C</name>
    <filename>classArRetFunctor2C.html</filename>
    <templarg>Ret</templarg>
    <templarg>T</templarg>
    <templarg>P1</templarg>
    <templarg>P2</templarg>
    <base>ArRetFunctor2</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>afd2353ea4975dcc97b4869bf89ee97a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>acac55c864eaa3d4452f63d24a5f3c5c4</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ace432f33b8d0671e56e7e14748b8c4cc</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a6793af4b59b2938f294fbaa7b638540f</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ad516f7419218700649fdb5b7268f641f</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a82d383729bb587afb6fcf4799b4b122b</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ae435842641e4c088d966fad46290d1f4</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>af420e1b7a0f94cc0f7c52dc56dc23dfd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ad789fb073b7f549803c8d67940369524</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a06ae40698da73a036b34d11a0aa6c8ae</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a5fe1211fa13a56dee75f2b441e0adb41</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a87594e56b19be318d980efb98d8f349e</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a35c79da69f6e9404786262f6ccf1a53e</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>af9b4264634478b69501bf35694cc779a</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ac20f48928f514916599acb905ddbea34</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2C&lt; bool, ArDataLogger, char *, size_t &gt;</name>
    <filename>classArRetFunctor2C.html</filename>
    <base>ArRetFunctor2&lt; bool, char *, size_t &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>afd2353ea4975dcc97b4869bf89ee97a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>acac55c864eaa3d4452f63d24a5f3c5c4</anchor>
      <arglist>(ArDataLogger &amp;obj, bool(ArDataLogger::*func)(char *, size_t))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ace432f33b8d0671e56e7e14748b8c4cc</anchor>
      <arglist>(ArDataLogger &amp;obj, bool(ArDataLogger::*func)(char *, size_t), char *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a6793af4b59b2938f294fbaa7b638540f</anchor>
      <arglist>(ArDataLogger &amp;obj, bool(ArDataLogger::*func)(char *, size_t), char *p1, size_tp2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ad516f7419218700649fdb5b7268f641f</anchor>
      <arglist>(ArDataLogger *obj, bool(ArDataLogger::*func)(char *, size_t))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a82d383729bb587afb6fcf4799b4b122b</anchor>
      <arglist>(ArDataLogger *obj, bool(ArDataLogger::*func)(char *, size_t), char *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ae435842641e4c088d966fad46290d1f4</anchor>
      <arglist>(ArDataLogger *obj, bool(ArDataLogger::*func)(char *, size_t), char *p1, size_tp2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>af420e1b7a0f94cc0f7c52dc56dc23dfd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ad789fb073b7f549803c8d67940369524</anchor>
      <arglist>(char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a06ae40698da73a036b34d11a0aa6c8ae</anchor>
      <arglist>(char *p1, size_tp2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a5fe1211fa13a56dee75f2b441e0adb41</anchor>
      <arglist>(char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a87594e56b19be318d980efb98d8f349e</anchor>
      <arglist>(size_tp2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a35c79da69f6e9404786262f6ccf1a53e</anchor>
      <arglist>(ArDataLogger *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>af9b4264634478b69501bf35694cc779a</anchor>
      <arglist>(ArDataLogger &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ac20f48928f514916599acb905ddbea34</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2C&lt; bool, ArMap, char *, size_t &gt;</name>
    <filename>classArRetFunctor2C.html</filename>
    <base>ArRetFunctor2&lt; bool, char *, size_t &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>afd2353ea4975dcc97b4869bf89ee97a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>acac55c864eaa3d4452f63d24a5f3c5c4</anchor>
      <arglist>(ArMap &amp;obj, bool(ArMap::*func)(char *, size_t))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ace432f33b8d0671e56e7e14748b8c4cc</anchor>
      <arglist>(ArMap &amp;obj, bool(ArMap::*func)(char *, size_t), char *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a6793af4b59b2938f294fbaa7b638540f</anchor>
      <arglist>(ArMap &amp;obj, bool(ArMap::*func)(char *, size_t), char *p1, size_tp2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ad516f7419218700649fdb5b7268f641f</anchor>
      <arglist>(ArMap *obj, bool(ArMap::*func)(char *, size_t))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a82d383729bb587afb6fcf4799b4b122b</anchor>
      <arglist>(ArMap *obj, bool(ArMap::*func)(char *, size_t), char *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ae435842641e4c088d966fad46290d1f4</anchor>
      <arglist>(ArMap *obj, bool(ArMap::*func)(char *, size_t), char *p1, size_tp2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>af420e1b7a0f94cc0f7c52dc56dc23dfd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ad789fb073b7f549803c8d67940369524</anchor>
      <arglist>(char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a06ae40698da73a036b34d11a0aa6c8ae</anchor>
      <arglist>(char *p1, size_tp2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a5fe1211fa13a56dee75f2b441e0adb41</anchor>
      <arglist>(char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a87594e56b19be318d980efb98d8f349e</anchor>
      <arglist>(size_tp2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a35c79da69f6e9404786262f6ccf1a53e</anchor>
      <arglist>(ArMap *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>af9b4264634478b69501bf35694cc779a</anchor>
      <arglist>(ArMap &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ac20f48928f514916599acb905ddbea34</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor2C&lt; bool, ArSpeechSynth, const char *, const char * &gt;</name>
    <filename>classArRetFunctor2C.html</filename>
    <base>ArRetFunctor2&lt; bool, const char *, const char * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>afd2353ea4975dcc97b4869bf89ee97a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>acac55c864eaa3d4452f63d24a5f3c5c4</anchor>
      <arglist>(ArSpeechSynth &amp;obj, bool(ArSpeechSynth::*func)(const char *, const char *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ace432f33b8d0671e56e7e14748b8c4cc</anchor>
      <arglist>(ArSpeechSynth &amp;obj, bool(ArSpeechSynth::*func)(const char *, const char *), const char *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a6793af4b59b2938f294fbaa7b638540f</anchor>
      <arglist>(ArSpeechSynth &amp;obj, bool(ArSpeechSynth::*func)(const char *, const char *), const char *p1, const char *p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ad516f7419218700649fdb5b7268f641f</anchor>
      <arglist>(ArSpeechSynth *obj, bool(ArSpeechSynth::*func)(const char *, const char *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a82d383729bb587afb6fcf4799b4b122b</anchor>
      <arglist>(ArSpeechSynth *obj, bool(ArSpeechSynth::*func)(const char *, const char *), const char *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ae435842641e4c088d966fad46290d1f4</anchor>
      <arglist>(ArSpeechSynth *obj, bool(ArSpeechSynth::*func)(const char *, const char *), const char *p1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>af420e1b7a0f94cc0f7c52dc56dc23dfd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ad789fb073b7f549803c8d67940369524</anchor>
      <arglist>(const char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a06ae40698da73a036b34d11a0aa6c8ae</anchor>
      <arglist>(const char *p1, const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a5fe1211fa13a56dee75f2b441e0adb41</anchor>
      <arglist>(const char *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a87594e56b19be318d980efb98d8f349e</anchor>
      <arglist>(const char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>a35c79da69f6e9404786262f6ccf1a53e</anchor>
      <arglist>(ArSpeechSynth *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>af9b4264634478b69501bf35694cc779a</anchor>
      <arglist>(ArSpeechSynth &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor2C</name>
      <anchorfile>classArRetFunctor2C.html</anchorfile>
      <anchor>ac20f48928f514916599acb905ddbea34</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor3</name>
    <filename>classArRetFunctor3.html</filename>
    <templarg>Ret</templarg>
    <templarg>P1</templarg>
    <templarg>P2</templarg>
    <templarg>P3</templarg>
    <base>ArRetFunctor2</base>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a028f2114bd601f74f595651159551546</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a2f75e68e6510a34a8065dbf645cd0313</anchor>
      <arglist>(P1 p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>af6b03669d431e4dcd1bd538832d53ba8</anchor>
      <arglist>(P1 p1, P2 p2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a18e28cc047716df90436da9cce6a520d</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor3</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a2fdcc68e669cd6a380fae27723a9c3d9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor3&lt; ArDeviceConnection *, const char *, const char *, const char * &gt;</name>
    <filename>classArRetFunctor3.html</filename>
    <base>ArRetFunctor2&lt; ArDeviceConnection *, const char *, const char * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a028f2114bd601f74f595651159551546</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a2f75e68e6510a34a8065dbf645cd0313</anchor>
      <arglist>(const char *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>af6b03669d431e4dcd1bd538832d53ba8</anchor>
      <arglist>(const char *p1, const char *p2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a18e28cc047716df90436da9cce6a520d</anchor>
      <arglist>(const char *p1, const char *p2, const char *p3)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor3</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a2fdcc68e669cd6a380fae27723a9c3d9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor3&lt; bool, ArArgumentBuilder *, char *, size_t &gt;</name>
    <filename>classArRetFunctor3.html</filename>
    <base>ArRetFunctor2&lt; bool, ArArgumentBuilder *, char * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a028f2114bd601f74f595651159551546</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a2f75e68e6510a34a8065dbf645cd0313</anchor>
      <arglist>(ArArgumentBuilder *p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>af6b03669d431e4dcd1bd538832d53ba8</anchor>
      <arglist>(ArArgumentBuilder *p1, char *p2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a18e28cc047716df90436da9cce6a520d</anchor>
      <arglist>(ArArgumentBuilder *p1, char *p2, size_tp3)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor3</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a2fdcc68e669cd6a380fae27723a9c3d9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor3&lt; int, ArTime, ArPose *, ArPoseWithTime * &gt;</name>
    <filename>classArRetFunctor3.html</filename>
    <base>ArRetFunctor2&lt; int, ArTime, ArPose * &gt;</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a028f2114bd601f74f595651159551546</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a2f75e68e6510a34a8065dbf645cd0313</anchor>
      <arglist>(ArTimep1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>af6b03669d431e4dcd1bd538832d53ba8</anchor>
      <arglist>(ArTimep1, ArPose *p2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a18e28cc047716df90436da9cce6a520d</anchor>
      <arglist>(ArTimep1, ArPose *p2, ArPoseWithTime *p3)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor3</name>
      <anchorfile>classArRetFunctor3.html</anchorfile>
      <anchor>a2fdcc68e669cd6a380fae27723a9c3d9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor3C</name>
    <filename>classArRetFunctor3C.html</filename>
    <templarg>Ret</templarg>
    <templarg>T</templarg>
    <templarg>P1</templarg>
    <templarg>P2</templarg>
    <templarg>P3</templarg>
    <base>ArRetFunctor3</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>ae8b54c4d57747f931564ff6a21127cae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>affb1c84bebe34fc97aa7f662b63da284</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a63dc4068c018b62c0d25a1c907c1bf16</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>aa32534d7b5430f9996d00297a2cad515</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a1a3aa5f5e2cf1223ad472b28c0d5e67b</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a96b7f14f0ae48228d88c1c3d7d820b1a</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a789b0e548b2e16781c730975403cf666</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>ab111f047357f2fce317a576e38ec9202</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a377d859312b1ec04ac7a8dc8c152d395</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a26fd3fb978fff1c6ade48599b1fc4fbc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a1f2fc6e6dac1f95b280b4c03e083d1fe</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>afafc0e7bb64cfe8fbde392df4c9e078e</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>af78cff37fa8e4dff4ca74001d2cdba3c</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a863f88b82699e95b8740fcd326b90240</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a0d33d3af9876891b46cae747b26f5ca6</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a0220fd5edf4ee84d1aab96ec3c8a1407</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a242ee5ea8617dc20ce081bb11e9535df</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a8c9d61f8c4f68f6a9d66868626d54f9b</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>affb790a1aafbbc48113ec043baa6cac7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor3C&lt; bool, ArConfig, ArArgumentBuilder *, char *, size_t &gt;</name>
    <filename>classArRetFunctor3C.html</filename>
    <base>ArRetFunctor3&lt; bool, ArArgumentBuilder *, char *, size_t &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>ae8b54c4d57747f931564ff6a21127cae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>affb1c84bebe34fc97aa7f662b63da284</anchor>
      <arglist>(ArConfig &amp;obj, bool(ArConfig::*func)(ArArgumentBuilder *, char *, size_t))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a63dc4068c018b62c0d25a1c907c1bf16</anchor>
      <arglist>(ArConfig &amp;obj, bool(ArConfig::*func)(ArArgumentBuilder *, char *, size_t), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>aa32534d7b5430f9996d00297a2cad515</anchor>
      <arglist>(ArConfig &amp;obj, bool(ArConfig::*func)(ArArgumentBuilder *, char *, size_t), ArArgumentBuilder *p1, char *p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a1a3aa5f5e2cf1223ad472b28c0d5e67b</anchor>
      <arglist>(ArConfig &amp;obj, bool(ArConfig::*func)(ArArgumentBuilder *, char *, size_t), ArArgumentBuilder *p1, char *p2, size_tp3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a96b7f14f0ae48228d88c1c3d7d820b1a</anchor>
      <arglist>(ArConfig *obj, bool(ArConfig::*func)(ArArgumentBuilder *, char *, size_t))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a789b0e548b2e16781c730975403cf666</anchor>
      <arglist>(ArConfig *obj, bool(ArConfig::*func)(ArArgumentBuilder *, char *, size_t), ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>ab111f047357f2fce317a576e38ec9202</anchor>
      <arglist>(ArConfig *obj, bool(ArConfig::*func)(ArArgumentBuilder *, char *, size_t), ArArgumentBuilder *p1, char *p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a377d859312b1ec04ac7a8dc8c152d395</anchor>
      <arglist>(ArConfig *obj, bool(ArConfig::*func)(ArArgumentBuilder *, char *, size_t), ArArgumentBuilder *p1, char *p2, size_tp3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a26fd3fb978fff1c6ade48599b1fc4fbc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a1f2fc6e6dac1f95b280b4c03e083d1fe</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>afafc0e7bb64cfe8fbde392df4c9e078e</anchor>
      <arglist>(ArArgumentBuilder *p1, char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>af78cff37fa8e4dff4ca74001d2cdba3c</anchor>
      <arglist>(ArArgumentBuilder *p1, char *p2, size_tp3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a863f88b82699e95b8740fcd326b90240</anchor>
      <arglist>(ArArgumentBuilder *p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a0d33d3af9876891b46cae747b26f5ca6</anchor>
      <arglist>(char *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a0220fd5edf4ee84d1aab96ec3c8a1407</anchor>
      <arglist>(size_tp3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a242ee5ea8617dc20ce081bb11e9535df</anchor>
      <arglist>(ArConfig *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a8c9d61f8c4f68f6a9d66868626d54f9b</anchor>
      <arglist>(ArConfig &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>affb790a1aafbbc48113ec043baa6cac7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor3C&lt; int, ArRobot, ArTime, ArPose *, ArPoseWithTime * &gt;</name>
    <filename>classArRetFunctor3C.html</filename>
    <base>ArRetFunctor3&lt; int, ArTime, ArPose *, ArPoseWithTime * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>ae8b54c4d57747f931564ff6a21127cae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>affb1c84bebe34fc97aa7f662b63da284</anchor>
      <arglist>(ArRobot &amp;obj, int(ArRobot::*func)(ArTime, ArPose *, ArPoseWithTime *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a63dc4068c018b62c0d25a1c907c1bf16</anchor>
      <arglist>(ArRobot &amp;obj, int(ArRobot::*func)(ArTime, ArPose *, ArPoseWithTime *), ArTimep1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>aa32534d7b5430f9996d00297a2cad515</anchor>
      <arglist>(ArRobot &amp;obj, int(ArRobot::*func)(ArTime, ArPose *, ArPoseWithTime *), ArTimep1, ArPose *p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a1a3aa5f5e2cf1223ad472b28c0d5e67b</anchor>
      <arglist>(ArRobot &amp;obj, int(ArRobot::*func)(ArTime, ArPose *, ArPoseWithTime *), ArTimep1, ArPose *p2, ArPoseWithTime *p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a96b7f14f0ae48228d88c1c3d7d820b1a</anchor>
      <arglist>(ArRobot *obj, int(ArRobot::*func)(ArTime, ArPose *, ArPoseWithTime *))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a789b0e548b2e16781c730975403cf666</anchor>
      <arglist>(ArRobot *obj, int(ArRobot::*func)(ArTime, ArPose *, ArPoseWithTime *), ArTimep1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>ab111f047357f2fce317a576e38ec9202</anchor>
      <arglist>(ArRobot *obj, int(ArRobot::*func)(ArTime, ArPose *, ArPoseWithTime *), ArTimep1, ArPose *p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a377d859312b1ec04ac7a8dc8c152d395</anchor>
      <arglist>(ArRobot *obj, int(ArRobot::*func)(ArTime, ArPose *, ArPoseWithTime *), ArTimep1, ArPose *p2, ArPoseWithTime *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a26fd3fb978fff1c6ade48599b1fc4fbc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a1f2fc6e6dac1f95b280b4c03e083d1fe</anchor>
      <arglist>(ArTimep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>afafc0e7bb64cfe8fbde392df4c9e078e</anchor>
      <arglist>(ArTimep1, ArPose *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>af78cff37fa8e4dff4ca74001d2cdba3c</anchor>
      <arglist>(ArTimep1, ArPose *p2, ArPoseWithTime *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a863f88b82699e95b8740fcd326b90240</anchor>
      <arglist>(ArTimep1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a0d33d3af9876891b46cae747b26f5ca6</anchor>
      <arglist>(ArPose *p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a0220fd5edf4ee84d1aab96ec3c8a1407</anchor>
      <arglist>(ArPoseWithTime *p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a242ee5ea8617dc20ce081bb11e9535df</anchor>
      <arglist>(ArRobot *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>a8c9d61f8c4f68f6a9d66868626d54f9b</anchor>
      <arglist>(ArRobot &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor3C</name>
      <anchorfile>classArRetFunctor3C.html</anchorfile>
      <anchor>affb790a1aafbbc48113ec043baa6cac7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor4</name>
    <filename>classArRetFunctor4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor3</base>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor4.html</anchorfile>
      <anchor>a5975a46021f9c0f228f806661665eb0e</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor4.html</anchorfile>
      <anchor>a50183055323f311b54943edfa4884719</anchor>
      <arglist>(P1 p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor4.html</anchorfile>
      <anchor>a9f7acb22bd63f932071c482c374e7115</anchor>
      <arglist>(P1 p1, P2 p2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor4.html</anchorfile>
      <anchor>a1e35847b0ffc8e2bb8f656b30927c60b</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor4.html</anchorfile>
      <anchor>a997b700ebee894bfafccabe701748469</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor4</name>
      <anchorfile>classArRetFunctor4.html</anchorfile>
      <anchor>a8eb57eec624d766e35e1eb17553dd1e7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor4C</name>
    <filename>classArRetFunctor4C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor4</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a2fb5ed4f2564d0c67fd7a9e8fcf48229</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>acd23d592b852c46fa82bd328b44d9685</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>ad03252853d3b45342480af3e7970e2f6</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a296824cf593afa62f359463c635cc2c9</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a8b8087ea6fed5e6237e5130a76f60a78</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a75e994899ede9a638d460dbe2b0ecd5e</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>ac33786fb1e6225dffbc2ddc2bc9e49e6</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a1069bb14829466d064e4b2293866ac2b</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a1cee4782c707c238d6125a310006d361</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>ad603ebb4f1bd246a34fc319217d727e9</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>abebe79e3192bdd86a09a7555d4c4769b</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a6916b1c238c8ce9617ffc9004498b2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>ac502417eb51e5d7d39ef2393855e2ddd</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>acd78ee3670c836a1a5c0f61e9ef78a79</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a17ce3db7a9af7ba299d830cc4120fa48</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a8191e974df8bd23dc867dfc7cbb030f0</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>aa9bc40f4963736ac375b7e7b2e4a2faa</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a0b58a5c4307465f2f4b1d9b6d97c917e</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a3e35ec4e735b7380e113801eb6f6821c</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a222510def15ba17a9b1fc3ab4f15d739</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>ae9c21f859b99d5a158f9bada129bd391</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a9a7369a0a427f3c6bcd9b8211e3744f7</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor4C</name>
      <anchorfile>classArRetFunctor4C.html</anchorfile>
      <anchor>a777f07116ed181937814aae45012a086</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor5</name>
    <filename>classArRetFunctor5.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor4</base>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5.html</anchorfile>
      <anchor>a411db567041c6fbac56b538719cddb43</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5.html</anchorfile>
      <anchor>a99c5794cf6c82d2d890357aaddb9f872</anchor>
      <arglist>(P1 p1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5.html</anchorfile>
      <anchor>acfa5b75aed7a4499d80b0c67b2ed0d41</anchor>
      <arglist>(P1 p1, P2 p2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5.html</anchorfile>
      <anchor>a20ea9d4d0825e107df6dfacf6ddd41d4</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5.html</anchorfile>
      <anchor>a6806af7d6174f5893e06be7c2d174f37</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5.html</anchorfile>
      <anchor>a7e8b98491d5f6c410d939298da7e4456</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor5</name>
      <anchorfile>classArRetFunctor5.html</anchorfile>
      <anchor>a565f864f10f022c8c1fff3ee28990ca4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor5C</name>
    <filename>classArRetFunctor5C.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ArRetFunctor5</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>aaea7b476fdcdc19942f5a40901d9c726</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>ab5ef509efc605fce9e03acb87a1e03be</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a96e453945cdc8935a7926c1800ef3a75</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>aa4ef023e54535de13e0d302794a773b7</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>ac737780d87da90b9266a0ddc6d7d2da7</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>ae9fdef7ac25c7a82d103fb48cef9c9ed</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a5610d1b763cc9078ab46b5070ddb83cc</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a9a2103c90c556cab05c0a0679acd51f9</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>ae75557b9553fc6078e6d611e6ea35284</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5), P1 p1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a696a88270bb8246e6a8c53f6e661af3a</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a8fbe9be0ace2de09e2f42cdd5c17d1d2</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a6acec91348bb7a482d1a9db17bd72e44</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>ab99df168d34eb838527faed8c61573f9</anchor>
      <arglist>(T *obj, Ret(T::*func)(P1, P2, P3, P4, P5), P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a514f1e15e024266cbade1a3a1c066004</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a5d34074be22dbc2774a644e5ae995601</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>ac7a60a483bd1666bbdbcd9cd9d19cb1a</anchor>
      <arglist>(P1 p1, P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a088916ace5b326fcce80a062027e3d84</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a33bd78a77dc1238f28d68d9f101ec41d</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a8b0ad72e7f6c3b5505ff003ddec40f5e</anchor>
      <arglist>(P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP1</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a91ed73513ba65d52446104d6a731bf94</anchor>
      <arglist>(P1 p1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP2</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>ad407a18b165cd547f9a02f51629c6a23</anchor>
      <arglist>(P2 p2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP3</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a169d983df800dbbdc7bdf2fbc927594b</anchor>
      <arglist>(P3 p3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP4</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a7bbfba155f87661d75bc1d45261156af</anchor>
      <arglist>(P4 p4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setP5</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>ad3278c0cffa17007ff865821097db28f</anchor>
      <arglist>(P5 p5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>a240938e52eded56c0c5c7c0ec3e633c7</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>acd0ad886fe418ec04159bf3c9a21704d</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor5C</name>
      <anchorfile>classArRetFunctor5C.html</anchorfile>
      <anchor>af2793ac7a2c9863ffc548bae37c00665</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; ArBatteryMTX * &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArBatteryMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; ArDeviceConnection * &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArDeviceConnection *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; ArLaser * &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArLaser *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; ArLCDMTX * &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArLCDMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; ArSonarMTX * &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArSonarMTX *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; bool &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; const std::list&lt; ArArgumentBuilder * &gt; * &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::list&lt; ArArgumentBuilder * &gt; *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; double &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; int &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; State &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual State</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; unsigned int &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; unsigned long &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned long</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctor&lt; void * &gt;</name>
    <filename>classArRetFunctor.html</filename>
    <base>ArFunctor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>invoke</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>aa444b50e3a24ec21352a663aed0c17f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a941fc1c54f2d841f11c9dd899e15e88d</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctor</name>
      <anchorfile>classArRetFunctor.html</anchorfile>
      <anchor>a266beb798a65cbe5a2f09c41f8077ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC</name>
    <filename>classArRetFunctorC.html</filename>
    <templarg>Ret</templarg>
    <templarg>T</templarg>
    <base>ArRetFunctor</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(T &amp;obj, Ret(T::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(T *obj, Ret(T::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ret</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(T &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArBatteryConnector &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArBatteryConnector &amp;obj, bool(ArBatteryConnector::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArBatteryConnector *obj, bool(ArBatteryConnector::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArBatteryConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArBatteryConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArBatteryMTX &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArBatteryMTX &amp;obj, bool(ArBatteryMTX::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArBatteryMTX *obj, bool(ArBatteryMTX::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArBatteryMTX *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArBatteryMTX &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArCompassConnector &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArCompassConnector &amp;obj, bool(ArCompassConnector::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArCompassConnector *obj, bool(ArCompassConnector::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArCompassConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArCompassConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArGPS &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArGPS &amp;obj, bool(ArGPS::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArGPS *obj, bool(ArGPS::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArGPS *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArGPS &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArGPSConnector &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArGPSConnector &amp;obj, bool(ArGPSConnector::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArGPSConnector *obj, bool(ArGPSConnector::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArGPSConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArGPSConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArLaserConnector &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArLaserConnector &amp;obj, bool(ArLaserConnector::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArLaserConnector *obj, bool(ArLaserConnector::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArLaserConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArLaserConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArLCDConnector &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArLCDConnector &amp;obj, bool(ArLCDConnector::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArLCDConnector *obj, bool(ArLCDConnector::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArLCDConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArLCDConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArLCDMTX &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArLCDMTX &amp;obj, bool(ArLCDMTX::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArLCDMTX *obj, bool(ArLCDMTX::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArLCDMTX *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArLCDMTX &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArLMS1XX &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArLMS1XX &amp;obj, bool(ArLMS1XX::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArLMS1XX *obj, bool(ArLMS1XX::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArLMS1XX *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArLMS1XX &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArLMS2xx &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArLMS2xx &amp;obj, bool(ArLMS2xx::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArLMS2xx *obj, bool(ArLMS2xx::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArLMS2xx *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArLMS2xx &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArMTXIO &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArMTXIO &amp;obj, bool(ArMTXIO::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArMTXIO *obj, bool(ArMTXIO::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArMTXIO *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArMTXIO &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArPTZConnector &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArPTZConnector &amp;obj, bool(ArPTZConnector::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArPTZConnector *obj, bool(ArPTZConnector::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArPTZConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArPTZConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArRobot &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArRobot &amp;obj, bool(ArRobot::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArRobot *obj, bool(ArRobot::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArRobot *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArRobot &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArRobotConfig &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArRobotConfig &amp;obj, bool(ArRobotConfig::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArRobotConfig *obj, bool(ArRobotConfig::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArRobotConfig *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArRobotConfig &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArRobotConnector &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArRobotConnector &amp;obj, bool(ArRobotConnector::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArRobotConnector *obj, bool(ArRobotConnector::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArRobotConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArRobotConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArRobotParams &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArRobotParams &amp;obj, bool(ArRobotParams::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArRobotParams *obj, bool(ArRobotParams::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArRobotParams *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArRobotParams &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArS3Series &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArS3Series &amp;obj, bool(ArS3Series::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArS3Series *obj, bool(ArS3Series::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArS3Series *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArS3Series &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArSonarConnector &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArSonarConnector &amp;obj, bool(ArSonarConnector::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArSonarConnector *obj, bool(ArSonarConnector::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArSonarConnector *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArSonarConnector &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArSonarMTX &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArSonarMTX &amp;obj, bool(ArSonarMTX::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArSonarMTX *obj, bool(ArSonarMTX::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArSonarMTX *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArSonarMTX &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArSpeechSynth &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArSpeechSynth &amp;obj, bool(ArSpeechSynth::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArSpeechSynth *obj, bool(ArSpeechSynth::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArSpeechSynth *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArSpeechSynth &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArSZSeries &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArSZSeries &amp;obj, bool(ArSZSeries::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArSZSeries *obj, bool(ArSZSeries::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArSZSeries *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArSZSeries &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArUrg &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArUrg &amp;obj, bool(ArUrg::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArUrg *obj, bool(ArUrg::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArUrg *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArUrg &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArUrg_2_0 &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArUrg_2_0 &amp;obj, bool(ArUrg_2_0::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArUrg_2_0 *obj, bool(ArUrg_2_0::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArUrg_2_0 *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArUrg_2_0 &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ArVersalogicIO &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArVersalogicIO &amp;obj, bool(ArVersalogicIO::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArVersalogicIO *obj, bool(ArVersalogicIO::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArVersalogicIO *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArVersalogicIO &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; bool, ConfigExample &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; bool &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ConfigExample &amp;obj, bool(ConfigExample::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ConfigExample *obj, bool(ConfigExample::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ConfigExample *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ConfigExample &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; const std::list&lt; ArArgumentBuilder * &gt; *, ArRobotParams &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; const std::list&lt; ArArgumentBuilder * &gt; * &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArRobotParams &amp;obj, const std::list&lt; ArArgumentBuilder * &gt; *(ArRobotParams::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArRobotParams *obj, const std::list&lt; ArArgumentBuilder * &gt; *(ArRobotParams::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::list&lt; ArArgumentBuilder * &gt; *</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArRobotParams *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArRobotParams &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; State, ArP2Arm &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; State &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArP2Arm &amp;obj, State(ArP2Arm::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArP2Arm *obj, State(ArP2Arm::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArP2Arm *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArP2Arm &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRetFunctorC&lt; unsigned int, ArRobot &gt;</name>
    <filename>classArRetFunctorC.html</filename>
    <base>ArRetFunctor&lt; unsigned int &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ad18d9b5152ad6318eea45f350233236b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a1ece220486b9146d0e57eda6eef3ef93</anchor>
      <arglist>(ArRobot &amp;obj, unsigned int(ArRobot::*func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a75c54d05c99b85ed198e1c602f283ed8</anchor>
      <arglist>(ArRobot *obj, unsigned int(ArRobot::*func)(void))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>invokeR</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>ab59bceb505f12713b03d61ce8fdba2e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a8ebc6a64f46ea70b8be7367d95f0e13d</anchor>
      <arglist>(ArRobot *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThis</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>a57a0037ff55cf36b0eb8fb76e26a5f7f</anchor>
      <arglist>(ArRobot &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRetFunctorC</name>
      <anchorfile>classArRetFunctorC.html</anchorfile>
      <anchor>acbb32d969d04b30fc822d3bef3b2dd80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRingQueue</name>
    <filename>classArRingQueue.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>advance_back</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>ae73cb1d2cec1e663c1157bc71b1d7f4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>advance_front</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>a7fa7e60371c7601f4e794d3e21e708f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRingQueue</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>a27771d7817cc4d0453d0b6b215913406</anchor>
      <arglist>(int capacity, T init_value)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; T &gt;::iterator</type>
      <name>back</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>ac8121a2877cfd695eed752e38249e196</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>capacity</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>a8d871f45e6528a36060b5541bee81fdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>afab0881bade43ecf422ec9a472d2acd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; T &gt;::iterator</type>
      <name>front</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>adaee28c1ea0a02b095691c9889d6058a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>full</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>a18f53abdfb4bc727120b62d814964cb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; T &gt;::iterator</type>
      <name>nil</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>a13605ef610f6092febeef27017e42a09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_front</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>a0e3239e02c975282a01f5a2c9f6daede</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>a1a049222bb51b8c94383b9669bbd4462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>a0de53f01e95093f30083dc551081e51b</anchor>
      <arglist>(const T &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>a929c549542dcfd3b8cbc4a0d0d838347</anchor>
      <arglist>(const T &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_without_expanding</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>aaac6c08ebabfa4bc5aa36375e7d98e7a</anchor>
      <arglist>(const T &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>a16e45c61b16569112fa265c9d3d305c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classArRingQueue.html</anchorfile>
      <anchor>af0a4a6353e476f0c592e2ce973c50d45</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRobot</name>
    <filename>classArRobot.html</filename>
    <member kind="enumvalue">
      <name>WAIT_CONNECTED</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25a6c3e75170d51e18f50c83a7046d285c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAIT_FAIL</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25a37a9aaec6fb0994dec5fa8baee7d825e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAIT_FAILED_CONN</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25a39f76df1a594e915e41f446cac776dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAIT_INTR</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25a1f230680ecc49647a0460f41865c5ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAIT_RUN_EXIT</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25ab764f90a0dd9921b66db2b6808336d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAIT_TIMEDOUT</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25a92a365fec5619b0c1e26188fe3f8a4fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WaitState</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAIT_CONNECTED</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25a6c3e75170d51e18f50c83a7046d285c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAIT_FAILED_CONN</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25a39f76df1a594e915e41f446cac776dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAIT_RUN_EXIT</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25ab764f90a0dd9921b66db2b6808336d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAIT_TIMEDOUT</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25a92a365fec5619b0c1e26188fe3f8a4fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAIT_INTR</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25a1f230680ecc49647a0460f41865c5ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAIT_FAIL</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a220edf37b6d65fbbe9922d11ccdf0a25a37a9aaec6fb0994dec5fa8baee7d825e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>actionHandler</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aa4f93c0e6c47259e6dceadb93ffbfaed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addAction</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga9ab030786d423237d3e4aa06c0e9d8ce</anchor>
      <arglist>(ArAction *action, int priority)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addBattery</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac9079f0de5c6200fe0b9ba13e6d93989</anchor>
      <arglist>(ArBatteryMTX *battery, int batteryNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConnectCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aa2d179de23b698c94d5bfc72eccdc4f9</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDisconnectNormallyCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac59da033f2b999a14f708b2383cf2433</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDisconnectOnErrorCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6c72afa22282c5ca961d2fa3ff03ad0c</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFailedConnectCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aba145e49558e845364ae2a90b9616f8b</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addLaser</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6d9977d830e47c98ada908014099e90b</anchor>
      <arglist>(ArLaser *laser, int laserNumber, bool addAsRangeDevice=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addLCD</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae2a87a26b81fd689240365b634740ef2</anchor>
      <arglist>(ArLCDMTX *lcd, int lcdNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPacketHandler</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a9710774cf8be7f146ca58f83dd076e3f</anchor>
      <arglist>(ArRetFunctor1&lt; bool, ArRobotPacket * &gt; *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRangeDevice</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a97d57b28549fdef851c00749a97cc776</anchor>
      <arglist>(ArRangeDevice *device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRunExitCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad59f7982d20c7fdf77c5713dcec6b691</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addSensorInterpTask</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab3ed1a09a96c009802ed64bbc6c75325</anchor>
      <arglist>(const char *name, int position, ArFunctor *functor, ArTaskState::State *state=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSetEncoderTransformCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6939a15302028024e722007c9d976e59</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addSonar</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a431954e0d6ce8fa3b45914dbc87580b0</anchor>
      <arglist>(ArSonarMTX *sonar, int sonarNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStabilizingCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae0b3506314c68b33d3074edd293c5004</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addUserTask</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a50070f4e19b91aaac20772d15d9ad805</anchor>
      <arglist>(const char *name, int position, ArFunctor *functor, ArTaskState::State *state=NULL)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>applyEncoderOffset</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae825bc1dcbe920708d9b6c9b3d9f9bc1</anchor>
      <arglist>(ArPoseWithTime from, ArTime to, ArPose *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyTransform</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a26b4415d1aebeeb847fbf471040862a7</anchor>
      <arglist>(ArTransform trans, bool doCumulative=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAutonomousDrivingSonarsEnabled</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2f137f19bc0a27c393ef13d97af6ec17</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areMotorsEnabled</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6f8b6b6ad679fc9c5c9ac96bc4636ba5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areSonarsEnabled</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac1dcf78d0e1b3f615d86abf4a500bee0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areSonarsEnabledLegacy</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4e82287f1a577cef02294d2470827e45</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ariaExitCallback</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1cfdc92b96b1333d00e57884dbc98671</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRobot</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab92dd002af5898b61ca6213e0c59f54e</anchor>
      <arglist>(const char *name=NULL, bool ignored=true, bool doSigHandle=true, bool normalInit=true, bool addAriaExitCallback=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>asyncConnect</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a48ba92e73c12765d68abd5289b3b1c84</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>asyncConnectHandler</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aded150a3282c5834dc8181914d2f3d68</anchor>
      <arglist>(bool tryHarderToConnect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachKeyHandler</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab4ea516667d2358f35b435d97b616ab1</anchor>
      <arglist>(ArKeyHandler *keyHandler, bool exitOnEscape=true, bool useExitNotShutdown=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>blockingConnect</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1a9e2605e3ea568d697b74992c3eef1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelConnection</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac802045cc50a2fac87fb82643feb583c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>checkRangeDevicesCumulativeBox</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2e2de80c209361b5480f27a6c58fd482</anchor>
      <arglist>(double x1, double y1, double x2, double y2, ArPose *readingPos=NULL, const ArRangeDevice **rangeDevice=NULL, bool useLocationDependentDevices=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>checkRangeDevicesCumulativePolar</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aa64cfe3778a208d583fd0d616d155e51</anchor>
      <arglist>(double startAngle, double endAngle, double *angle=NULL, const ArRangeDevice **rangeDevice=NULL, bool useLocationDependentDevices=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>checkRangeDevicesCurrentBox</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af0c545d675b449171f5523513abea282</anchor>
      <arglist>(double x1, double y1, double x2, double y2, ArPose *readingPos=NULL, const ArRangeDevice **rangeDevice=NULL, bool useLocationDependentDevices=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>checkRangeDevicesCurrentPolar</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af022d2fe8078cd7f9dc82631e40fad13</anchor>
      <arglist>(double startAngle, double endAngle, double *angle=NULL, const ArRangeDevice **rangeDevice=NULL, bool useLocationDependentDevices=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearDirectMotion</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5b1b947ef2e28d171f023b1bbe5d02a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>com</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a165e27bc81ed9f159820dfdf215d5500</anchor>
      <arglist>(unsigned char command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>com2Bytes</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a37991669749d064691406e575b00564d</anchor>
      <arglist>(unsigned char command, char high, char low)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>comDataN</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a670ddd4a4f11d10e1e20b04d8d70c672</anchor>
      <arglist>(unsigned char command, const char *data, int size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>comInt</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aceef80a6274fb34aafcc422e4b1778c1</anchor>
      <arglist>(unsigned char command, short int argument)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>comStr</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af0b32b39e44d1175b9cffa3f010459a1</anchor>
      <arglist>(unsigned char command, const char *argument)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>comStrN</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4dbea0c407858d3f715027a6832b9698</anchor>
      <arglist>(unsigned char command, const char *str, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deactivateActions</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aa1751ced309c09b75e4525070c58968a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableMotors</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga834f25d63f93cd8a2f83cbbdb902b36d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableSonar</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga1ece2f034d28b16bbc864d3379430b97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>abafe0172b9aa753a19e05a833b23fe6c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dropConnection</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6fbcf994706ae402f267e55dddff4fd5</anchor>
      <arglist>(const char *technicalReason=&quot;Lost connection to the microcontroller because of undefined error.&quot;, const char *userReason=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableAutonomousDrivingSonar</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a91d627f46e23e33427fcb83ae310e00c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableMotors</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaa3657bebab0086dd14ed0c8c3f76dc8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableSonar</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gadc8434bd495c10f0200e16c811347fcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>failedConnect</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a0850760a950b7a678c3ef955d14c8ce3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArAction *</type>
      <name>findAction</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a932c6a28fda13518cdb6070b57786050</anchor>
      <arglist>(const char *actionName)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>findAngleTo</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gab8cf284a0149394bf8735c35f71a6138</anchor>
      <arglist>(const ArPose pose)</arglist>
    </member>
    <member kind="function">
      <type>const ArBatteryMTX *</type>
      <name>findBattery</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5b8a87b2399924dc0cd5b9ec1e06bd44</anchor>
      <arglist>(int batteryNumber) const </arglist>
    </member>
    <member kind="function">
      <type>ArBatteryMTX *</type>
      <name>findBattery</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a01a93de677ed5b59675a211fe0e99c3d</anchor>
      <arglist>(int batteryNumber)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>findDeltaHeadingTo</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga0092f3289d46d70211fd42e88bf13af3</anchor>
      <arglist>(const ArPose pose)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>findDistanceTo</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gae933c1570c1a267632a8ca8db112195a</anchor>
      <arglist>(const ArPose pose)</arglist>
    </member>
    <member kind="function">
      <type>const ArLaser *</type>
      <name>findLaser</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6078092b71a4e521bbc8f0cb5c92da46</anchor>
      <arglist>(int laserNumber) const </arglist>
    </member>
    <member kind="function">
      <type>ArLaser *</type>
      <name>findLaser</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a425637b47df6f802d47d94be0d0d4363</anchor>
      <arglist>(int laserNumber)</arglist>
    </member>
    <member kind="function">
      <type>const ArLCDMTX *</type>
      <name>findLCD</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aac82c5a80ff8c93c7b9c7a7a000ef326</anchor>
      <arglist>(int lcdNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>ArLCDMTX *</type>
      <name>findLCD</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5dd726686a1ca717c8183ed8beceaa1b</anchor>
      <arglist>(int lcdNumber=1)</arglist>
    </member>
    <member kind="function">
      <type>const ArRangeDevice *</type>
      <name>findRangeDevice</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1f42bf67e357145f7f60d7ff3f8226c7</anchor>
      <arglist>(const char *name, bool ignoreCase=false) const </arglist>
    </member>
    <member kind="function">
      <type>ArRangeDevice *</type>
      <name>findRangeDevice</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af80ddf3c6e72f572d38127874467330d</anchor>
      <arglist>(const char *name, bool ignoreCase=false)</arglist>
    </member>
    <member kind="function">
      <type>const ArSonarMTX *</type>
      <name>findSonar</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6692abd7564b44e8d57a6536afcb1456</anchor>
      <arglist>(int sonarNumber) const </arglist>
    </member>
    <member kind="function">
      <type>ArSonarMTX *</type>
      <name>findSonar</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad28f58d6b5b29a6db8ed58accd187022</anchor>
      <arglist>(int sonarNumber)</arglist>
    </member>
    <member kind="function">
      <type>ArSyncTask *</type>
      <name>findTask</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3897f1cb3a9601aea238d74662ccbce9</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>ArSyncTask *</type>
      <name>findTask</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a26d0adc2e08a1998a21f99af49c6bf74</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>ArSyncTask *</type>
      <name>findUserTask</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6c9cf2f4e8326ee14ad784b29f967442</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>ArSyncTask *</type>
      <name>findUserTask</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a062db28aabb7467058617869453d15ee</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finishedConnection</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a98a0fab2d4f3e78203d571e38107dbcf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceTryingToMove</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af9cff7545c8ac07fae532c2e33d88193</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteMaxLatAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2e868a7a238614ce130d2b8993a01242</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteMaxLatDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a7b63cd44b1e9712e8d32e6092955b8bc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteMaxLatVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a15310086f4c3d65eeba845e1e222c687</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteMaxRotAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4d2488ad319fee25bddf2977806e177a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteMaxRotDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3a80b0d706aab3c8f523fef40e48f65c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteMaxRotVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2eb8521e993ca82222a25f7cd0fb9267</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteMaxTransAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aa7186f536ff75f789fd946c6d24b9dc1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteMaxTransDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac8e29d5328e562c8522fe5ce4783c407</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteMaxTransNegVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4265fae07dc2ebe02c61684ab914b0f0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteMaxTransVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab034c1771a3c4daae2c9ec13faa78940</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArResolver::ActionMap *</type>
      <name>getActionMap</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab981883822380e37cf54b63ab9c7caa7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getAnalog</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4a9b7cb46e7f9a3205db04b292ebe09b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAnalogPortSelected</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a882994178beeca41efb2cfc359ec17fb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; int, ArBatteryMTX * &gt; *</type>
      <name>getBatteryMap</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aeb1d83e7bde2b58e838a4ae4876444e3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; int, ArBatteryMTX * &gt; *</type>
      <name>getBatteryMap</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aebdba1a2d0a13b79968c5b7e7786bb19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArRobotBatteryPacketReader *</type>
      <name>getBatteryPacketReader</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a27f395e05cd251be48e3315252c84d04</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBatteryVoltage</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a8d1637a9f3d37e55768d2aa1c8c272d6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getBatteryVoltageAverageOfNum</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a002e42446a0dc5b5e346cfb581526880</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBatteryVoltageNow</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5d2eb8004c5e158118ee1e5e35305fa1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ChargeState</type>
      <name>getChargeState</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2a6ff4367efe6753b1242bd19cf79733</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getChargeStateName</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>abe469b391546e0e7525e863a341b61f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getClosestSonarNumber</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga30d3f70890eee08e172b21aace11ad39</anchor>
      <arglist>(double startAngle, double endAngle) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getClosestSonarRange</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga5a1512a405e305ff4a7ebd47e22b9fbb</anchor>
      <arglist>(double startAngle, double endAngle) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCompass</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3067b7048faeb8353627b89179ae80a0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getConnectionCycleMultiplier</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac22e0ac0e2e0daafc2150dd7bd74c98a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getConnectionOpenedTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3aac23599973ee3f458975d135254de7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getConnectionTimeoutTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a573d8e436055e757139be70c15882cb1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getControl</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a048f4392751fd3cd748ed5e98eda4e14</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getCounter</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a7a07a4c9b92e576fe2ed246d185c54b2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getCycleTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3a7ff3682cb5e77de50800b8da83d411</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getCycleWarningTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5e52b46c0855875f515b4ff96eafaf72</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getCycleWarningTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae8ea073f7cd6b111f10794b1e3a9f0b5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae5062de3fbaf03e7296905f01eaa911d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getDigIn</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4dc15a333b8d16e1846fc59640802542</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getDigOut</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a86c049112a9a84ac2785a8fef5a15869</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getDirectMotionPrecedenceTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab8d78b33276fef00976343d5e1aab141</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDoNotSwitchBaud</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1fbeb2192ff0c5673fc26c55ae223a8b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDropConnectionReason</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2c4a6ccea3a15015d96c24042e18da1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDropConnectionUserReason</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4a32c9367cc2e8bfc2833747d8aab27a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArRetFunctor1&lt; double, ArPoseWithTime &gt; *</type>
      <name>getEncoderCorrectionCallback</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a28c480cf3728e1b397f9e3d5aa4f99ae</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getEncoderPose</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6299aaf435ca151f9b15a8cb5bfa9ad3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getEncoderPoseInterpNumReadings</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a466b69af8b78435fc39902d50e34422d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getEncoderPoseInterpPosition</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>acf5d017844d038389e7afe0f315adfee</anchor>
      <arglist>(ArTime timeStamp, ArPose *position, ArPoseWithTime *mostRecent=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ArRetFunctor3&lt; int, ArTime, ArPose *, ArPoseWithTime * &gt; *</type>
      <name>getEncoderPoseInterpPositionCallback</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a156ab9e0085033bf5afea34b133b7b6a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEncoderTh</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6f4e4929576b7984c3b6773b31284682</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArTransform</type>
      <name>getEncoderTransform</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a82000979d3a27a3651e282ecaf269f6d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEncoderX</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2b4c283550658702cbcc8825f91d52c3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEncoderY</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a01fd4cd6a527ceaf48aab977060836a4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getEstop</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5bf9df08c053cc0edeed3794f5efaa65</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFaultFlags</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aab7e2e22bf9fd653f5bbd93027f2a925</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFlags</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab0f5eeb8f1a16707db3ce41914f5d30b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFlags3</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>abd4eeeea4cb59928d66667ea6543ca4a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getHeadingDoneDiff</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae74f4034aa76d90b89814532f80827bd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIOAnalog</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>adca19681be52281166561bebe66c233c</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIOAnalogSize</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a279d422189422cae160182e698fd2bd2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIOAnalogVoltage</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae70658f0d758d17cbde61f9360bbebae</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getIODigIn</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a32ddf472935dfd0f9a3b07a9e77724db</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIODigInSize</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>afa5f06cc74505bfe4faf3c54a0844b4d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getIODigOut</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aa2a1a6282447edac1b5452313b239d22</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIODigOutSize</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab18ce676c4dc49103943fde8ba7227da</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getIOPacketTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>afaddeee0d58e37971a09d51123093ac0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getKeepControlRaw</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2a1890225fc4b68a405a3249f1f7d581</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArKeyHandler *</type>
      <name>getKeyHandler</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae3318c7ee929a529e4524a177f3fc383</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; int, ArLaser * &gt; *</type>
      <name>getLaserMap</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a62ad0a5f2cc0973f08f8d85bea1d5d7b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; int, ArLaser * &gt; *</type>
      <name>getLaserMap</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a922acdfed9a3f5f139e76acdbbad3251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastOdometryTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a9f1f2456d5f66a3fc8c84bd6ca6a4ac8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastPacketTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aeba13cbc8ec6d12c646b15d1d589b8c8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac9d69e90addebe23013c15de1a0ac072</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aed3ca6c5126328cf0fa04fa38fb635be</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a876ee53aa68d3bdcc73eed3e5db0278b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatVelMax</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2717d93b14fc5c6444927052cb188769</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; int, ArLCDMTX * &gt; *</type>
      <name>getLCDMap</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a001b1b2913f6f9dea0a6645a50e16693</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; int, ArLCDMTX * &gt; *</type>
      <name>getLCDMap</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ace9fe6f5f0a349827acc1eb93fae2dae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>long int</type>
      <name>getLeftEncoder</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a34d0e9a99a59b5e8c52ff791806279d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLeftVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5ccc6c1910c80c4be5370345aa8ae986</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLogActions</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aba697efabbcbb5f403a17506159095ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLogMovementReceived</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae2a0c4186f1ad2645ef04d58bce45c5b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLogMovementSent</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>adc361ee3ab9c33f402028accc308cfcc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLogSIPContents</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae1f2634279ef2cecce33bfd1682cbab5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLogVelocitiesReceived</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aa50b2f540790c1449c08f040d995ed6e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMotorPacCount</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a9eb53fc27147cd3467fa3254cbb829f0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMoveDoneDist</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2a7d0fbf1c8850564db096a17c140771</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1280c8f7e484badbc406961cbf1cf5f4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getNoTimeWarningThisCycle</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a437d4f47a8da3cb0fa3bcdd3d05e5c20</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getNumFrontBumpers</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>acd3a973c2a9cb802fd710a96959960a6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getNumRearBumpers</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a9951721043398e0cf0cb31903702a23c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSonar</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gae417de0a49281c6fcaec4a5092b87382</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOdometerDegrees</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af3398db8720f1feedddff4f499b0375a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOdometerDistance</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad61b6034289910e972e2cefb201da430</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOdometerDistanceMeters</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6b8a697146a54fa5e3b51bc72eb5c863</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOdometerTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a35e3c93f4aa94038b5aa659ceead5fec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOdometerTimeMinutes</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4b393a7301e47b3169e29ff19f90af83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOdometryDelay</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6a4e025dcec4cb0e078fe63597259cfe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const ArRobotConfigPacketReader *</type>
      <name>getOrigRobotConfig</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>abd59593d76f616951dc77110e55802f5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArRobotPacketReceiver *</type>
      <name>getPacketReceiver</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a19c485d61dc0a65f8c7bd387a23782da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArRobotPacketSender *</type>
      <name>getPacketSender</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a62a3af933d718789dbf5317975b6eec6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPacketsReceivedTracking</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aa43def72e6d15556716d48f1394caeee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPacketsSentTracking</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a541224871e44e297bb2654969a3c560c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getPose</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga25c215578baa598a8916947bdf6e1285</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPoseInterpNumReadings</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae9e8bbfbd30cba2e7006475a6da11c08</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArInterpolation *</type>
      <name>getPoseInterpolation</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a273a8826cfd8a9d18e9162a62f7ecfcb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPoseInterpPosition</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad4eae6c548eae420ea4760fa773dd0f8</anchor>
      <arglist>(ArTime timeStamp, ArPose *position, ArPoseWithTime *mostRecent=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ArRetFunctor3&lt; int, ArTime, ArPose *, ArPoseWithTime * &gt; *</type>
      <name>getPoseInterpPositionCallback</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3465969296dd4aa4a12c7b9fcc4e975a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArPTZ *</type>
      <name>getPTZ</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a31cfaa5f58cbb24be0a9beb4aa626871</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; ArRangeDevice * &gt; *</type>
      <name>getRangeDeviceList</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>adb9735381c55527b552fce2e702adc39</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getRawEncoderPose</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6c2767cb688d85696ed5340c2408636d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRealBatteryVoltage</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a95343f45b0c19031fdbc560cb37483ba</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getRealBatteryVoltageAverageOfNum</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aec162fbd72584710a86f24772f5fcbe0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRealBatteryVoltageNow</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a49b20e0ba7cc4e376648f4f29a02157a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArResolver *</type>
      <name>getResolver</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a287f7a9789801e01bd98bf68c1a20485</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>long int</type>
      <name>getRightEncoder</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a151ea2e361089f94fc2e2724909f4d9a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRightVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac201e985079f79fcc6d1b90325199352</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotDiagonal</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a0a09dcef8b2433363db0c06f64457039</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotLength</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaa0e1c24c9714c4d089bbbc3ddc755f0b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotLengthFront</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a21a7a7ba4a01af49b80bd60d75591603</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotLengthRear</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a940a56c68923ded36b6766df5f915f5d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getRobotName</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a63a4a2d11919738aa2596e8e100f3d68</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const ArRobotParams *</type>
      <name>getRobotParams</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a7be39c25062b2f327a4216e3468b35c4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArRobotParams *</type>
      <name>getRobotParamsInternal</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab5b4071ab7d50afcbb3d34a90e11a69e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotRadius</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaf046fe8e8e70911d2f4871b945a9d738</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getRobotSubType</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af31385ba7cb7694ad4b5eaf383e72d3a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getRobotType</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a740de8b9023d143bb5e338a4d6abc3db</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotWidth</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaf49fc54179b7ff3139aaf7f62e9f003b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRotAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad4a0a74f12bf5ec830efc073deedbb76</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRotDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a8e5125510afc92876d48f9e4f6537612</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRotVel</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac2abfcd681cccdc2cf091d2901f0ba5b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRotVelMax</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a164fcb4b6513a31aa24107aebc8b7e8a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; int, ArSonarMTX * &gt; *</type>
      <name>getSonarMap</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aa629f77cf3bfa0f8018a174664ee3b12</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; int, ArSonarMTX * &gt; *</type>
      <name>getSonarMap</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3110f5484ef5e6113271ebc19f88014d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarPacCount</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af5fd68b8f7aab89f15f74fb34fc4fe0b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarRange</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gabde522dc0c3d3b0057f59ee66e016dda</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function">
      <type>ArSensorReading *</type>
      <name>getSonarReading</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaaecbf0186c6fee1ca750723358a8a6ca</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStabilizingTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad899b9f533d71a704762ef72603df3a7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStallValue</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2adb56b996b1bc230ea949eaea37c56d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStateOfCharge</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a072a1abd7fdd59adab416596ac66d440</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStateOfChargeLow</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a41e1731a46ba4dcb7e2c8beecf342416</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getStateOfChargeSetTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a821645ae4ff409cce47d800622e840d7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStateOfChargeShutdown</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6ca0d73881b2d46132c249811e308caf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStateReflectionRefreshTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af6fb151f3f9d1001ca2786468daf66c2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArSyncTask *</type>
      <name>getSyncTaskRoot</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab787d4d11031cbc29c53c2df2a07e3bb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTemperature</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2c2307e37afcf14413c62f4410716152</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTh</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaefe932449c50da9ca0f8084cd9639583</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArTransform</type>
      <name>getToGlobalTransform</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>adf0187bab7d572ad65be3849b2cd7c96</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArTransform</type>
      <name>getToLocalTransform</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae88ac8772cddede17556af32b59449d1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTransAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ada7b7ba5fb038c155615d48d886f3c14</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTransDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a368d2c6347804d3dbb754111a21f8f60</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTransNegVelMax</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a7398266e8aafe1ade03bfcc0f3d03fb1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTransVelMax</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab5d835b403d1ed60afe25a0ed4cd1922</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTripOdometerDegrees</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab705d221a6f11d1b05566de407229604</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTripOdometerDistance</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a068d643b301fba1c549cafefdfc5e9a8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTripOdometerTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a7f34f771406455103979dd4f60a5ce8b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVel</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gad75dbd9aede7b7f57c9a38902b8aa1ce</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getX</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga4c994926aaefc4c86380f1a74e508a76</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getY</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga9164db66102fdf9d422feefdadffca92</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handlePacket</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a66f736ffd9bca75de6496173e2bb7493</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBattery</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>adf2d50cee7574a84650c0f29e7a48349</anchor>
      <arglist>(ArBatteryMTX *device) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFaultFlags</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a9a20afc57a4b269120765a3aeeedc8c2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFlags3</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aafb98136c4ac57318f480196801450c9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFrontBumpers</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>abf884f0cd2483a407c587e8988b17554</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLaser</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a8b9938697be4c3b781f0ca61ee74a45b</anchor>
      <arglist>(ArLaser *device) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLatVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a31f622531ddd1ee6b64cf17fabc8f154</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLCD</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a83251155dcc839a79271c1643e5727d1</anchor>
      <arglist>(ArLCDMTX *device) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasRangeDevice</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a52a4db2a7950766f109f588717e95559</anchor>
      <arglist>(ArRangeDevice *device) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasRearBumpers</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a70a830b52740fc412647558c28ab1a11</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSettableAccsDecs</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4882032c38146b1e59f362b60a591f70</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSettableVelMaxes</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a60d6597ab382657b9c68d5fa5c504fb2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSonar</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a33834928fd866a98b09c42f9a4e1ecde</anchor>
      <arglist>(ArSonarMTX *device) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasStateOfCharge</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5b6c74dfe47a9148fc41f43042ccebe4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTableSensingIR</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab4832005c9a82a3fc8888bb1208b5651</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTemperature</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a645bf578af9dc6f2f856648c740a8022</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveRequestedEncoderPackets</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ade0ae5e6a03e50207de76b46c849646c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveRequestedIOPackets</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a947316e76c93054d29659ccc40793ad1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveStateOfCharge</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a13d1ce59c3511836490b508bc792ea60</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incCounter</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af36ecfb68dd165ca28a1ad0a2c2d7f38</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a289de0a08f6742de427482aedf2e7488</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChargerPowerGood</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a08820666d4ef692cedf64a920469435d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga98b5d608fb9f33aec47a3fe1995dc5b6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCycleChained</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a0e3d88561153443bd71eee0fa0ef1f47</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirectMotion</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>acc14ce0d638d5f555b15192476769aa1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEStopPressed</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4b9fbc4b8e6bf70ac974c60c805e66cc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFrontBumperTriggered</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a51b80f1bc4738e290fa06361f2324c24</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHeadingDone</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga189ad51451c91c3c5b9a67a5c33b7b4d</anchor>
      <arglist>(double delta=0.0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLeftBreakBeamTriggered</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a53cd54232a8968f4e4d6f348c2c26fb3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLeftMotorStalled</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af27becf5512ffae66a4343e915de1a5a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLeftTableSensingIRTriggered</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>adcc5ddc9ffa25756908d66973c539d00</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMoveDone</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gab74884fb32bdc6e006b556f131343880</anchor>
      <arglist>(double delta=0.0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRearBumperTriggered</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>afc072b079b8b9ad6f597532ac96d1f78</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRightBreakBeamTriggered</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a703ef74e2dfe657f7b5f7dca69542597</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRightMotorStalled</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a537d668bed5b30eff99489e112a2dff0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRightTableSensingIRTriggered</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aaa0e61d11c859f7d571bcfa393dcc45f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga808f67ab5b35165c2605b3002df4b499</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSonarNew</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a7b781d5e421844b5e35c32bc89b7173c</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStabilizing</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a0fe9b68ec72a7ec0f5954d5628aa1b2c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStopped</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga1902afde7e420f1db7de2caa4966751a</anchor>
      <arglist>(double stoppedVel=0.0, double stoppedRotVel=0.0, double stoppedLatVel=0.0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTryingToMove</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad9acff515bd9c6ccb6129ccae0d77d8a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keyHandlerExit</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a82b6bc64a78a46327d821c78b44cf472</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadParamFile</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>abdb45d10fdc2d38809058243a1be7325</anchor>
      <arglist>(const char *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lock</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5aecc7ac998c9a31b82fdb904efa8609</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logActions</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga7052d7939d765fd189e1a30eb54fa2e5</anchor>
      <arglist>(bool logDeactivated=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logAllTasks</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a73d38c432d2b56395b18e2b3e250df07</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logUserTasks</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a15bd4d431e228d14cb5e9def69e654e8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnce</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac59821b09bfe11ed80d30415c4788568</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>madeConnection</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a281030f46c3c7ff557e7198730079824</anchor>
      <arglist>(bool resetConnectionTime=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga09016d00e1f3ac9a502344d9e2cd548e</anchor>
      <arglist>(double distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTo</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a8acb66f0b97e77c94adf56afdc86ffa0</anchor>
      <arglist>(ArPose pose, bool doCumulative=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTo</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a399996d857c18fa0ad56cbde34c9cba2</anchor>
      <arglist>(ArPose to, ArPose from, bool doCumulative=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packetHandler</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>afc52785ed8413a1f47b05f8e17cbc6a6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packetHandlerNonThreaded</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a7b0b54afa6213e28b6175704c0bc3e52</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packetHandlerThreadedProcessor</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a58067fd74768e46a39caeb2696083afc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packetHandlerThreadedReader</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2e3cd6a047f27829f766a5fafce3df4d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>processEncoderPacket</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad66cf69b14eb5e51196fab4e54c842ef</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>processIOPacket</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a9a9fc2e0fc34d2b9347d7de91c166624</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>processMotorPacket</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a390b9269df515c5651476873f595233c</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processNewSonar</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3e2287b060994ba3e8c55e1c413fe42a</anchor>
      <arglist>(char number, int range, ArTime timeReceived)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remAction</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac6e11dce7c909cb2b148f0abb0993982</anchor>
      <arglist>(ArAction *action)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remAction</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga38a1196e4c6af08645ad785fbc0d3bea</anchor>
      <arglist>(const char *actionName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remBattery</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aaaa440c1fa9e8bc635f6fd815f831e94</anchor>
      <arglist>(ArBatteryMTX *battery)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remBattery</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a8b1218c7dc065e15ee0ceb771ea8de3c</anchor>
      <arglist>(int batteryNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remConnectCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a95735eb89c9a878714b49e172db5d9e0</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDisconnectNormallyCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3403c5d8f2c8f6c4fa811e43719b9ad6</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDisconnectOnErrorCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab14a65f2138e17bfdd695d26f784769f</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remFailedConnectCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a8c2207d45e57cea02057c48d8b9fb31e</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remLaser</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>acb72ac8e184359b6ac6168f96344f7eb</anchor>
      <arglist>(ArLaser *laser, bool removeAsRangeDevice=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remLaser</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a550f839583c4feae5a4746ad640aaa6b</anchor>
      <arglist>(int laserNumber, bool removeAsRangeDevice=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remLCD</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a06609005a00a8af2c2a76b9bb2d08996</anchor>
      <arglist>(ArLCDMTX *lcd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remLCD</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad9fd10eb5940a56b05a2d5318318aa6b</anchor>
      <arglist>(int lcdNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remPacketHandler</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1057659d8108eb3df28ea54abb4c6b58</anchor>
      <arglist>(ArRetFunctor1&lt; bool, ArRobotPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remRangeDevice</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a23710c00dae49858a704dd1e066e21ed</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remRangeDevice</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a0646362aa94c9463b140ffd46d1dbf79</anchor>
      <arglist>(ArRangeDevice *device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remRunExitCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a8082165c556ba05e2fabffde04746836</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSensorInterpTask</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6c649876cb5cf82285c3775d6d7b8e62</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSensorInterpTask</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5020214ada242d4ba6013e2cd8f1d745</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSetEncoderTransformCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a796f5e5392982cf28820cb73f3b1b0f5</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remSonar</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aba7f444d89860d0f6a0109430ee8c251</anchor>
      <arglist>(ArSonarMTX *sonar)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remSonar</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1edb52b92fd7c0e1ab5ece8a63c6dfa9</anchor>
      <arglist>(int sonarNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remStabilizingCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a15ba41b6f652070df227943dea658f41</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remUserTask</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aaae2ceb1c4b1b0ddcdac8599ee0c8d49</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remUserTask</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad9b8895bbd7b37cd875f8515e44797e4</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestEncoderPackets</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a608efb96687f02fc6d369f25f9b43a2e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestIOPackets</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a948fcfe54ba1cc399db9511ce6db341f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetTripOdometer</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab3dfec7666b695f2393c822f3ea44be2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>robotLocker</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a40ee82e8ea2aa3bdc94fc498d156df7f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>robotUnlocker</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac8352e5c37c86258a4373574c8036614</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3c1c3056633caf455c8265259f57f6d7</anchor>
      <arglist>(bool stopRunIfNotConnected, bool runNonThreaded=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaaade8cc11da585cbdcec45f6c8fbe4a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runAsync</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3c3d878cfd11a2ef91230005a83bfcaa</anchor>
      <arglist>(bool stopRunIfNotConnected, bool runNonThreadedPacketReader=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runAsync</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac4425ceba89af5001dec83246190273a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAbsoluteMaxLatAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5715cc4a848be4465ab1cef8561a3bce</anchor>
      <arglist>(double maxAccel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAbsoluteMaxLatDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac657b13b369b9018e86c8f49eba0229f</anchor>
      <arglist>(double maxDecel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAbsoluteMaxLatVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>adb3d7b0f568855ccd32a067bc28d1f59</anchor>
      <arglist>(double maxVel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAbsoluteMaxRotAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad038ac3a17b96968bc4f48e5c2f98043</anchor>
      <arglist>(double maxAccel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAbsoluteMaxRotDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6f27f394b2436bffd88426c1a5412d5c</anchor>
      <arglist>(double maxDecel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAbsoluteMaxRotVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4b9d56e17a817f8a114d68fadac74a53</anchor>
      <arglist>(double maxVel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAbsoluteMaxTransAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a8dd158b666a322ebdc96a13ab2e0a1cd</anchor>
      <arglist>(double maxAccel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAbsoluteMaxTransDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ac878daaafc0e5125c080ae4881c9241c</anchor>
      <arglist>(double maxDecel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAbsoluteMaxTransNegVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a25a571f4f015ff421db9d84470f5db85</anchor>
      <arglist>(double maxVel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAbsoluteMaxTransVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad6a5d53606c9ba9c8c796f908e2fc1a1</anchor>
      <arglist>(double maxVel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatteryInfo</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a31080f71f50395b19f7f1c14d0fd7064</anchor>
      <arglist>(double realBatteryVoltage, double normalizedBatteryVoltage, bool haveStateOfCharge, double stateOfCharge)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatteryVoltageAverageOfNum</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aacf26a5b33d8ef7ed0636d7e98161f01</anchor>
      <arglist>(size_t numToAverage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChargeState</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a38f4696f28ad9222414eb3d88b33e4c8</anchor>
      <arglist>(ArRobot::ChargeState chargeState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionCycleMultiplier</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a8893d4d4c3fde086f426b62ff6041cd2</anchor>
      <arglist>(unsigned int multiplier)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionTimeoutTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae2e953ec2781720710c21b6611fe81f8</anchor>
      <arglist>(int mSecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCycleChained</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4ba60a8bd859d34d31ffdaa75e54a2f7</anchor>
      <arglist>(bool cycleChained)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCycleTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a12d6cad67f61fbbde10197e6915c66ba</anchor>
      <arglist>(unsigned int ms)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCycleWarningTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a565a84a04a71c1342457b807be6d37d6</anchor>
      <arglist>(unsigned int ms)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeadReconPose</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a87417eab89f778fba32cdb22ff15dca5</anchor>
      <arglist>(ArPose pose)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeltaHeading</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga033038331dbe4cbaabad2d0bc67653f0</anchor>
      <arglist>(double deltaHeading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>afdefce1c9f642dae8e68201ec509b898</anchor>
      <arglist>(ArDeviceConnection *connection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirectMotionPrecedenceTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6f7742ed0fa340fb1ff917e4239e81e8</anchor>
      <arglist>(int mSec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDoNotSwitchBaud</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1a4712be170063b097dee3b25b872a49</anchor>
      <arglist>(bool doNotSwitchBaud)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEncoderCorrectionCallback</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aeb98db5095215e4022c473e3c7f1169a</anchor>
      <arglist>(ArRetFunctor1&lt; double, ArPoseWithTime &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEncoderPose</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aab16344437a9fd2dd2f9278c9e515b1f</anchor>
      <arglist>(ArPose encoderPose)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEncoderPoseInterpNumReadings</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>afc0efecc5826fa4298976162e5283b81</anchor>
      <arglist>(size_t numReadings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEncoderTransform</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4df58a6d3664bc9f0fe39fee476febc9</anchor>
      <arglist>(ArPose deadReconPos, ArPose globalPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEncoderTransform</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a2535a1949e8d405fdf7d21ac590277f6</anchor>
      <arglist>(ArPose transformPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEncoderTransform</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aecaf64a793b5a116fd24ae1aee366235</anchor>
      <arglist>(ArTransform transform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeading</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gafbbe47b4351cc9baf2559d188803ee72</anchor>
      <arglist>(double heading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeadingDoneDiff</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae9bb5f92e6b4c1caa4e5f9e49675c846</anchor>
      <arglist>(double degrees)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreMicroControllerBatteryInfo</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1f8810e9dfc7317c5c9ad61b3899f585</anchor>
      <arglist>(bool ignoreMicroControllerBatteryInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsChargerPowerGood</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a516dd84c5708f75759539fc843e62fe6</anchor>
      <arglist>(bool onCharger)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKeepControlRaw</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae94cbd0b2b06d1f4555ad6e10f398515</anchor>
      <arglist>(bool keepControlRaw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6f257ef9efd57cf49a70845708b6dd00</anchor>
      <arglist>(double acc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab42a78ab1bbcc0e9452d52d4fc10edb3</anchor>
      <arglist>(double decel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatVel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a7d6f44128f58a0a5b2538948ff1daab3</anchor>
      <arglist>(double latVelocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatVelMax</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1d0184490e5eef6ee6b18ead131e2ec2</anchor>
      <arglist>(double vel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogActions</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae067dc9c45afc3a37092b30a66c17b7d</anchor>
      <arglist>(bool logActions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogMovementReceived</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a32d88e960b0f9367cacb1de6e5283433</anchor>
      <arglist>(bool logMovementReceived)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogMovementSent</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a674e20c656af3d7a336a083fb13ef582</anchor>
      <arglist>(bool logMovementSent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogSIPContents</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad044514f1b7e4db5e01f50fd06071094</anchor>
      <arglist>(bool logSIP)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogVelocitiesReceived</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a94b743a2fa3102a0466646a867c4bb66</anchor>
      <arglist>(bool logVelocitiesReceived)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoveDoneDist</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab3e59e695f25e6c2671a07e88aefd1cc</anchor>
      <arglist>(double dist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMTXTimeUSecCB</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>abb20395cde3d673b28bb4bb8366bc6ff</anchor>
      <arglist>(ArRetFunctor1&lt; bool, ArTypes::UByte4 * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMutexLockWarningTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aea026bf6e18743f943becc78c64a6985</anchor>
      <arglist>(double sec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMutexLogging</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab503f38fd0df187cda6ced106cc5e18a</anchor>
      <arglist>(bool v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMutexUnlockWarningTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af16aefa817fe67a157542c4501d5274b</anchor>
      <arglist>(double sec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a250370219e941a943de0876de692d446</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoTimeWarningThisCycle</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aff1ef460526f1b733378338da30a9425</anchor>
      <arglist>(bool noTimeWarningThisCycle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOdometryDelay</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a53b467572bc18985bb894b8adb4681f2</anchor>
      <arglist>(int msec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPacketsReceivedTracking</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4a9cd87f1e80a880d5354e2ac10fa33d</anchor>
      <arglist>(bool packetsReceivedTracking)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPacketsSentTracking</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a44ce80738673a5c00ac18cadce87935e</anchor>
      <arglist>(bool packetsSentTracking)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoseInterpNumReadings</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a5380ac6054a61bf6432962fe6f57b4a5</anchor>
      <arglist>(size_t numReadings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPTZ</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af7931e690c3af960a6bd99e23c9a3096</anchor>
      <arglist>(ArPTZ *ptz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRawEncoderPose</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4b6dc65933a1502564198e2875159021</anchor>
      <arglist>(ArPose rawEncoderPose)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRealBatteryVoltageAverageOfNum</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad75afd394b1a28e19166c92416463b47</anchor>
      <arglist>(size_t numToAverage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRequireConfigPacket</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab4c438ec0e41610997ad3970aee88462</anchor>
      <arglist>(bool requireConfigPacket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResolver</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a4716f07478a58c5c6a5c94353dd955ff</anchor>
      <arglist>(ArResolver *resolver)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRobotParams</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a8117d064694738e1cc70bf0eeb1c62ca</anchor>
      <arglist>(ArRobotParams *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a3bf3de789d165e12cecd3bcd9058bedd</anchor>
      <arglist>(double acc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad24827ea5f2a11bd75706cf1adc3fb0d</anchor>
      <arglist>(double decel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotVel</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga613157de1936d0c34ed73e32787ae661</anchor>
      <arglist>(double velocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotVelMax</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1174e2ca727403081ef5bbbb13667fa8</anchor>
      <arglist>(double vel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStabilizingTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aac5d8c3d524797c0220238feb183cebd</anchor>
      <arglist>(int mSecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStateOfCharge</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a0b90efb4269e0f5c108a3fe5895be9b3</anchor>
      <arglist>(double stateOfCharge)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStateOfChargeLow</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad90077350fa2ea7c11e5c8d7dd7a1e3e</anchor>
      <arglist>(double stateOfChargeLow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStateOfChargeShutdown</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a89d55fe220aa94980b3ae974f63bfe27</anchor>
      <arglist>(double stateOfChargeShutdown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStateReflectionRefreshTime</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a57038192476e8422a6c6b949c96c239a</anchor>
      <arglist>(int msec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStoppedVels</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>adc7d8054dba1c556277b4b522c4264d5</anchor>
      <arglist>(double stoppedVel, double stoppedRotVel, double stoppedLatVel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransAccel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a6ceab6d11938d5124b67cb9ef94e6b05</anchor>
      <arglist>(double acc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransDecel</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a68835776d4afb19262c25fd7b33a0f87</anchor>
      <arglist>(double decel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransNegVelMax</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>aba3ea7b2882b995c9210df68bfbb6de7</anchor>
      <arglist>(double negVel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransVelMax</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae0ba898c9723f384679d3ee5f8a3a168</anchor>
      <arglist>(double vel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUpPacketHandlers</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a1df142fce7852ed585d1ed71fa0e4361</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUpSyncList</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a35b67ac444711adfaf795b6e9c1f1f9a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVel</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac4c369f0f8d8a41f2b3f2290bdcbb03c</anchor>
      <arglist>(double velocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVel2</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a887e87b779740ad024f65c6ef67394cc</anchor>
      <arglist>(double leftVelocity, double rightVelocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startStabilization</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ade1db6d6dfcc215a53e8f98472a94a44</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stateReflector</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a80c9def6731788f7a30e886caa4ade54</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac354fe63f9e58b33343f38923f1588fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopEncoderPackets</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a202e04860031eed5cc42b966d75ed90f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopIOPackets</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af2d5078f42282a2d52d34ae1c967c9c4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRunning</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaff02cf7043c2e7239ec6b6e11ff6b146</anchor>
      <arglist>(bool doDisconnect=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopStateReflection</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a554acc21ccc08bec2e6966b76b29ab04</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tryLock</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ae8e73c95cfef0a802fe30773705a8d14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unlock</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a403d9de010dc2b8d478cd0b14b2d9491</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WaitState</type>
      <name>waitForConnect</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gafb0d553568d1001318593afe634721c8</anchor>
      <arglist>(unsigned int msecs=0)</arglist>
    </member>
    <member kind="function">
      <type>WaitState</type>
      <name>waitForConnectOrConnFail</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a0d7e997800529992be3f4f797b968e0b</anchor>
      <arglist>(unsigned int msecs=0)</arglist>
    </member>
    <member kind="function">
      <type>WaitState</type>
      <name>waitForRunExit</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga95201be7c39b521983b51e6f5d9303e4</anchor>
      <arglist>(unsigned int msecs=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wakeAllConnOrFailWaitingThreads</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ad430c169fa2654f72746057ec3df5638</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wakeAllConnWaitingThreads</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>ab35257cf445e23c6f8059d1ea792f43f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wakeAllRunExitWaitingThreads</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a344d2102ac9935b5e3a469b2d9e17ae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wakeAllWaitingThreads</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>af076605e1e7f84864a3cb21f1596c59e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArRobot</name>
      <anchorfile>classArRobot.html</anchorfile>
      <anchor>a9f5416d969171331da58b5e1ceb1b44f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRobotBatteryPacketReader</name>
    <filename>classArRobotBatteryPacketReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ArRobotBatteryPacketReader</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>abb846fbc65c4eafb4c344d089cd414f0</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAbsSOC</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>abd19fa49a2cb2a74a5ce251632317bdd</anchor>
      <arglist>(int battery)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFlags1</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>a9379ef29ff2748e28999db4bc73389fd</anchor>
      <arglist>(int battery)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFlags2</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>a0041972b3f4e0c04686920f76abe7b8f</anchor>
      <arglist>(int battery)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFlags3</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>a090cbf36ed79b532ec8233fd1a535d3e</anchor>
      <arglist>(int battery)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumBatteries</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>a897115a204b9928f4899aee1e45be2e3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumBytesPerBattery</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>ab52392feb2e443ff3c0c9680918dcdd1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRelSOC</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>aa608a24a806f630f9d78ca476b8e359d</anchor>
      <arglist>(int battery)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPacketArrived</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>a8cc7dcdd47c351fc47c76050f9bc3933</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveRequestedPackets</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>a508ec01c6b79d902da68e0bb9097639e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestContinuousPackets</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>a19e0721f5d6087c2d3e397f535af0c36</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestSinglePacket</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>af237ef3d0909aac3ef8e9fbfa9623cae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopPackets</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>a047757a75fedc120b1ff9cf6d2f327db</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArRobotBatteryPacketReader</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>a998f2277863d62db89ca89b9d3dbdf53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>connectCallback</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>a6c79b07fdcaa7e9ab0f9dc75dd6c1a71</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>packetHandler</name>
      <anchorfile>classArRobotBatteryPacketReader.html</anchorfile>
      <anchor>a086ea654076b0a4551de8312b800122e</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRobotConfig</name>
    <filename>classArRobotConfig.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addAnalogGyro</name>
      <anchorfile>classArRobotConfig.html</anchorfile>
      <anchor>a2656738860ce40f9a6e6d6235ccdcef3</anchor>
      <arglist>(ArAnalogGyro *gyro)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRobotConfig</name>
      <anchorfile>classArRobotConfig.html</anchorfile>
      <anchor>ae2da3f4c583b85235cc9c10bb06e999a</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectCallback</name>
      <anchorfile>classArRobotConfig.html</anchorfile>
      <anchor>abfc6556d88c567f5348b112ff85c7327</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>processFile</name>
      <anchorfile>classArRobotConfig.html</anchorfile>
      <anchor>a84ff87e03de8c9eaea9a3cfe0d574998</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRobotConfig</name>
      <anchorfile>classArRobotConfig.html</anchorfile>
      <anchor>abd91b0a601a366c546e053c1461f97a4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRobotConfigPacketReader</name>
    <filename>classArRobotConfigPacketReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ArRobotConfigPacketReader</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a4b7849d856e66febc967f818378696ac</anchor>
      <arglist>(ArRobot *robot, bool onlyOneRequest=false, ArFunctor *packetedArrivedCB=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>buildString</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>aa16c123f15bda99359289498d5cdb094</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>buildStringMovement</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a120601929f7f2b0422cfe2f96d9e4919</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connected</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a576f209d9a3fb5f57014316bf5ac485a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAux1Baud</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>ad2636865c5d29c650fa36a52d1ffe963</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAux2Baud</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a8be84176a823d231654403f1cd69dd8a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAux3Baud</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>af350d91c41de284a0f677185ab040366</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getBatteryType</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a270647d78bb4a708847d56cf9f8278c7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDriftFactor</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a1cb5594a37fbea75137f579ae501a8e9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFirmwareVersion</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>abf2cee403fe29123a29ba73a4f3fe23e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFrontBumps</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a10a957c6ff2c5cf0fc985a8381c6597c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getFrontSonar</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>aebfa3d8a9a18ac45eb7afc3858e90e79</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGyroCCW</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a5f8fecb6deb4bc8e5fab213983af47f8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGyroCW</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>aefe9ab6fc2bd8bfb2dd9387a34fa0780</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGyroRateLimit</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a24d4f1a100cb7d4a1dfeea687619cdce</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGyroType</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a653af1e768e4944c5181857e4ce0bded</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getHasCharger</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a7511544f8014c795944163096a5a44c9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getHasGripper</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>adcfb6f618bfdcd13741b09992b7d0f88</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getHasGyro</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>add4731803ecbf5d5433c0d6cd7b612c5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getHighTemperatureShutdown</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a04a7da1849b05f47bb23a64dbf29f017</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getHostBaud</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>abc02f2b1a9e6030f66d40f63686e60c5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getJoyRotVel</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>ae32e0ba065c6c0661efe4cfa2b0cac6f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getJoyVel</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>ad836aedf45cfb237a2aa14d1b947a488</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getKinematicsDelay</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>aeb1074627117a17ced2844f170b4e4a0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatAccel</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>ae9b87dc17c1c397b1cb5702ca50a651f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatAccelTop</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>abb0f11babb1561336c748513a13e5abe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatDecel</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>ab9458a8f9630935345806d2a6c874eb4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatVelMax</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>af0d72774d2cde4f2be5bb4d832ec545c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatVelTop</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>ac325dc996f0c28e179cc086bf0b04990</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLowBattery</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a15ec08b2461e381cf81b8221ecc8e007</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>aeeed0300dea0386a309c81ce8f19740b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getNormalMPacs</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a93b71f62cf1d750ba7293a931b222c77</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getPDBPort</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>accfbd3502c8be03eb4225c8273f2e96c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPowerBits</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a64652bddccd8d2f0f1a962b56c12c3f5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPowerbotChargeThreshold</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a590b61f82844f31e87524a2126d9af23</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPwmMax</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a7279e30226dee0fae8e875a114d05344</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRearBumps</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a1ad1adce555ecbc815c21b62c23bf07e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRearSonar</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>af741771c3c2c7402ef9c62571eb0b836</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getResetBaud</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>afa7ae9be7929e29cf3ece949e095330f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRevCount</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a21817c19e9994e42672f44735b9f3c58</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const ArRobotPacket *</type>
      <name>getRobotPacket</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a454d75ab3b37d3f658d3df50844489fc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRotAccel</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a1734db6c0077af7c52539499ea0d4172</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRotAccelTop</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>ad09ffccea23b0e89d0cfd5e1af3cb24c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRotDecel</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>ae7349c0ce337c23c60f6704977147128</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRotKI</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a80e6b23afccb6738365bfdd5cf9f8404</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRotKP</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a5f973c7570031ff86bd2c3a8a8e77238</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRotKV</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>aa40dbc0ab05085a32e08023a21d40adc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRotVelMax</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>abf191c9253ec9c912b435c1f659f6be5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRotVelTop</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>af8a5ad55642863bfeebef49519d3c4a9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSerialNumber</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>ad02a358569d62d7603ce37dbf74083f7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getShutdownVoltage</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>aa8ac64e69a91a8b131fbe798d364a0b3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSipCycleTime</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>af24901fed248ce1d032d2c9483eb7716</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarCycle</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a2e604206bc768e2104f4f9b24bf81eda</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStallCount</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>af2f532463a5ea76dd9e44fe895e751c2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStallVal</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>abdfae20f36a781607afb1042499b71e7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStateOfChargeLow</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a6037d6f8d1406f71f169090ef3dc2278</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStateOfChargeShutdown</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a49b240667d402224a554e75285bcbb70</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSubType</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a034ccbc7db12948451b4b77587bcef23</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTicksMM</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a52cabbed0ebca61499483b3cddc713c1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransAccel</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a711e5ee9c1f01ef3a179d1b3b80dc475</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransAccelTop</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a38fe800342f9abe67eacc5d6ae279d48</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransDecel</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a03ad966b48b9b965174f1979b17d5b5b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransKI</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>ad72ede051170bcd94b412d77925be054</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransKP</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>afdcae494fb0f4cdc09651d14ab0f5020</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransKV</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>abd8aec0b05aeaa903fb064460392579d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransVelMax</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>aeab6ffebe1c37861b799d6d1e63c1e9a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransVelTop</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a75ec771da9773484f1db1e6ca5f7069d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getType</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a3893ca287a24f7821421e6d7c113b30d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getWatchdog</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a5d4a761ce1dbca35391305de35f8db82</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPacketArrived</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a5acd599c691e231f6e3524b0c5b9f071</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPacketBeenRequested</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a9d2c9aa0e631aa6b2ed6522bf937c0de</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a4ac20393d5e6d8f7c1684881d7bf9109</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logMovement</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>ad856fcb9284f4b3d5e0ae4afa50dcfcd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>packetHandler</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>aeed2315e571667a14d62640c8f1e79a9</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestPacket</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>a4c0cdd7534650b7f7b580d0bba90ae48</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArRobotConfigPacketReader</name>
      <anchorfile>classArRobotConfigPacketReader.html</anchorfile>
      <anchor>aa0e5686f1877ff17f9a43929a03368ae</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRobotConnector</name>
    <filename>classArRobotConnector.html</filename>
    <member kind="function">
      <type></type>
      <name>ArRobotConnector</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>ac80fdece67e0995376dc37c2ceb85311</anchor>
      <arglist>(ArArgumentParser *parser, ArRobot *robot, bool autoParseArgs=true, bool connectAllComponents=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectRobot</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>ab192ac393d9cc1e5b61b1a82b08d085d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectRobot</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>ad9306889690c41b8342f29b2ab567d25</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnectAll</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>af8b0be97cfabe32c64b6b82ee7000089</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getRemoteHost</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>a378cbbc4d0d1a4f68257078834cfde53</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRemoteIsSim</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>ac42b231ec0f05f564db4a2dfec8bd472</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArRobot *</type>
      <name>getRobot</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>a91edd72fd32f374b6394c0b8c44cc7e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOptions</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>aacf5d8abbfd85abdfce4ca7bc0715b98</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>a88041e3840d115f8e6e36c7c6e55e253</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>ad24e3ac7ef55e4eff2968aa1f891fccc</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRemoteIsSim</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>a6f1f4b09f681b090b60596c2ad6c8f78</anchor>
      <arglist>(bool remoteIsSim)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupRobot</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>a5e2a2b8ab0fcda4b5241d8b3cdcdcd10</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupRobot</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>aae551ca233ff53eb0d1dcb2ae0eee022</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArRobotConnector</name>
      <anchorfile>classArRobotConnector.html</anchorfile>
      <anchor>a7a31557d4449f06cd2c4570b5d746aa4</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRobotJoyHandler</name>
    <filename>classArRobotJoyHandler.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArRobotJoyHandler.html</anchorfile>
      <anchor>a2cb5d511b3deab3908d013747305b767</anchor>
      <arglist>(ArConfig *config, const char *section)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRobotJoyHandler</name>
      <anchorfile>classArRobotJoyHandler.html</anchorfile>
      <anchor>a542e57bb477932f93e6f5c3bd5e2f619</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getButton1</name>
      <anchorfile>classArRobotJoyHandler.html</anchorfile>
      <anchor>a15c8c094a03c4f34b912aa724162a152</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getButton2</name>
      <anchorfile>classArRobotJoyHandler.html</anchorfile>
      <anchor>a5c497bf4d87077b09724f399f09bb81b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getDataReceivedTime</name>
      <anchorfile>classArRobotJoyHandler.html</anchorfile>
      <anchor>af3e2aec076f9f95aaed152e80f803744</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDoubles</name>
      <anchorfile>classArRobotJoyHandler.html</anchorfile>
      <anchor>a763d86dd63d38cceae40e4fd13eb97bb</anchor>
      <arglist>(double *x, double *y, double *z)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRawThrottle</name>
      <anchorfile>classArRobotJoyHandler.html</anchorfile>
      <anchor>a2bdd3f42e767e1525d39b130273fabdb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRawX</name>
      <anchorfile>classArRobotJoyHandler.html</anchorfile>
      <anchor>a8e97232d96249a0b1463c14e4eaebdc8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRawY</name>
      <anchorfile>classArRobotJoyHandler.html</anchorfile>
      <anchor>a8a58f5ca75302eb5f28144bed5fd1214</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gotData</name>
      <anchorfile>classArRobotJoyHandler.html</anchorfile>
      <anchor>a7d846b3eca4815068d2195f8897ac699</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArRobotJoyHandler</name>
      <anchorfile>classArRobotJoyHandler.html</anchorfile>
      <anchor>a0a4567823c180b622f0ec9bb657c85e9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRobotPacket</name>
    <filename>classArRobotPacket.html</filename>
    <base>ArBasePacket</base>
    <member kind="function">
      <type></type>
      <name>ArRobotPacket</name>
      <anchorfile>classArRobotPacket.html</anchorfile>
      <anchor>ae1e1d6bb5032137c3dab433081016937</anchor>
      <arglist>(unsigned char sync1=0xfa, unsigned char sync2=0xfb)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::Byte2</type>
      <name>calcCheckSum</name>
      <anchorfile>classArRobotPacket.html</anchorfile>
      <anchor>a149236a06644a9dff43b9809e17ff80c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::UByte</type>
      <name>getID</name>
      <anchorfile>classArRobotPacket.html</anchorfile>
      <anchor>a0e41b0bbe73260cff302094500a51b7d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getTimeReceived</name>
      <anchorfile>classArRobotPacket.html</anchorfile>
      <anchor>ae9393bf00d24a0eb06ce7768fa0c10fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArRobotPacket &amp;</type>
      <name>operator=</name>
      <anchorfile>classArRobotPacket.html</anchorfile>
      <anchor>a78c8341601522548dc9fbdbf886432ef</anchor>
      <arglist>(const ArRobotPacket &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setID</name>
      <anchorfile>classArRobotPacket.html</anchorfile>
      <anchor>a430086fa4b768d4588ec864594aa8552</anchor>
      <arglist>(ArTypes::UByte id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeReceived</name>
      <anchorfile>classArRobotPacket.html</anchorfile>
      <anchor>a4108210e334821d261f4f65d510cc8b3</anchor>
      <arglist>(ArTime timeReceived)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyCheckSum</name>
      <anchorfile>classArRobotPacket.html</anchorfile>
      <anchor>a9570c1fbfdb5b7d8c9f3c0be7ec5b328</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRobotPacket</name>
      <anchorfile>classArRobotPacket.html</anchorfile>
      <anchor>a948d22a9d23c54ae2585e9948a2f0a08</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRobotPacketReceiver</name>
    <filename>classArRobotPacketReceiver.html</filename>
    <member kind="function">
      <type></type>
      <name>ArRobotPacketReceiver</name>
      <anchorfile>classArRobotPacketReceiver.html</anchorfile>
      <anchor>ad977f81f61fa0424e6629c0d69703ce8</anchor>
      <arglist>(bool allocatePackets=false, unsigned char sync1=0xfa, unsigned char sync2=0xfb)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRobotPacketReceiver</name>
      <anchorfile>classArRobotPacketReceiver.html</anchorfile>
      <anchor>a7300c31a57c8d270840c60ca2dc30db8</anchor>
      <arglist>(ArDeviceConnection *deviceConnection, bool allocatePackets=false, unsigned char sync1=0xfa, unsigned char sync2=0xfb)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRobotPacketReceiver</name>
      <anchorfile>classArRobotPacketReceiver.html</anchorfile>
      <anchor>a9e086e269bdfc7f027cd9e95cc612716</anchor>
      <arglist>(ArDeviceConnection *deviceConnection, bool allocatePackets, unsigned char sync1, unsigned char sync2, bool tracking, const char *trackingLogName)</arglist>
    </member>
    <member kind="function">
      <type>ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArRobotPacketReceiver.html</anchorfile>
      <anchor>ab3dd0d6c6429dedc43019e0a160e4e9a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAllocatingPackets</name>
      <anchorfile>classArRobotPacketReceiver.html</anchorfile>
      <anchor>a2dadbd27727230ee03a2f32a6bf4110c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArRobotPacket *</type>
      <name>receivePacket</name>
      <anchorfile>classArRobotPacketReceiver.html</anchorfile>
      <anchor>ac6507210fc1ff98c0fbe565133b4fa8a</anchor>
      <arglist>(unsigned int msWait=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllocatingPackets</name>
      <anchorfile>classArRobotPacketReceiver.html</anchorfile>
      <anchor>acce58c65f51f1c34e3ec4579a261b96c</anchor>
      <arglist>(bool allocatePackets)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArRobotPacketReceiver.html</anchorfile>
      <anchor>a8a3134bab0053f5b47a58ad2bf7bbb52</anchor>
      <arglist>(ArDeviceConnection *deviceConnection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPacketReceivedCallback</name>
      <anchorfile>classArRobotPacketReceiver.html</anchorfile>
      <anchor>a4cd19557aed8e74d4541b1fad34183c2</anchor>
      <arglist>(ArFunctor1&lt; ArRobotPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRobotPacketReceiver</name>
      <anchorfile>classArRobotPacketReceiver.html</anchorfile>
      <anchor>aca786108e4a81824e1dbdbad9e783e01</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRobotPacketSender</name>
    <filename>classArRobotPacketSender.html</filename>
    <member kind="function">
      <type></type>
      <name>ArRobotPacketSender</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>a3d6164270a77da60766268ecaf839a84</anchor>
      <arglist>(unsigned char sync1=0xfa, unsigned char sync2=0xfb)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRobotPacketSender</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>a71f0b04f8f8d4ecc81d0aee323079996</anchor>
      <arglist>(ArDeviceConnection *deviceConnection, unsigned char sync1=0xfa, unsigned char sync2=0xfb)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRobotPacketSender</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>a5a1324a9c7633a816fa3f20750e95471</anchor>
      <arglist>(ArDeviceConnection *deviceConnection, unsigned char sync1, unsigned char sync2, bool tracking, const char *trackingLogName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>com</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>a8b3525b655931338b9b06d23260caa86</anchor>
      <arglist>(unsigned char command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>com2Bytes</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>a972697332d4a79d31472941e54780506</anchor>
      <arglist>(unsigned char command, char high, char low)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>comDataN</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>a2585921fec3edc926665adeedf3a4d59</anchor>
      <arglist>(unsigned char command, const char *data, int size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>comInt</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>ac5e9a07d8bb1eeee5cc30474b5cbc26d</anchor>
      <arglist>(unsigned char command, short int argument)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>comStr</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>acc554733df5a7ee5ba6282a113612652</anchor>
      <arglist>(unsigned char command, const char *argument)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>comStrN</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>aeb996327a899b0a223af99b7440914f3</anchor>
      <arglist>(unsigned char command, const char *str, int size)</arglist>
    </member>
    <member kind="function">
      <type>ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>a603458e6416079ea02427bbbc4f24146</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendPacket</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>a7839f77480f013fe3cabb8a1267a16b3</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>a37cd8e06f77fa55dafdafe81f54b585c</anchor>
      <arglist>(ArDeviceConnection *deviceConnection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPacketSentCallback</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>a38a1d03bc0c302ca47e2cc285f4c0e8f</anchor>
      <arglist>(ArFunctor1&lt; ArRobotPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRobotPacketSender</name>
      <anchorfile>classArRobotPacketSender.html</anchorfile>
      <anchor>ab13915067fdabe7f40e2437a3900cd4b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRobotParams</name>
    <filename>classArRobotParams.html</filename>
    <base>ArConfig</base>
    <member kind="function">
      <type></type>
      <name>ArRobotParams</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a0410d65a3a11a1acaf350fc342b2374e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAbsoluteMaxLatVelocity</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a3cd160fe567b7773ae7202ac6ed1bd35</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAbsoluteMaxRotVelocity</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a140d478f2985390eadcb038387512125</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAbsoluteMaxVelocity</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a90c7251de82edf27354f29c390798272</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAngleConvFactor</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>acdad1b3adb22fa026332b32e725346e2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBatteryMTXBoardAutoConn</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>abf2231f81eda6215df171751c439ada0</anchor>
      <arglist>(int batteryNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBatteryMTXBoardBaud</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a28bb4bc9a4a21b9678938ef754beb2bd</anchor>
      <arglist>(int batteryNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBatteryMTXBoardPort</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a383b10ff183dc1457163d51271158aaa</anchor>
      <arglist>(int batteryNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBatteryMTXBoardPortType</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a2efc332805515125b0ed160ef5f80270</anchor>
      <arglist>(int batteryNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBatteryMTXBoardType</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ad39e5cf98d1a7850416f7f43d29d6265</anchor>
      <arglist>(int batteryNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getClassName</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a122b4a0abc73b5fa767cfea732d9df1f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCompassPort</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a0a3b9942a3924a88dcb4e128c810d722</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCompassType</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a2ea3c18001fb3250c4f7724f11b2e831</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getConnectLaser</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a1c070b0f33ecd96b86861345ebf21375</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDiffConvFactor</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>af9a3636cf95eaeca44b02a54a47daa9c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDistConvFactor</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a96b72f490ab1dc376b7d6441352aae20</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGPSBaud</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a03efd18ca828c06e74c3329f364d4508</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getGPSPort</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a1f3d87e72de776d870dd640e244d0eb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGPSX</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a0100aa319cdc986470d00862d4cf2904</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGPSY</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a34cda94e2e48c2993c7070a7f5a9d8f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGyroScaler</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aaf49875dbe97cc92f9466f1de1a3e66c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIRX</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a38cd16be3d8d4652c49e9ccfd9b801ea</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIRY</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a43045aa266181724d0b1a1a74fec886a</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserAutoBaudChoice</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a53ce15ebbd63642e12e159f2940db42a</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLaserCumulativeBufferSize</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a595ef61dc3e449ac9b7f8d9147ccb4fc</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserDegreesChoice</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a8aa49cf5d96b60b7f17206b41760d09d</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserEndDegrees</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a58e5f489946eb4c1237a3a29d4d3f099</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLaserFlipped</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a11bb5ade40a236592485637f04df3f4f</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserIgnore</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a563824f97d612a9d77c32f003ed4a014</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserIncrement</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a629f304b320d99d0ce397ceafc5fa50a</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserIncrementChoice</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a00a86ecbb284e8d7478ab70efc1a7a5d</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLaserMaxRange</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ae56f2a3042c372b660fee3df885e6b18</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserPort</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ac1655d5b81418a49849fa8b7f311d75c</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserPortType</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a3bd65804aa7949e7347f914f4539c846</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLaserPossessed</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ade9f0001e4671ea0a4f705d993289605</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLaserPowerControlled</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a3f099550bb77a3e1745f5bf673d73536</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserPowerOutput</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a4b5b5994e8cae7e4082010b2c48dc8a1</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserReflectorBitsChoice</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ae05d7346065163cb0e2c67dbabae4097</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserSection</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a673258355b05779ce19d36315247fba5</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserStartDegrees</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ae9300083b9d6c94eb8e4f162f2b3cec5</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserStartingBaudChoice</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aaf986de7ceed3da45ff9b29c3bd1e7dd</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLaserTh</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ab08411da0d657d9dafaca05ec8fb981b</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserType</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a1b166e0de07525695f3048e5f374fdf0</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLaserUnitsChoice</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a19695ebb53dae50583c656b258f60430</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLaserX</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>abb2f74fef47ba8826c6cd566d72be6e5</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLaserY</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a0756470b60749464f3e39d44a31c4053</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLaserZ</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a5fd918cb34ef4e1a17ddc2a056e67862</anchor>
      <arglist>(int laserNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatAccel</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a0a34ffb1746502e2132dfbcd43d413f8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatDecel</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aaa79112903b8004307dd845a6d056f14</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatVelMax</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a42e0402e6ea1a0fd42ce48f5fafe9390</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLCDMTXBoardAutoConn</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a855316c053f94d42cec552292550576f</anchor>
      <arglist>(int lcdNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLCDMTXBoardBaud</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>af3ed322d484a5a51f32ae10f47e309ca</anchor>
      <arglist>(int lcdNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLCDMTXBoardConnFailOption</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>addea826c8833c27ea9ddcbebd0f09dd7</anchor>
      <arglist>(int lcdNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLCDMTXBoardPort</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a46d81c00589e1b934419b55e250c58d8</anchor>
      <arglist>(int lcdNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLCDMTXBoardPortType</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aeebec5029a69550a890d9206df706a71</anchor>
      <arglist>(int lcdNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLCDMTXBoardPowerOutput</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a4efce95c3e8f3bef856e33f783cdf344</anchor>
      <arglist>(int lcdNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLCDMTXBoardType</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a6c8231ec4fc9cdc99effad59a70aae90</anchor>
      <arglist>(int lcdNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumIR</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a6304bcf2643b544069c10d94cf4d33d4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSonar</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a031a4cf3ab2d9e08e64953ed460e8e7b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSonarOnMTXBoard</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a72e48518c2aa18086d08aaad952cb775</anchor>
      <arglist>(int sonarBoardNum=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSonarUnits</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a5a31cb23b3edbec6541050a1c3fa80e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ArPTZParams &gt; &amp;</type>
      <name>getPTZParams</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ac431a327f2ee0bac0f7a704f7140ac70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRangeConvFactor</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a6ad939c4feb8513f7a1b1151e55c3606</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRequestEncoderPackets</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aac36e5fe0bfb5e5720dfb50c7c13dae1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRequestIOPackets</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aaa15d5df24a6d0e70fc7ca3b97b68ffb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotDiagonal</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a2b8acdca34c0b2000193f2cec99e5055</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotLength</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aa4a231f748dd28512706b71c488c84c9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotLengthFront</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a1562aeff758401b04da72396e016095b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotLengthRear</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a220dca95165bf99ee04e067d6699a870</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotRadius</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a174801452b421bad9ec6c71fccb23897</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotWidth</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aded122101ff72b2650e8934a417d4dd6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRotAccel</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ac2df0e1ea7063d06852ea4bcc877cc46</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRotDecel</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a25480717380ab9fd6ca8da0fb155642a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRotVelMax</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a2c6475c3bad161c2f0efa3d088324240</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarDetectionThreshold</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ab77d461a851ad8f26e8e2de9838b9f83</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarGain</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a6622333911ca58144cc0f1130855563c</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarMaxRange</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>abab6b56bea719ff8d05a1d73caffea79</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarMTXBoard</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ab3f28a0b467defa197339b7c97ddba8a</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSonarMTXBoardAutoConn</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a6d676f680f3e213f6c64be5c5ff77f5d</anchor>
      <arglist>(int sonarNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarMTXBoardBaud</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>af6f0d677bb37ae02e041966f69db2650</anchor>
      <arglist>(int sonarNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarMTXBoardDelay</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a11016a365b0abe0b8f59902346df510b</anchor>
      <arglist>(int sonarBoardNum=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarMTXBoardDetectionThreshold</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a67a9095e1c06e5857f94edda314112ee</anchor>
      <arglist>(int sonarBoardNum=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarMTXBoardGain</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a3088285e4cdc6f75b1d0e3777512e3fb</anchor>
      <arglist>(int sonarBoardNum=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarMTXBoardMaxRange</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a644a314d1c3370268be2e06329daba0a</anchor>
      <arglist>(int sonarBoardNum=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSonarMTXBoardPort</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a402891482025fdde5e83965d3663961d</anchor>
      <arglist>(int sonarNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSonarMTXBoardPortType</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a0dd06716d783a64d9933df39804a7fe9</anchor>
      <arglist>(int sonarNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSonarMTXBoardPowerOutput</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ac9032d034d956f905c2935ad337d9b3a</anchor>
      <arglist>(int sonarBoardNum=1) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSonarMTXBoardType</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a757e1dec0fadb43212d0ae2bbe98270d</anchor>
      <arglist>(int sonarNumber=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarMTXBoardUnitPosition</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>af78d950855fc55ec3a6d0953ab98dcaa</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarMTXBoardUseForAutonomousDriving</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a403cc10b30a10864430aac6316da7cef</anchor>
      <arglist>(int sonarBoardNum=1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarTh</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a7f208ebacaf003a8b325b8db9c03b789</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarUseForAutonomousDriving</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ac85e8603acc1bc63db838c7819672286</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarX</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a4ab3e35222ed32b9659cad8211b05ab3</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarY</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a5481b086837bca62b23808259c4430f0</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSubClassName</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a65f9cee7bc0b36ce97122024672ff952</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSwitchToBaudRate</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ab51946c4de9ee80f685d29794badfffd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransAccel</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a466ce22f75853ee0b61dd6a426109e33</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransDecel</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a78f7a1147602544f1e1235f577155f3c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransVelMax</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aa6d69bc342f9bc3c34858231d37926ab</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVel2Divisor</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a8b45ae77ddb15b9628fc99b72b3266c7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelConvFactor</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a987bd9c8ad40e0fe2dd228cfb11a30cc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ArVideoParams &gt; &amp;</type>
      <name>getVideoParams</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a3d51e15ba89d42e1a299276274af4a23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLatVel</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a7b4087ec723dd51762383a80649e1a10</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMoveCommand</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ad3130b74415cfea902bf54ded3aba124</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSettableAccsDecs</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a0d590f2ac620a355f5a9c530d15b17fd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSettableVelMaxes</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a5ce203b8d76469eecf31df266d366379</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveFrontBumpers</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ad8d5c99672c6d854a642d56016f95d3f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveIR</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a9021b7b0025fdc71ea6b0843ab7cf2a9</anchor>
      <arglist>(int number) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveNewTableSensingIR</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a644e73535aaffa340293ed9f6a4492a9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveRearBumpers</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a1646a6f064488e6e2d207a4337a3b2eb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveSonar</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aabca9bca13d3a6d61288d524830474aa</anchor>
      <arglist>(int boardNum) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveTableSensingIR</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ad4878c8be5a5cd0423b6af7eee053049</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalAddToConfigCommercial</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a34889553cd0709cc244f96c8bee2738f</anchor>
      <arglist>(ArConfig *config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalAddToConfigDefault</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aca87e60de6d2526935e6f6e2add12eb1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>internalGetDistConvFactorPointer</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>af284d8638edc2cb7bbda8c9d69c6d5d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHolonomic</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a577c19a708f7842d3240782a57522a7c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numFrontBumpers</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>aa0f668cd32ddda6941764d1ec9cc7cf2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numRearBumpers</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a2cb6295ed5396c061fb2b9c3f8e3b2cc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>adbc48f81c11b1a9f338b785a37fc08d4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArRobotParams</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>abac503685ebef084e87476ca66ce15b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>internalGetUseDefaultBehavior</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a9d3cf03eef1116648523f0421345f16d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>internalSetUseDefaultBehavior</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a99df164f29f5e2b644420eb6851638bc</anchor>
      <arglist>(bool useDefaultBehavior, const char *owerOutputDisplayHint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addLCDToConfig</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>ab39cd97c13925b9e5590f3548d900b66</anchor>
      <arglist>(int lcdNumber, ArConfig *config, bool useDefaultBehavior)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSonarBoardToConfig</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a9cf841f093a10bf4913de65e583ae228</anchor>
      <arglist>(int sonarBoardNumber, ArConfig *config, bool useDefaultBehavior)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>internalSetSonar</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>a0115fbfa9cfe57a4db2417a398018e8f</anchor>
      <arglist>(int num, int x, int y, int th, int mtxboard=0, int mtxunit=0, int mtxgain=0, int mtxthresh=0, int mtxmax=0)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, int &gt;</type>
      <name>myCommercialSonarFieldMap</name>
      <anchorfile>classArRobotParams.html</anchorfile>
      <anchor>abeecf86d364a354d32ce3581d2a294ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRootMeanSquareCalculator</name>
    <filename>classArRootMeanSquareCalculator.html</filename>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classArRootMeanSquareCalculator.html</anchorfile>
      <anchor>a898540cc020dbdd8aa5b15be0dc404cd</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRootMeanSquareCalculator</name>
      <anchorfile>classArRootMeanSquareCalculator.html</anchorfile>
      <anchor>ac521e929f0e40e9a63028ce78766caca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classArRootMeanSquareCalculator.html</anchorfile>
      <anchor>a258d8c140fc6d450efcf0c09db5d7985</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCurrentNumAveraged</name>
      <anchorfile>classArRootMeanSquareCalculator.html</anchorfile>
      <anchor>a1c1bf513942a6f554d3d7eb003b1d007</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArRootMeanSquareCalculator.html</anchorfile>
      <anchor>ac81e8476e6498d2cfb45eb42d13b875f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRootMeanSquare</name>
      <anchorfile>classArRootMeanSquareCalculator.html</anchorfile>
      <anchor>a394d753fb6332bfea7f415b1fe36dea0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classArRootMeanSquareCalculator.html</anchorfile>
      <anchor>aef474fc4f0d096e5b8b0abed2b7f5b8b</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArRootMeanSquareCalculator</name>
      <anchorfile>classArRootMeanSquareCalculator.html</anchorfile>
      <anchor>a8984539350490739e480d55b60f0272e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRunningAverage</name>
    <filename>classArRunningAverage.html</filename>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classArRunningAverage.html</anchorfile>
      <anchor>a98468ca693f4a536b946c94d4b179d54</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArRunningAverage</name>
      <anchorfile>classArRunningAverage.html</anchorfile>
      <anchor>ab1001745c9f7f1bcb4cd2db3a2a0c360</anchor>
      <arglist>(size_t numToAverage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classArRunningAverage.html</anchorfile>
      <anchor>a50e2ff5e20c19fbebc0a6a6a85677e1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAverage</name>
      <anchorfile>classArRunningAverage.html</anchorfile>
      <anchor>a3531e6d6f8307cacd602e6d1e9dca9e1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCurrentNumAveraged</name>
      <anchorfile>classArRunningAverage.html</anchorfile>
      <anchor>a87c28af9b2c7052addad52f2366b2481</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumToAverage</name>
      <anchorfile>classArRunningAverage.html</anchorfile>
      <anchor>a0478d90bafca360071acbf971d2e925b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseRootMeanSquare</name>
      <anchorfile>classArRunningAverage.html</anchorfile>
      <anchor>aa3022a88c4bdb6fe75f809a537fc4041</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumToAverage</name>
      <anchorfile>classArRunningAverage.html</anchorfile>
      <anchor>ae8733b0aa814fe4ab4f3d1e8690b1531</anchor>
      <arglist>(size_t numToAverage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseRootMeanSquare</name>
      <anchorfile>classArRunningAverage.html</anchorfile>
      <anchor>ad26e7bb88df16e4aab633cc2405953fc</anchor>
      <arglist>(bool useRootMeanSquare)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArRunningAverage</name>
      <anchorfile>classArRunningAverage.html</anchorfile>
      <anchor>a04a523542487605311c86a7622f0f853</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRVisionPacket</name>
    <filename>classArRVisionPacket.html</filename>
    <base>ArBasePacket</base>
    <member kind="function">
      <type></type>
      <name>ArRVisionPacket</name>
      <anchorfile>classArRVisionPacket.html</anchorfile>
      <anchor>a410f2d95c2f00f2ac24ec2e2fcad6a57</anchor>
      <arglist>(ArTypes::UByte2 bufferSize=15)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>byte2ToBufAtPos</name>
      <anchorfile>classArRVisionPacket.html</anchorfile>
      <anchor>a0f75437a8bb77987d758aafe176dbeb0</anchor>
      <arglist>(ArTypes::Byte2 val, ArTypes::UByte2 pose)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArRVisionPTZ</name>
    <filename>classArRVisionPTZ.html</filename>
    <base>ArPTZ</base>
    <member kind="enumvalue">
      <name>MAX_PAN</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865a954531bac9685a574b6caef6f89e9827</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIN_PAN</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865a1d1102e76b7c854447dfd568675930e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIN_TILT</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865ab5f15634c6d7162a1e9a091375a777b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_TILT</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865a173ffd932d9acce0a0b89ff067b8408e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIN_ZOOM</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865af96f35467f7e73e26f2287d85e5d57f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_ZOOM</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865a2d5f77fcf078b0a1c948234981e08848</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TILT_OFFSET_IN_DEGREES</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865a7618b88c6602a9dd2caf4f1e37d70e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN_OFFSET_IN_DEGREES</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865ac6fe586aed33ab49f83c4b9a073c1c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_PAN</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865a954531bac9685a574b6caef6f89e9827</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_TILT</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865a173ffd932d9acce0a0b89ff067b8408e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_ZOOM</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865a2d5f77fcf078b0a1c948234981e08848</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIN_PAN</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865a1d1102e76b7c854447dfd568675930e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIN_TILT</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865ab5f15634c6d7162a1e9a091375a777b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIN_ZOOM</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865af96f35467f7e73e26f2287d85e5d57f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN_OFFSET_IN_DEGREES</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865ac6fe586aed33ab49f83c4b9a073c1c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TILT_OFFSET_IN_DEGREES</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aed9159757eaa7a66b0910d7a273c6865a7618b88c6602a9dd2caf4f1e37d70e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getFOVAtMaxZoom</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>a07746afb218885c05b0132f46f197e73</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getFOVAtMinZoom</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>aa52fe65d1f4e1e010f4277e428ea7a14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPort</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>af6051a9482800511a245fed79707c679</anchor>
      <arglist>(const char *port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerPTZType</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>ac4dd724fcd6541bbf497c2bd808144ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ArPTZ *</type>
      <name>create</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>a7f8228fa6e579ef835e5c92021bf9675</anchor>
      <arglist>(size_t index, ArPTZParams params, ArArgumentParser *parser, ArRobot *robot)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArPTZConnector::GlobalPTZCreateFunc</type>
      <name>ourCreateFunc</name>
      <anchorfile>classArRVisionPTZ.html</anchorfile>
      <anchor>a4b2e570d3bf4bbef4b8f7d8a642c4796</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArS3Series</name>
    <filename>classArS3Series.html</filename>
    <base>ArLaser</base>
    <member kind="function">
      <type></type>
      <name>ArS3Series</name>
      <anchorfile>classArS3Series.html</anchorfile>
      <anchor>a3f5a1b2c66c1c8136bc6e86c95bfdd42</anchor>
      <arglist>(int laserNumber, const char *name=&quot;S3Series&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMonitoringDataAvailable</name>
      <anchorfile>classArS3Series.html</anchorfile>
      <anchor>a68bda29f4c99623677289ff6aa111f7c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArS3Series.html</anchorfile>
      <anchor>abc758b55aa719c50759cc6871065fb33</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendFakeMonitoringData</name>
      <anchorfile>classArS3Series.html</anchorfile>
      <anchor>ad0fbf1c52540aed3e322298585f05af0</anchor>
      <arglist>(bool sendFakeMonitoringData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArS3Series</name>
      <anchorfile>classArS3Series.html</anchorfile>
      <anchor>a9a8868456836212c3e1b1f285cf53442</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArS3Series.html</anchorfile>
      <anchor>ad3156b863ef3a81ae8022c51a7f231ff</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sensorInterp</name>
      <anchorfile>classArS3Series.html</anchorfile>
      <anchor>a3092490216f7f89c95626486076ae457</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArS3SeriesPacketReceiver</name>
    <filename>classArS3SeriesPacketReceiver.html</filename>
    <member kind="function">
      <type></type>
      <name>ArS3SeriesPacketReceiver</name>
      <anchorfile>classArS3SeriesPacketReceiver.html</anchorfile>
      <anchor>a4552e80d27e72ae102dbb5bb28bddfea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArS3SeriesPacketReceiver.html</anchorfile>
      <anchor>a772f930a70a65e9a30e6190232080a6b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArS3SeriesPacket *</type>
      <name>receivePacket</name>
      <anchorfile>classArS3SeriesPacketReceiver.html</anchorfile>
      <anchor>a097fc63c8531a718b9a918e5a45d6bb7</anchor>
      <arglist>(unsigned int msWait=0, bool shortcut=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArS3SeriesPacketReceiver.html</anchorfile>
      <anchor>aad60604e1f51c439bb98ec665c775db9</anchor>
      <arglist>(ArDeviceConnection *conn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArS3SeriesPacketReceiver</name>
      <anchorfile>classArS3SeriesPacketReceiver.html</anchorfile>
      <anchor>aebbc437f5f35741df6008d33615a75b6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArScopedLock</name>
    <filename>classArScopedLock.html</filename>
  </compound>
  <compound kind="class">
    <name>ArSectors</name>
    <filename>classArSectors.html</filename>
    <member kind="function">
      <type></type>
      <name>ArSectors</name>
      <anchorfile>classArSectors.html</anchorfile>
      <anchor>a25baf84d3e5581eecaa27fb8f5838e23</anchor>
      <arglist>(int numSectors=8)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classArSectors.html</anchorfile>
      <anchor>a4e6b09dd4bcbcc1cc45e92b0dff4a846</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>didAll</name>
      <anchorfile>classArSectors.html</anchorfile>
      <anchor>a6c18eae1c4125fd79edb6f5413e07a64</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classArSectors.html</anchorfile>
      <anchor>a3fb8d65e2bae30ef5226983b52a03bb6</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArSectors</name>
      <anchorfile>classArSectors.html</anchorfile>
      <anchor>aaeefe37d3c862342b23af38e85a85e3c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSensorReading</name>
    <filename>classArSensorReading.html</filename>
    <member kind="function">
      <type>void</type>
      <name>applyEncoderTransform</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>acd3093be740498f33be76d87ca6af833</anchor>
      <arglist>(ArTransform trans)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyTransform</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a507ad30658e6c01655175886dd5ff9f7</anchor>
      <arglist>(ArTransform trans)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSensorReading</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a8dd24781fdb81443bab7544051aefa2a</anchor>
      <arglist>(double xPos=0.0, double yPos=0.0, double thPos=0.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSensorReading</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>aa5f94579779c1426a45f704219538d1c</anchor>
      <arglist>(const ArSensorReading &amp;reading)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAdjusted</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>ab1629e42ff337652808c2063bf6be772</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getCounterTaken</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>acd54cb95316c939c8245d0671058afec</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getEncoderPoseTaken</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a520c60fb3a56aa8cda06bf9cb988cb9b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getExtraInt</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a4bd2d4d10670a61fbfb8141219e13a60</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIgnoreThisReading</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a131d02d66ea86c75c43c5323f19d6340</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getLocalPose</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a1a1d846fba2847dc1ed17390e6c1c045</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLocalX</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a4920cfd229668bbaa63ea89a3f157703</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLocalY</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a15d1e4718cb8599d52c4060a71202f34</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getPose</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>ae031a87d0a1849d9a694aaa28fbaa223</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getPoseTaken</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a2fe53b19d04b9c0e411fca6bb2513244</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getRange</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>aa49348d6ab0365e6ee413ba190d90514</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSensorDX</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>abead0bbe3933cdfb22110f6dc9b09400</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSensorDY</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a8f0aa532d145fd335ff1f6a96b56f0a8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getSensorPosition</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a8c87c9a05ba87eecaf9f39e8ccc75159</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSensorTh</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a8ab1dc424a8bdbfd80bfca0c57e2dec7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSensorX</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a6f2409c6045b647c9070b3cd2a8a8448</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSensorY</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>abefa71a272a1aa077a903d716f92a091</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getThTaken</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a5c2224d460da099752c7ba0afbb5602e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getX</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>af421b63a5262d1b3913ee43250ab3aaf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getXTaken</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>affda2edb5b5b54ed2aa50539d624148c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getY</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a59f6f1ecbf6b37c636b27dedb3959562</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getYTaken</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a6cf3574d97fdab8f994d70d73d34fe79</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNew</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a2dce6270a7cabc6eb3c40d8246cd16bb</anchor>
      <arglist>(unsigned int counter) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newData</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>aabcfe224b429a2406f76a88e71cf2420</anchor>
      <arglist>(int range, ArPose robotPose, ArPose encoderPose, ArTransform trans, unsigned int counter, ArTime timeTaken, bool ignoreThisReading=false, int extraInt=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newData</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a987885b3adfcc9687b54b7847667ba90</anchor>
      <arglist>(int sx, int sy, ArPose robotPose, ArPose encoderPose, ArTransform trans, unsigned int counter, ArTime timeTaken, bool ignoreThisReading=false, int extraInt=0)</arglist>
    </member>
    <member kind="function">
      <type>ArSensorReading &amp;</type>
      <name>operator=</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a021a383dac97015ea500053aee11f9e8</anchor>
      <arglist>(const ArSensorReading &amp;reading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetSensorPosition</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a66fd0842a90e181ec2b1b2ded2e2d1e9</anchor>
      <arglist>(double xPos, double yPos, double thPos, bool forceComputation=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAdjusted</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>ad354b788441fd7cfe5389ead5b6d1488</anchor>
      <arglist>(bool adjusted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraInt</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>ac0b214302b667b489ae7f34170c847a6</anchor>
      <arglist>(int extraInt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreThisReading</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a3649a3286a5ff4b1a3be03bebf8056de</anchor>
      <arglist>(bool ignoreThisReading)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArSensorReading</name>
      <anchorfile>classArSensorReading.html</anchorfile>
      <anchor>a37dbb385aa53605f290da34cc4188aa7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSerialConnection</name>
    <filename>classArSerialConnection.html</filename>
    <base>ArDeviceConnection</base>
    <member kind="enumeration">
      <type></type>
      <name>Open</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2a056665bf9ddabcad6c7e53e3e25d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_COULD_NOT_OPEN_PORT</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2a056665bf9ddabcad6c7e53e3e25d84ac0eea66274bf02ae7af107fabfcc3d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_COULD_NOT_SET_UP_PORT</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2a056665bf9ddabcad6c7e53e3e25d84a02bdf357f43fb4936fcb598877a7320f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_INVALID_BAUD_RATE</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2a056665bf9ddabcad6c7e53e3e25d84aadd67b088b70689f136f48edac58c650</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_COULD_NOT_SET_BAUD</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2a056665bf9ddabcad6c7e53e3e25d84ab1cb59de5c2b832733890bb21cc2459b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_ALREADY_OPEN</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2a056665bf9ddabcad6c7e53e3e25d84a2bcf41b557b6018567ef23efb20a3c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_ALREADY_OPEN</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2a056665bf9ddabcad6c7e53e3e25d84a2bcf41b557b6018567ef23efb20a3c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_COULD_NOT_OPEN_PORT</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2a056665bf9ddabcad6c7e53e3e25d84ac0eea66274bf02ae7af107fabfcc3d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_COULD_NOT_SET_BAUD</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2a056665bf9ddabcad6c7e53e3e25d84ab1cb59de5c2b832733890bb21cc2459b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_COULD_NOT_SET_UP_PORT</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2a056665bf9ddabcad6c7e53e3e25d84a02bdf357f43fb4936fcb598877a7320f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_INVALID_BAUD_RATE</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2a056665bf9ddabcad6c7e53e3e25d84aadd67b088b70689f136f48edac58c650</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSerialConnection</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a749c4362becea68b6aff81a3f3114fe5</anchor>
      <arglist>(bool is422=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBaud</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a967ea94aae38a582b43959d2fabd1376</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getCTS</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a684944674d1a3f0e36ce1d7819ef68f0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDCD</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>aeae7777da68670c4bbdb72f5d03cb759</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDSR</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a0560c9ab045271a568d74906dfc70725</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getHardwareControl</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a573406f1a9830ee755ac4bcfd30538cb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getPort</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>ac84fb729e73ede58996006aba1f8d506</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRing</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a730c35c05dd9e02ef27bdc36f4bc1c2e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>open</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a2382ba9edff42b36a92d05afa07bdf8c</anchor>
      <arglist>(const char *port=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setBaud</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a41ff53679c82a208b4f30bce535da2a1</anchor>
      <arglist>(int baud)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHardwareControl</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a0f5e8dd20028d8f00984ba9d0e513b83</anchor>
      <arglist>(bool hardwareControl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPort</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>a70d24c612f12fabc7c6fd9aff2de320d</anchor>
      <arglist>(const char *port=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArSerialConnection</name>
      <anchorfile>classArSerialConnection.html</anchorfile>
      <anchor>af31c4e4b8dd9c4f61365a2c682e27259</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSick</name>
    <filename>classArSick.html</filename>
    <base>ArLMS2xx</base>
    <member kind="enumvalue">
      <name>BAUD19200</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8c37e1ced06a894bed8ca2f912eb6005a92cb952572a4dc008b5fea1f58045d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAUD38400</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8c37e1ced06a894bed8ca2f912eb6005a8df5dacefb48f07ff1b901e88467df31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAUD9600</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8c37e1ced06a894bed8ca2f912eb6005a13f8a15408d96abc9602d03c2d231ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAUD_INVALID</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8c37e1ced06a894bed8ca2f912eb6005a79346eb54d582db6ba9433b8a91160ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BaudRate</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8c37e1ced06a894bed8ca2f912eb6005</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAUD9600</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8c37e1ced06a894bed8ca2f912eb6005a13f8a15408d96abc9602d03c2d231ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAUD19200</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8c37e1ced06a894bed8ca2f912eb6005a92cb952572a4dc008b5fea1f58045d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAUD38400</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8c37e1ced06a894bed8ca2f912eb6005a8df5dacefb48f07ff1b901e88467df31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAUD_INVALID</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8c37e1ced06a894bed8ca2f912eb6005a79346eb54d582db6ba9433b8a91160ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Bits</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a145259518d1b75e099789f1a8a65c85f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BITS_1REFLECTOR</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a145259518d1b75e099789f1a8a65c85fa926dd783536ee5d2fd432537f4741c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BITS_2REFLECTOR</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a145259518d1b75e099789f1a8a65c85fa834a29529181a58793c64fff0a8e665c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BITS_3REFLECTOR</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a145259518d1b75e099789f1a8a65c85fa6dab42d52e2c13377baa3883beeabe15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BITS_INVALID</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a145259518d1b75e099789f1a8a65c85fa3ada913d12aa6a6c4651db21c4df15aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BITS_1REFLECTOR</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a145259518d1b75e099789f1a8a65c85fa926dd783536ee5d2fd432537f4741c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BITS_2REFLECTOR</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a145259518d1b75e099789f1a8a65c85fa834a29529181a58793c64fff0a8e665c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BITS_3REFLECTOR</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a145259518d1b75e099789f1a8a65c85fa6dab42d52e2c13377baa3883beeabe15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BITS_INVALID</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a145259518d1b75e099789f1a8a65c85fa3ada913d12aa6a6c4651db21c4df15aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Degrees</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a7d5f71e49fe2964984145cc63050a71d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEGREES180</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a7d5f71e49fe2964984145cc63050a71da732d82f8e4a3b6a488be5faab62b64ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEGREES100</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a7d5f71e49fe2964984145cc63050a71da9feaf98b651b41bd4db0860dccaf33bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEGREES_INVALID</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a7d5f71e49fe2964984145cc63050a71da870417a50fe230b04f5ad869b2bf8d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEGREES100</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a7d5f71e49fe2964984145cc63050a71da9feaf98b651b41bd4db0860dccaf33bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEGREES180</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a7d5f71e49fe2964984145cc63050a71da732d82f8e4a3b6a488be5faab62b64ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEGREES_INVALID</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a7d5f71e49fe2964984145cc63050a71da870417a50fe230b04f5ad869b2bf8d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Increment</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aa4c87ae82d48336ddef3df0e33e0d012</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCREMENT_ONE</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aa4c87ae82d48336ddef3df0e33e0d012a33c47bd7730b7eff2f4655b9e702cdb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCREMENT_HALF</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aa4c87ae82d48336ddef3df0e33e0d012a23158a1a8b6295eea5f7058875456553</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCREMENT_INVALID</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aa4c87ae82d48336ddef3df0e33e0d012ac277a4c8aa028e6c85cff2c710f99241</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCREMENT_HALF</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aa4c87ae82d48336ddef3df0e33e0d012a23158a1a8b6295eea5f7058875456553</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCREMENT_INVALID</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aa4c87ae82d48336ddef3df0e33e0d012ac277a4c8aa028e6c85cff2c710f99241</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCREMENT_ONE</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aa4c87ae82d48336ddef3df0e33e0d012a33c47bd7730b7eff2f4655b9e702cdb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Units</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a4976232f497ab679a524d8e01785a791</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNITS_1MM</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a4976232f497ab679a524d8e01785a791adae0b43c1da072cb02c38dbdc80d63c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNITS_1CM</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a4976232f497ab679a524d8e01785a791a7d400345c83ad1f6a0787f42e98ff28d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNITS_10CM</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a4976232f497ab679a524d8e01785a791a57ea7214d7b818fa34503c08bbfabbe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNITS_INVALID</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a4976232f497ab679a524d8e01785a791aa5c88b1f58bae5290958362acf212dde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNITS_10CM</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a4976232f497ab679a524d8e01785a791a57ea7214d7b818fa34503c08bbfabbe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNITS_1CM</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a4976232f497ab679a524d8e01785a791a7d400345c83ad1f6a0787f42e98ff28d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNITS_1MM</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a4976232f497ab679a524d8e01785a791adae0b43c1da072cb02c38dbdc80d63c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNITS_INVALID</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a4976232f497ab679a524d8e01785a791aa5c88b1f58bae5290958362acf212dde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConnectCB</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>ae929f31a288591fa3805d98a41e76996</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDataCB</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a2edfe4beacef117508fd1ad0522ca404</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDisconnectNormallyCB</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a1e3eb742636947746011f822f46a91c8</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDisconnectOnErrorCB</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a734ee74bc04209745442d90e26345db4</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFailedConnectCB</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>acc6e9aa1185a57526275b1e49a8e280f</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSick</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a60f9ebf4e1c4f5946f86b697daac5d33</anchor>
      <arglist>(size_t currentBufferSize=361, size_t cumulativeBufferSize=0, const char *name=&quot;laser&quot;, bool addAriaExitCB=true, bool isSecondLaser=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a3632114e4e61b44cc7776eff5d93af2f</anchor>
      <arglist>(bool useSim=false, bool powerControl=true, bool laserFlipped=false, BaudRate baud=BAUD38400, Degrees deg=DEGREES180, Increment incr=INCREMENT_ONE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureShort</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a613759fea2b3fe0bb77f7faf079e3e1b</anchor>
      <arglist>(bool useSim=false, BaudRate baud=BAUD38400, Degrees deg=DEGREES180, Increment incr=INCREMENT_ONE)</arglist>
    </member>
    <member kind="function">
      <type>Bits</type>
      <name>getBits</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a5bebfc8b1030f160aa42532600e63044</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getConnectionTimeoutTime</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a1a8271e02b2c812c89907b7c47b65596</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Degrees</type>
      <name>getDegrees</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aab94712749857ee4f8d9015f4a1f2a2b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFilterCleanCumulativeInterval</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a57d3f64bfa54c2222f12d85933072a23</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFilterCumulativeCleanDist</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aa5355380bfb2021ceb5c6ac11c4f938e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFilterCumulativeInsertMaxDist</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>ad54bf6251f3e22f76c442eb187d29336</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFilterCumulativeMaxAge</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aac658e92dc6ca4d6967a786bd4549f15</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFilterCumulativeMaxDist</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a633907baf2fb97d9fbd9a54d39e9484f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFilterCumulativeNearDist</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a271d3df731772b1992e4ef319d3c5924</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFilterNearDist</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>af62e944ed98f77014eee962cccad7f29</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Increment</type>
      <name>getIncrement</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a950720baa996445bcb4a8c8542ed82d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getMinRange</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>afff149818eff45f85ba58cc6108d67c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSickPacCount</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8f8ab1e43b999a83ef76043c7d0cd1ba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Units</type>
      <name>getUnits</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aab0e8cd389749560d13411cebafd3f2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isControllingPower</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>af3bea33057c44abeb9c9c764dd10b079</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLaserFlipped</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a7eb661be5012335b158d9360967cd8ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remConnectCB</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a9b23ffd741b3f6a5dfc1850d038f3aa6</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDataCB</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>ab2ff27bcb3dccffb9b396b8857106856</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDisconnectNormallyCB</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a718579494f21af3fc26e12edac927cf7</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDisconnectOnErrorCB</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a5788e4edd459f4abd5ed54b6a0bf850d</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remFailedConnectCB</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a92fa369055ce57de45689dfdb153b8a6</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>runOnRobot</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aaaa56c1db8b93159afa6c852a888f0a8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionTimeoutTime</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a7bd2450deee4bda8500bd70d488cc731</anchor>
      <arglist>(int secs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterCleanCumulativeInterval</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>aa48b6c3121de0817a271415035d31b62</anchor>
      <arglist>(int milliSeconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterCumulativeCleanDist</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>acf4bb057df9f2f484789d2fea9ddf585</anchor>
      <arglist>(double dist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterCumulativeInsertMaxDist</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8e263feb9594836ad45526d628cd9c05</anchor>
      <arglist>(double dist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterCumulativeMaxAge</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a8ac0789949f9faa17b5b1b6c3952459d</anchor>
      <arglist>(int seconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterCumulativeMaxDist</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a4a661b42185ec7ac814583c9a172a398</anchor>
      <arglist>(double dist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterCumulativeNearDist</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a4e177b73b2588b47a08d08596059a872</anchor>
      <arglist>(double dist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterNearDist</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>ac8a9188a9c5dc2fce9d9d2dfc84e2246</anchor>
      <arglist>(double dist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsControllingPower</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>ae3da8a5d01f877b0c89c384e24dcef56</anchor>
      <arglist>(bool controlPower)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsLaserFlipped</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>ab9eb8c1443eb7c004016a2a6783dfb12</anchor>
      <arglist>(bool laserFlipped)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinRange</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a45350e6e512d54ac173878ae7cebd62e</anchor>
      <arglist>(unsigned int minRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRangeInformation</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>ae2ed46744415938ed77e3d761b36127c</anchor>
      <arglist>(Bits bits=BITS_1REFLECTOR, Units units=UNITS_1MM)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tryingToConnect</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>ab0fea028afffa27311d777dc98f1f2d9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArSick</name>
      <anchorfile>classArSick.html</anchorfile>
      <anchor>a248f770625f323026d0e3ba6e52a8f7e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSignalHandler</name>
    <filename>classArSignalHandler.html</filename>
    <base>ArASyncTask</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArSignalHandler</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>a50c08e255b08ab66b81693e07876e38f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addHandlerCB</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>a48cf6dfa9c6f95864534b4d87849e033</anchor>
      <arglist>(ArFunctor1&lt; int &gt; *func, ArListPos::Pos position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>block</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>ace80ef77760a9c47639a82ba891d2c9b</anchor>
      <arglist>(Signal sig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>blockAllThisThread</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>a4df88f6d1c86dd2367be1a490cd59104</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>blockCommon</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>ac3905b131f4224e7cbaec67de0cd3d49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>blockCommonThisThread</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>aaacbb0de60881c236fbb01eafab26c0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>createHandlerNonThreaded</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>a3ec75831b5c143668b4aefba87fd5f6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>createHandlerThreaded</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>a01509c79a6be50f527c0aa04efdfddf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delAllHandlerCBs</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>aaefe2eba1ea2ea8d686813ad0edc86ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delHandlerCB</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>a56c5f923669397fad6eb6a513f978b6f</anchor>
      <arglist>(ArFunctor1&lt; int &gt; *func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArSignalHandler *</type>
      <name>getHandler</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>aa8a7697764708f84daa86c53f0fdc682</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>handle</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>aa2645175511274d6816b24c2b190f827</anchor>
      <arglist>(Signal sig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>nameSignal</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>a5be3b4e338a9a54df36a81f1619d02fa</anchor>
      <arglist>(int sig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unblock</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>aedd9a39d9b5aabcc93544706253f8d1c</anchor>
      <arglist>(Signal sig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unblockAll</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>a0d8582a19d463dc7618188701061a14b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unhandle</name>
      <anchorfile>classArSignalHandler.html</anchorfile>
      <anchor>a6ac04eee0943686bd97006a57f185192</anchor>
      <arglist>(Signal sig)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSimpleConnector</name>
    <filename>classArSimpleConnector.html</filename>
    <member kind="function">
      <type></type>
      <name>ArSimpleConnector</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>ab4188b05ada67f6cafd91761670b7453</anchor>
      <arglist>(int *argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSimpleConnector</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>aea9b070b8443f8a552392b79bf3d684c</anchor>
      <arglist>(ArArgumentBuilder *arguments)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSimpleConnector</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>aa3dd61eecd30c41ec938284efccc5f30</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectLaser</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>a85761d7cdcf48ba601c728496dfe3964</anchor>
      <arglist>(ArSick *laser)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectLaserArbitrary</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>a7b6d553c617f1b6d507fc89678e3b6ad</anchor>
      <arglist>(ArSick *laser, int laserNumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectRobot</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>aecf2650aabb8fa3c48aed82b947a4a81</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectSecondLaser</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>ac4998a1a457f0a953849163b2e5db1c8</anchor>
      <arglist>(ArSick *laser)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOptions</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>ae740e5c073af8db20af761c13766463d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>a303f50f91f8a9867910ba8bc7b0056cb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>a18eb8c75fbc8c54fe64baccebee85847</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNumLasers</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>a55c08728c7817e35981011a747dc1583</anchor>
      <arglist>(int maxNumLasers=1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupLaser</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>a65077c5b87275de54ea7cb05b4c7121b</anchor>
      <arglist>(ArSick *laser)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupLaserArbitrary</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>ac15f90959219be4fc3a6221f8099d675</anchor>
      <arglist>(ArSick *laser, int laserNumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupRobot</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>ae25aab0550fe6c3207241a9d1860efb5</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupSecondLaser</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>a4161136f6399573219692d14ded88be0</anchor>
      <arglist>(ArSick *laser)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArSimpleConnector</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>a865a60557398a4510e2947c898fd31b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>finishConstructor</name>
      <anchorfile>classArSimpleConnector.html</anchorfile>
      <anchor>a90907ee4d33f076fae4de9adfefb40b3</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSimulatedGPS</name>
    <filename>classArSimulatedGPS.html</filename>
    <base virtualness="virtual">ArGPS</base>
  </compound>
  <compound kind="class">
    <name>ArSimulatedLaser</name>
    <filename>classArSimulatedLaser.html</filename>
    <base>ArLaser</base>
    <member kind="function">
      <type></type>
      <name>ArSimulatedLaser</name>
      <anchorfile>classArSimulatedLaser.html</anchorfile>
      <anchor>aace4ad858e96e0cf6acad7b8cbddba57</anchor>
      <arglist>(ArLaser *laser)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>blockingConnect</name>
      <anchorfile>classArSimulatedLaser.html</anchorfile>
      <anchor>a984e8c9ac335d65996aef77bc7b22a52</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArSimulatedLaser</name>
      <anchorfile>classArSimulatedLaser.html</anchorfile>
      <anchor>a0bd658db2984f2c99bc659c2142cd427</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSocket</name>
    <filename>classArSocket.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>accept</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a6647efb8d20f9523dad090a68b1e4e2c</anchor>
      <arglist>(ArSocket *sock)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSocket</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a6e63b642e8fa16034373b51ef1c35705</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSocket</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a612acf14e9aca4e12e931784a5147513</anchor>
      <arglist>(const char *host, int port, Type type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSocket</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a133fce4174f7a64327353510804796e9</anchor>
      <arglist>(int port, bool doClose, Type type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearPartialReadString</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a77095a410aa628bdb678551ffb7a8dc9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>close</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a89ab9a4e404526343ccf6ba3b6644c58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>comparePartialReadString</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a678068d415d94ac8cb24af819b928786</anchor>
      <arglist>(const char *partialString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ae9d803dcf9ad0bb72b790d3098ca8dc5</anchor>
      <arglist>(const char *host, int port, Type type=TCP, const char *openOnIP=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectTo</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a7264b5996106c967abad8260e416d4d1</anchor>
      <arglist>(const char *host, int port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectTo</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a53c91a81c037e89f8c451ed265664ae9</anchor>
      <arglist>(struct sockaddr_in *sin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a933a1ca8492112def78ce9129023fc33</anchor>
      <arglist>(int fd, bool doclose)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a0ecc5803161bcb8064355370f229bfd6</anchor>
      <arglist>(ArSocket *s)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>create</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a65d4a673234731800cb0f0fd399f2e2a</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findValidPort</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a275484e4c9c98f05e61d7427ac3dcac6</anchor>
      <arglist>(int startPort, const char *openOnIP=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBadRead</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ace2cdae7d0f720bf806c5c8fd80b6283</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBadWrite</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ae0f6a5a791d9cc67672e72f466a20733</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getBytesRecvd</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>adacaadc3f0a9368f74d28653a51aa64b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getBytesSent</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ad4caa942c5a621f7ae7d6f4e4e791734</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor *</type>
      <name>getCloseCallback</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ad6981526f9b4deeea5358d62915cdeb6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getEcho</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a648c510820eda49619a22248915b084b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Error</type>
      <name>getError</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>aa7fa3b38b159dfca7b2fe9a49cb78fde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getErrorStr</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a940299aab2087e9247dece7b7fe01a5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getErrorTracking</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a89aeefed86ac695e62480ec8e301f7dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFD</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a6f083363003397e042900e745da00a56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getIPString</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>aaa6688b1776c58956b5d77e5b4933ebf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastStringReadTime</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a419d5c27368a73c3c2e794fdf198d280</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLogWriteStrings</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a15522e90c684f87d35e82d206edb2615</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getRawIPString</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a5522159a0fa067bb20ad5dfb271d4e87</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getRecvs</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a450f731d0774186d6029425f36e2867e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getSends</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a8bd089aedbebfd7492efabd66128b982</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSockName</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ae8bf1dbbb2aaecf96d23a13e68f68032</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getStringUseWrongEndChars</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a1fa3014f97e7f63a750f09233910dba9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>getType</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ad367e1ccbe8b88b1049f75d2d9c31973</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>struct in_addr *</type>
      <name>inAddr</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a8145c15c517a8be617630b22b854c4f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned short int</type>
      <name>inPort</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a34005874b46b174cfff549bcd8f50958</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>open</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a7a9bd59b92bd1018c8be0af39eac2dc8</anchor>
      <arglist>(int port, Type type, const char *openOnIP=NULL)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a6cf324be0075d3469a70d01d4740e23c</anchor>
      <arglist>(void *buff, size_t len, unsigned int msWait=0)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>readString</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a7a6449d5b385d44e26af4250eaf7658c</anchor>
      <arglist>(unsigned int msWait=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>recvFrom</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a5b1623bf035093715ab90af1677ce2f2</anchor>
      <arglist>(void *msg, int len, sockaddr_in *sin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetTracking</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ae6623e8121740f86d339678bd374a64e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sendTo</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>aad4e9284aa39028d770a6fef0ebb62a3</anchor>
      <arglist>(const void *msg, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sendTo</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a7aa35f485bbdbacfe599617366d761ff</anchor>
      <arglist>(const void *msg, int len, struct sockaddr_in *sin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setBroadcast</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a946caf0804f5d91682d816d0995c84c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCloseCallback</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a00d3639bbd69a3b15a0a2d1bb18926ae</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDoClose</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>aee8af0ae8cda0d42af53b0d947f63662</anchor>
      <arglist>(bool yesno)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEcho</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a88ff816474b10a1ff7d5e1e6f669ad0b</anchor>
      <arglist>(bool echo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorTracking</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a51f2ffe292d3e8aa8cf2dbc3616b4fdc</anchor>
      <arglist>(bool errorTracking)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFakeWrites</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a385de96a675c6e7ae58cc8e8a5fae99e</anchor>
      <arglist>(bool fakeWrites)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIPString</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ae1ce133ca58c9f8277cdbce80aa04241</anchor>
      <arglist>(const char *ipString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setLinger</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>aee3f81f6d774f883b1ff46fe9d89d02f</anchor>
      <arglist>(int time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogWriteStrings</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a4b44fe448b57e7730a049e62464760b5</anchor>
      <arglist>(bool logWriteStrings)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setNoDelay</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a5c435287e6e2f778874dcc15c6aa4e27</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setNonBlock</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a657700645f097c3b53c2f5bb8c97cb7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadStringIgnoreReturn</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a83885cf24c725497489d10cf68dcc264</anchor>
      <arglist>(bool ignore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setReuseAddress</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a87e6aaf36163f42cac218333ecc078b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringUseWrongEndChars</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>af4a311d9c20b378cf65a2f8c0bb45158</anchor>
      <arglist>(bool useWrongEndChars)</arglist>
    </member>
    <member kind="function">
      <type>struct sockaddr_in *</type>
      <name>sockAddrIn</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a927ee1fa6eace33c6338f2644a614513</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transfer</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>aa92f0db004d5642efb4298e4fcad2738</anchor>
      <arglist>(ArSocket *s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>af2cfbd564eec7020283f5a6fe41f558f</anchor>
      <arglist>(const void *buff, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>writeString</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a62c1a96eb8fa0dd1c384646228eac194</anchor>
      <arglist>(const char *str,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>writeStringPlain</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a69ca55d1e3007e2743c53b038bbe62a7</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArSocket</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a9a646555713d800087963735c3aa55b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>addrHost</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a666b81136fa241062dfdc4aff63913f3</anchor>
      <arglist>(struct in_addr &amp;addr, char *host)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getHostName</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ac2bfb5761883c6306a3c22b90180ad36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hostAddr</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>aa11d9c51e510e4b7bfc35103bc3b4114</anchor>
      <arglist>(const char *host, struct in_addr &amp;addr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>hostToNetOrder</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>af081e418282cd9d9cc72672808b9ce9d</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>init</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a11b42725ca91a9d95cbe85f56feba58e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>inToA</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ab26ab367da522f4e388cbba5e55438bb</anchor>
      <arglist>(struct in_addr *addr, char *buff)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>maxHostNameLen</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>ad4c5eb5dc6183eb692867399acc1d024</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>netToHostOrder</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>afd267582a359ab24bdfd04ef12f211c9</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>shutdown</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>aec8534984137fb13a4f1e94c2b3839dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>sockAddrLen</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>aac70285e1c71e39c730354779aad930f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>toString</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a3dabc6bfbee605d1c4ed786251c2487e</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static bool</type>
      <name>ourInitialized</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>aca573cdd6accf8b1a4597144d11caf7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doStringEcho</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a02c8cf76da42735513ed16f337d7995c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setRawIPString</name>
      <anchorfile>classArSocket.html</anchorfile>
      <anchor>a91f2b1736eefe5a0aa68664473a1bef5</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSonarConnector</name>
    <filename>classArSonarConnector.html</filename>
    <class kind="class">ArSonarConnector::SonarData</class>
    <member kind="function">
      <type>bool</type>
      <name>addSonar</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>a8746703bfabfac28f5165ac21e56a998</anchor>
      <arglist>(ArSonarMTX *sonar, int sonarNumber=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSonarConnector</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>ac37f03297a9f3158a7f1daf5bdb40de3</anchor>
      <arglist>(ArArgumentParser *parser, ArRobot *robot, ArRobotConnector *robotConnector, bool autoParseArgs=true, ArLog::LogLevel infoLogLevel=ArLog::Verbose, ArRetFunctor1&lt; bool, const char * &gt; *turnOnPowerOutputCB=NULL, ArRetFunctor1&lt; bool, const char * &gt; *turnOffPowerOutputCB=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectSonar</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>af2804f2cf1e774e01ff01796fab62380</anchor>
      <arglist>(ArSonarMTX *sonar, int sonarNumber=1, bool forceConnection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectSonars</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>aff4cf06b8187ee5c758c81381a4fe7e4</anchor>
      <arglist>(bool continueOnFailedConnect=false, bool addConnectedSonarsToRobot=true, bool addAllSonarsToRobot=false, bool turnOnSonars=true, bool powerCycleSonarOnFailedConnect=true)</arglist>
    </member>
    <member kind="function">
      <type>ArSonarMTX *</type>
      <name>getSonar</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>ad886f21681458f0e089ba73727ec37c5</anchor>
      <arglist>(int sonarNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOptions</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>acd6239ba6c0acaa757c0db378e1b3b42</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>a86f06c9faff7c72293c85e6795d27227</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>a0c88bd456c470deb69140c742bcf6270</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>replaceSonar</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>a04948a35c2edd91e9441dfef0f66cac5</anchor>
      <arglist>(ArSonarMTX *sonar, int sonarNumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupSonar</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>a0ef7a4f917e1cbe5c072435c0835a8d7</anchor>
      <arglist>(ArSonarMTX *sonar, int sonarNumber=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArSonarConnector</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>a8142dd593a44010ccec69cf9a197084a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logSonarOptions</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>a1db5c669b7ec2f5e5dad7a04046bce2c</anchor>
      <arglist>(SonarData *sonardata, bool header=true, bool metaOpts=true) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>parseSonarArgs</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>a9bd7cf71907c3c1c6f65424cba371c75</anchor>
      <arglist>(ArArgumentParser *parser, SonarData *sonarData)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>turnOnPower</name>
      <anchorfile>classArSonarConnector.html</anchorfile>
      <anchor>a5ae11edd8e1b3cac18f3967fe1da0161</anchor>
      <arglist>(SonarData *sonarData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSonarDevice</name>
    <filename>classArSonarDevice.html</filename>
    <base>ArRangeDevice</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addReading</name>
      <anchorfile>classArSonarDevice.html</anchorfile>
      <anchor>a3056dec6b3b0c089049084fef1013cbb</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSonarDevice</name>
      <anchorfile>classArSonarDevice.html</anchorfile>
      <anchor>a988229cdcea77a3db2db03274cdc4376</anchor>
      <arglist>(size_t currentBufferSize=24, size_t cumulativeBufferSize=64, const char *name=&quot;sonar&quot;)</arglist>
    </member>
    <member kind="function">
      <type>ArRetFunctor1&lt; bool, ArPose &gt; *</type>
      <name>getIgnoreReadingCB</name>
      <anchorfile>classArSonarDevice.html</anchorfile>
      <anchor>a2816fe27ed265f1c1a0d65c95e17c640</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processReadings</name>
      <anchorfile>classArSonarDevice.html</anchorfile>
      <anchor>a7c2aa42fcf953627c4377b21f8d488f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCumulativeMaxRange</name>
      <anchorfile>classArSonarDevice.html</anchorfile>
      <anchor>a791db9b14ead6b4756d01d89da8dcf26</anchor>
      <arglist>(double range)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreReadingCB</name>
      <anchorfile>classArSonarDevice.html</anchorfile>
      <anchor>a6aeacb6921c83ecf2c669a5d549e7beb</anchor>
      <arglist>(ArRetFunctor1&lt; bool, ArPose &gt; *ignoreReadingCB)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRobot</name>
      <anchorfile>classArSonarDevice.html</anchorfile>
      <anchor>a59b8cb9da7b96ac48d345e20e97fb034</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArSonarDevice</name>
      <anchorfile>classArSonarDevice.html</anchorfile>
      <anchor>a87e1786d73b5648a8d490c98f7586392</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSonarMTX</name>
    <filename>classArSonarMTX.html</filename>
    <base>ArASyncTask</base>
    <member kind="function">
      <type>void</type>
      <name>addDisconnectOnErrorCB</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a3ae7a9e283901ac20bd32a1a4f3aad57</anchor>
      <arglist>(ArFunctor *functor, int position=51)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSonarMTX</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a0ac8a3f6500c9c3840d8fe9472fbf50e</anchor>
      <arglist>(int sonarBoardNum=0, const char *name=&quot;MTXSonar&quot;, ArDeviceConnection *conn=NULL, ArRobot *robot=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>blockingConnect</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a0aa2c634b4c771855111bd136400ab28</anchor>
      <arglist>(bool sendTracking, bool recvTracking)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkLostConnection</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a4f160d8ccd8e81cc0f86fa15b0a8fb2b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectOnError</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a56b46de3f0b400e6ee6c525cbaa6c2b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>fakeConnect</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>ab56a9dc5352d0960df07b88573f7575f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBoardDelay</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>ae0cbc9a4da30552d345134bb4d894564</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConnectionTimeoutSeconds</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a2f48ad508410127fb7b7eea919e9a251</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDefaultPortType</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a0910bc1a9eb41a9643fe6abf2cc20810</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDefaultTcpPort</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a49d4a5468fe94fd15308f56b3c266161</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>ae83566cde3d72d64f6f2a969291b74cf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastReadingTime</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a77447dc87423d0d8d70d3c9c2b39506d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumConfiguredTransducers</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a1c06ae4f9bd1e141bb8d5dd9577cb352</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTransducers</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>ae3ec8aab10f47267282261cb5b56e741</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArRobotPacketReceiver *</type>
      <name>getPacketReceiver</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a7c4287e9ba33b6596e415e392a86c0fc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArRobotPacketSender *</type>
      <name>getPacketSender</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a39ddc5bdf80d77cc6d87a9debe37d9d6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getReadingCount</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>ac453e3c1524c10e401341ea158d0ebe8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lockDevice</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>abacd599c4f479d406deed00f9e460700</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a9a6e0752f037883ca179f46ed9387817</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDisconnectOnErrorCB</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a37215e24849c18e8c482fe30e8ca8a40</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConnectionTimeoutSeconds</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a79969067e6c118e35469e5f9429e7add</anchor>
      <arglist>(double seconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>af1b896e7b73ba75a0adc243714b8f836</anchor>
      <arglist>(ArDeviceConnection *conn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRobot</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a90f8c3d6507cf602e0608d740b0a8a54</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tryLockDevice</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>ac2af5b467b5984d20d9fcf63f669c857</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>unlockDevice</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a8a47a789f355cbf068d488ebeda09c95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArSonarMTX</name>
      <anchorfile>classArSonarMTX.html</anchorfile>
      <anchor>a1bacb3c0f7b912e9a3ad9839ddb01002</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSonyPacket</name>
    <filename>classArSonyPacket.html</filename>
    <base>ArBasePacket</base>
    <member kind="function">
      <type></type>
      <name>ArSonyPacket</name>
      <anchorfile>classArSonyPacket.html</anchorfile>
      <anchor>a5c0482a0efbcd8920184762164005c09</anchor>
      <arglist>(ArTypes::UByte2 bufferSize=15)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>byte2ToBufAtPos</name>
      <anchorfile>classArSonyPacket.html</anchorfile>
      <anchor>ac88d9006ffc5fbfab9c09826a4630588</anchor>
      <arglist>(ArTypes::Byte2 val, ArTypes::UByte2 pose)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSonyPTZ</name>
    <filename>classArSonyPTZ.html</filename>
    <base>ArPTZ</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getFOVAtMaxZoom</name>
      <anchorfile>classArSonyPTZ.html</anchorfile>
      <anchor>a930cc20bcada7bd8b2db5f0581e2b015</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getFOVAtMinZoom</name>
      <anchorfile>classArSonyPTZ.html</anchorfile>
      <anchor>ada2684528c6c43377ee6a32d073628d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerPTZType</name>
      <anchorfile>classArSonyPTZ.html</anchorfile>
      <anchor>a9e18f5b63ef9f0c7b9cccf33b8e21abe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ArPTZ *</type>
      <name>create</name>
      <anchorfile>classArSonyPTZ.html</anchorfile>
      <anchor>af25d9d3eaa8e2427ee9b5b3f3a3f74c0</anchor>
      <arglist>(size_t index, ArPTZParams params, ArArgumentParser *parser, ArRobot *robot)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArPTZConnector::GlobalPTZCreateFunc</type>
      <name>ourCreateFunc</name>
      <anchorfile>classArSonyPTZ.html</anchorfile>
      <anchor>a0adb74967fda74e1eb710b10c21f7e69</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSoundPlayer</name>
    <filename>classArSoundPlayer.html</filename>
    <member kind="function" static="yes">
      <type>static ArRetFunctor2&lt; bool, const char *, const char * &gt; *</type>
      <name>getPlayWavFileCallback</name>
      <anchorfile>classArSoundPlayer.html</anchorfile>
      <anchor>a814d7e32962633f99ae5229c69502647</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArFunctor *</type>
      <name>getStopPlayingCallback</name>
      <anchorfile>classArSoundPlayer.html</anchorfile>
      <anchor>ace0317817d565d9328500bbe806eefac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>playNativeFile</name>
      <anchorfile>classArSoundPlayer.html</anchorfile>
      <anchor>ad1f41bd5dceea84a793b33cf14f3d126</anchor>
      <arglist>(const char *filename, const char *params)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>playSoundPCM16</name>
      <anchorfile>classArSoundPlayer.html</anchorfile>
      <anchor>a45bd8e1fd1abf13e1e4e2d00339621f4</anchor>
      <arglist>(char *data, int numSamples)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>playWavFile</name>
      <anchorfile>classArSoundPlayer.html</anchorfile>
      <anchor>a023a076feeaa5da3d7c69681f6661d60</anchor>
      <arglist>(const char *filename, const char *params)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setVolume</name>
      <anchorfile>classArSoundPlayer.html</anchorfile>
      <anchor>a7bf45927aff8358d30fcc48de6683ede</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setVolumePercent</name>
      <anchorfile>classArSoundPlayer.html</anchorfile>
      <anchor>a7af22400dc046250534ca2ba6712621f</anchor>
      <arglist>(double pct)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stopPlaying</name>
      <anchorfile>classArSoundPlayer.html</anchorfile>
      <anchor>a1dfdc61208ea4fe3289f29e4df1bd31d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static int</type>
      <name>ourPlayChildPID</name>
      <anchorfile>classArSoundPlayer.html</anchorfile>
      <anchor>a1148de5352a279d6d56878a1a9196b44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSoundsQueue</name>
    <filename>classArSoundsQueue.html</filename>
    <base>ArASyncTask</base>
    <class kind="class">ArSoundsQueue::Item</class>
    <member kind="enumeration">
      <type></type>
      <name>ItemType</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>adcaafc197f106de866c854ce3f9f468a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ArRetFunctor&lt; bool &gt;</type>
      <name>PlaybackConditionFunctor</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a831d244f0f9f5740c58131e4cd663050</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ArRetFunctor2&lt; bool, const char *, const char * &gt;</type>
      <name>PlayItemFunctor</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a1670bc04bab708282683f9862d822eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInitCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a2989d1e187ad183bf0d26ce2552c9169</anchor>
      <arglist>(ArRetFunctor&lt; bool &gt; *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a6c1813ed5c1b57c77b6f4d3f7c938988</anchor>
      <arglist>(ArSoundsQueue::Item item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>ac9330db5f43a7080f871516f0ea47089</anchor>
      <arglist>(ItemType type, const char *data, std::list&lt; PlayItemFunctor * &gt; callbacks, int priority=0, const char *params=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addQueueEmptyCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>abbc9d407d6e76c6a58bd1fc52941fb71</anchor>
      <arglist>(ArFunctor *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addQueueNonemptyCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a232be5d28fabf0dcbe95d34be0b8f261</anchor>
      <arglist>(ArFunctor *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSoundFinishedCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a68d9bc0671d3f787f8617f711a0d1af7</anchor>
      <arglist>(ArFunctor *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSoundItemFinishedCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a2038f24f788d02d3ac75a0698bbd5524</anchor>
      <arglist>(ArFunctor1&lt; ArSoundsQueue::Item &gt; *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSoundItemStartedCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a7d48d0786f170123a6f2b5e1f3a9fb1e</anchor>
      <arglist>(ArFunctor1&lt; ArSoundsQueue::Item &gt; *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSoundStartedCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a85fb4eba5fbdc2dedbedc135d93f462f</anchor>
      <arglist>(ArFunctor *f)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSoundsQueue</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a33befc3feee15be660f082f4db9624b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSoundsQueue</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a6a89210de3f17c8e247297d08457e271</anchor>
      <arglist>(ArRetFunctor&lt; bool &gt; *speakInitCB, PlayItemFunctor *speakCB=0, InterruptItemFunctor *interruptSpeechCB=0, ArRetFunctor&lt; bool &gt; *playInitCB=0, PlayItemFunctor *playFileCB=0, InterruptItemFunctor *interruptFileCB=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSoundsQueue</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a40cc3dc2fa1806e7ddabe2c570e0420a</anchor>
      <arglist>(ArSpeechSynth *speechSynthesizer, ArRetFunctor&lt; bool &gt; *playInitCB=0, PlayItemFunctor *playFileCB=0, InterruptItemFunctor *interruptFileCB=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearQueue</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a2e5eb64d85322adf020091d66cfe2cf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int &gt;</type>
      <name>findPendingItems</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a28221738a1ef4f7039f76d52307327c6</anchor>
      <arglist>(const char *item)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCurrentQueueSize</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a1503e852fae705e109a83ad8820f9fee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor *</type>
      <name>getPauseCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a5b15062bcdc03bff79cdc28bd5fe9581</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor *</type>
      <name>getResumeCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a5d9dee85707655370dfa11e2f9860b5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interrupt</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a0a24a9edf0dabfe72ff46a61ebced3a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a1e2489199dbbe6718e2866c5fdc692ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPaused</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a55feaa97933ebf630f1373de06853684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>ae75d363d5ff3da705f0c4f8d8c52dea8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSpeaking</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>af363056a2dce60d77a05f5b6d9405fc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSpeakingOrPlaying</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>ad57523266a4e9a42fe62270bb7ae0c46</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a7d27d8572c1db27e136a85ae15152d51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItems</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a8dbfd54803ecece0933506b725709ad3</anchor>
      <arglist>(int priority)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItems</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a503420a62c94b3ea91c640966a97ac56</anchor>
      <arglist>(Item item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePendingItems</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a2e8e700c60788cd59136a4c6af84d57b</anchor>
      <arglist>(const char *item, ItemType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePendingItems</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a5931b53f0a1d7d3eb23c1287ec0e7165</anchor>
      <arglist>(const char *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePendingItems</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>af73e62046198c9e1f61889c99f1088ea</anchor>
      <arglist>(int priority)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePendingItems</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a3277bb7cc2bd3137801f82d47ea19930</anchor>
      <arglist>(int priority, ItemType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePendingItems</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>aa0fdc8c534530efd9491f771ff791296</anchor>
      <arglist>(ItemType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remQueueEmptyCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>ab1769747e24872f9a819aa9421a791c7</anchor>
      <arglist>(ArFunctor *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remQueueNonemptyCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>ac1f05e67c5bbd38ff45f9295e8056a66</anchor>
      <arglist>(ArFunctor *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSoundFinishedCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a322f135e5a5c7e16fa9e508f159d623d</anchor>
      <arglist>(ArFunctor *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSoundItemFinishedCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a3d0dce13c79766bea2decb16d4637e11</anchor>
      <arglist>(ArFunctor1&lt; ArSoundsQueue::Item &gt; *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSoundItemStartedCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a55550a8c4bc8eca1a5168e217ea7fdf6</anchor>
      <arglist>(ArFunctor1&lt; ArSoundsQueue::Item &gt; *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSoundStartedCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a2daac01ca272697d1871722ec625fd6f</anchor>
      <arglist>(ArFunctor *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resume</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a2299817c9725d01073f92f06c0faf18d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a54193dc40439db31fcb9ffc705e178d9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runAsync</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>ad8f9600dba4c91cfc0418a011bf3f165</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a4e144903349cc79d5920930fad114073</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultPlayConditionCB</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a07d2ea90ac91f64bf5c2752993c56e36</anchor>
      <arglist>(PlaybackConditionFunctor *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeakInitCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>aeb079ae1ff36f347dbe3e9514fb93535</anchor>
      <arglist>(ArRetFunctor&lt; bool &gt; *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a4ae132843ebaa7291a21063c582bdf8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeakCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>aeb709e73f5927b3281f407ecd7dd212b</anchor>
      <arglist>(PlayItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInterruptSpeechCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a09923f7689ae9e483663894ec2e9b4e6</anchor>
      <arglist>(InterruptItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlayFileCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>af115f8c8d3eb099ac82b5cc2923b1b8b</anchor>
      <arglist>(PlayItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlayWavFileCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a7a91b153f0bcf9705d9ab18091d32fe0</anchor>
      <arglist>(PlayItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInterruptFileCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a2181959096769f7a8d00ce780b814396</anchor>
      <arglist>(InterruptItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInterruptWavFileCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a18a4ee9aaa952188792551ee9af2c2ae</anchor>
      <arglist>(InterruptItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>speak</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a65a547b34c10f1cdf17c358e117e3eae</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a77f50ee7d294994b84a834bd307b634f</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>speakf</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a5f72642e4acd76679f9203bd4d46cd0d</anchor>
      <arglist>(const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>speakWithVoice</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>ab9bf50330d8e348a52b2a14d3b1fe2a8</anchor>
      <arglist>(const char *voice, const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>speakWithPriority</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a4c489a2653ca45a5fa937da299000fd5</anchor>
      <arglist>(int priority, const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playf</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a5b97efa31bddb3244178f9f30921df48</anchor>
      <arglist>(const char *filename_fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>ArSoundsQueue::Item</type>
      <name>createDefaultSpeechItem</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>aee79f7bde5107dce8cc5f1ddce600c00</anchor>
      <arglist>(const char *speech=0)</arglist>
    </member>
    <member kind="function">
      <type>ArSoundsQueue::Item</type>
      <name>createDefaultFileItem</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a8a91d3b696ae76124ca0bd836bcc6136</anchor>
      <arglist>(const char *filename=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>invokeCallbacks</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a7f1823cd9a08fd65117258d9f85e3575</anchor>
      <arglist>(const std::list&lt; ArFunctor * &gt; &amp;lst)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>invokeCallbacks</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>afc3d3e79a6dfb49157acac74da0ca47a</anchor>
      <arglist>(const std::list&lt; ArRetFunctor&lt; bool &gt; * &gt; &amp;lst)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>pushQueueItem</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>aaba4198bc8ea0cd25ee1cfbb67961c7c</anchor>
      <arglist>(Item item)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Item</type>
      <name>popQueueItem</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a11a47aae1f799440cd93800e24dd2322</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PlaybackConditionFunctor *</type>
      <name>myDefaultPlayConditionCB</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>abb56a1af5cce9559a466a0ed702476b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArRetFunctor&lt; bool &gt; * &gt;</type>
      <name>myInitCallbacks</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>ac9900dd94501b578d068b651a1f246a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Item</type>
      <name>myLastItem</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>ac60cd137f23477e39c8f6883a7719643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCondition</type>
      <name>myPausedCondition</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>ace52c3bc956024acca2fd5cdfbd67c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myPauseRequestCount</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a4984c867bc3ccf0e272a353ad1b25473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PlayItemFunctor *</type>
      <name>myDefaultSpeakCB</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a87629c2c64b1ed76a0832cc4d6382b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myStartPlaybackCBList</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a908338f644774319d883c74e04ce8d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeakCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>aeb709e73f5927b3281f407ecd7dd212b</anchor>
      <arglist>(PlayItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInterruptSpeechCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a09923f7689ae9e483663894ec2e9b4e6</anchor>
      <arglist>(InterruptItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlayFileCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>af115f8c8d3eb099ac82b5cc2923b1b8b</anchor>
      <arglist>(PlayItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlayWavFileCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a7a91b153f0bcf9705d9ab18091d32fe0</anchor>
      <arglist>(PlayItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInterruptFileCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a2181959096769f7a8d00ce780b814396</anchor>
      <arglist>(InterruptItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInterruptWavFileCallback</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a18a4ee9aaa952188792551ee9af2c2ae</anchor>
      <arglist>(InterruptItemFunctor *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>speak</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a65a547b34c10f1cdf17c358e117e3eae</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a77f50ee7d294994b84a834bd307b634f</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>speakf</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a5f72642e4acd76679f9203bd4d46cd0d</anchor>
      <arglist>(const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>speakWithVoice</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>ab9bf50330d8e348a52b2a14d3b1fe2a8</anchor>
      <arglist>(const char *voice, const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>speakWithPriority</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a4c489a2653ca45a5fa937da299000fd5</anchor>
      <arglist>(int priority, const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playf</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a5b97efa31bddb3244178f9f30921df48</anchor>
      <arglist>(const char *filename_fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>ArSoundsQueue::Item</type>
      <name>createDefaultSpeechItem</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>aee79f7bde5107dce8cc5f1ddce600c00</anchor>
      <arglist>(const char *speech=0)</arglist>
    </member>
    <member kind="function">
      <type>ArSoundsQueue::Item</type>
      <name>createDefaultFileItem</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a8a91d3b696ae76124ca0bd836bcc6136</anchor>
      <arglist>(const char *filename=0)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PlayItemFunctor *</type>
      <name>myDefaultSpeakCB</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a87629c2c64b1ed76a0832cc4d6382b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myStartPlaybackCBList</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a908338f644774319d883c74e04ce8d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>pushQueueItem</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>aaba4198bc8ea0cd25ee1cfbb67961c7c</anchor>
      <arglist>(Item item)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Item</type>
      <name>popQueueItem</name>
      <anchorfile>classArSoundsQueue.html</anchorfile>
      <anchor>a11a47aae1f799440cd93800e24dd2322</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSpeechSynth</name>
    <filename>classArSpeechSynth.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addToConfig</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>a7f7baab482ce65022051da4b88e4f6f2</anchor>
      <arglist>(ArConfig *config)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSpeechSynth</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>aed33372eb96b4daefc9fb8064a2c64ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getCurrentVoiceName</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>a6487e0f0b83bff63657dd27f78cf327a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>ArRetFunctorC&lt; bool, ArSpeechSynth &gt; *</type>
      <name>getInitCallback</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>aae2efd012ea48f69dcaf480a9c30cb47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArFunctorC&lt; ArSpeechSynth &gt; *</type>
      <name>getInterruptCallback</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>ae2dddb561421b485f6ed7d8911160d5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArRetFunctor2C&lt; bool, ArSpeechSynth, const char *, const char * &gt; *</type>
      <name>getSpeakCallback</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>a764feabb69b72872d9ccddfa4e29b8f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; std::string &gt;</type>
      <name>getVoiceNames</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>af4ebae5c9311f381ea502e0b905083ce</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>init</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>a4f9e63166563304cb4915c9a2b8830ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>interrupt</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>aca546b1f881d1ad49a96a5d0a2bd2257</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>lock</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>a613666ee480d0e5a32289cbb44df7a64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAudioCallback</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>a26649f34e057c649a414ab9290e57981</anchor>
      <arglist>(ArRetFunctor2&lt; bool, ArTypes::Byte2 *, int &gt; *cb)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAudioSampleRate</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>a66243ab7410be9951195931b1f6e2c20</anchor>
      <arglist>(int rate)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setVoice</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>a915b0cb3d5a5bc2de3e249b942d128d1</anchor>
      <arglist>(const char *name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>speak</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>a9fd8878d738fac357e87f286e6484732</anchor>
      <arglist>(const char *str, const char *voiceParams, ArRetFunctor2&lt; bool, ArTypes::Byte2 *, int &gt; *audioOutputCB, unsigned short sampleRate=0)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>speak</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>ac9e0329b3f8b43fc96ad6be38dc880b0</anchor>
      <arglist>(const char *str, const char *voiceParams=NULL)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>speakf</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>af17a40849de4d8a9a6c70687cc7388f4</anchor>
      <arglist>(const char *fmt,...)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unlock</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>ae72f5aa9cf0a46d133ff1bd195e058b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor2&lt; bool, ArTypes::Byte2 *, int &gt; *</type>
      <name>myAudioPlaybackCB</name>
      <anchorfile>classArSpeechSynth.html</anchorfile>
      <anchor>a1037bdf94b4d8f0f25cdd25b8e586499</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArStrCaseCmpOp</name>
    <filename>structArStrCaseCmpOp.html</filename>
  </compound>
  <compound kind="class">
    <name>ArStringInfoGroup</name>
    <filename>classArStringInfoGroup.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addAddStringCallback</name>
      <anchorfile>classArStringInfoGroup.html</anchorfile>
      <anchor>a1e1784e772af0d6318ade1fe309f11db</anchor>
      <arglist>(ArFunctor3&lt; const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; * &gt; *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addString</name>
      <anchorfile>classArStringInfoGroup.html</anchorfile>
      <anchor>a0295a34fe7e6cb92dda8c89c4c5a401e</anchor>
      <arglist>(const char *name, ArTypes::UByte2 maxLen, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addStringBool</name>
      <anchorfile>classArStringInfoGroup.html</anchorfile>
      <anchor>a3920b981ea2a8fcabc72cb168f6e6e0e</anchor>
      <arglist>(const char *name, ArTypes::UByte2 maxLen, ArRetFunctor&lt; bool &gt; *functor, const char *format=&quot;%s&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addStringDouble</name>
      <anchorfile>classArStringInfoGroup.html</anchorfile>
      <anchor>a9361630fdbaeca36c447d1d33614320b</anchor>
      <arglist>(const char *name, ArTypes::UByte2 maxLen, ArRetFunctor&lt; double &gt; *functor, const char *format=&quot;%g&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addStringInt</name>
      <anchorfile>classArStringInfoGroup.html</anchorfile>
      <anchor>aa1315a75e4e69ba232b4239f61b5a2e4</anchor>
      <arglist>(const char *name, ArTypes::UByte2 maxLen, ArRetFunctor&lt; int &gt; *functor, const char *format=&quot;%d&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addStringLong</name>
      <anchorfile>classArStringInfoGroup.html</anchorfile>
      <anchor>a8f5302164bdd719baf878e76ebbfc533</anchor>
      <arglist>(const char *name, ArTypes::UByte2 maxLen, ArRetFunctor&lt; long &gt; *functor, const char *format=&quot;%ld&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addStringString</name>
      <anchorfile>classArStringInfoGroup.html</anchorfile>
      <anchor>a98daaf0a7d7501eac9f89f53de029f43</anchor>
      <arglist>(const char *name, ArTypes::UByte2 maxLen, ArRetFunctor&lt; const char * &gt; *functor, const char *format=&quot;%s&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addStringString</name>
      <anchorfile>classArStringInfoGroup.html</anchorfile>
      <anchor>ab6e383bdddb314c23762b4945824d378</anchor>
      <arglist>(const char *name, ArTypes::UByte2 maxLen, ArRetFunctor&lt; std::string &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addStringUnsignedLong</name>
      <anchorfile>classArStringInfoGroup.html</anchorfile>
      <anchor>a575b85c62714c58a0253caf4213fff52</anchor>
      <arglist>(const char *name, ArTypes::UByte2 maxLen, ArRetFunctor&lt; unsigned long &gt; *functor, const char *format=&quot;%lu&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArStringInfoGroup</name>
      <anchorfile>classArStringInfoGroup.html</anchorfile>
      <anchor>a35d067c34c625043989718228a194b1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArStringInfoGroup</name>
      <anchorfile>classArStringInfoGroup.html</anchorfile>
      <anchor>a8a981ea6a8513f3195106e8901a44c7d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArStringInfoHolder</name>
    <filename>classArStringInfoHolder.html</filename>
    <member kind="function">
      <type></type>
      <name>ArStringInfoHolder</name>
      <anchorfile>classArStringInfoHolder.html</anchorfile>
      <anchor>a7dee85e6eb8a73fc84459a8488a04dd7</anchor>
      <arglist>(const char *name, ArTypes::UByte2 maxLength, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *</type>
      <name>getFunctor</name>
      <anchorfile>classArStringInfoHolder.html</anchorfile>
      <anchor>a21049a94b4668d81105fb261e53125c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::UByte2</type>
      <name>getMaxLength</name>
      <anchorfile>classArStringInfoHolder.html</anchorfile>
      <anchor>acb69f5c8a2a2c2bfb29e167985d79344</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArStringInfoHolder.html</anchorfile>
      <anchor>a01fe220546e6c970702e3331cf2ffc3b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArStringInfoHolder</name>
      <anchorfile>classArStringInfoHolder.html</anchorfile>
      <anchor>ad1958161f6210b8971ae8d66616ab0fc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArStringInfoHolderFunctions</name>
    <filename>classArStringInfoHolderFunctions.html</filename>
  </compound>
  <compound kind="class">
    <name>ArSyncTask</name>
    <filename>classArSyncTask.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addNewBranch</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a1ac42758c3182aa1c3e4951f811913fb</anchor>
      <arglist>(const char *nameOfNew, int position, ArTaskState::State *state=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNewLeaf</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a40645f3767421a78ac80b3e1ac644b19</anchor>
      <arglist>(const char *nameOfNew, int position, ArFunctor *functor, ArTaskState::State *state=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArSyncTask</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>ad52ec11e2450833fa079534e2d7de6d9</anchor>
      <arglist>(const char *name, ArFunctor *functor=NULL, ArTaskState::State *state=NULL, ArSyncTask *parent=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ArSyncTask *</type>
      <name>find</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a0e9e77e9393ab5c6e5da84e5660af986</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>ArSyncTask *</type>
      <name>find</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a1c589d149563d3b30ba20c20e8ca27fc</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>ArSyncTask *</type>
      <name>findNonRecursive</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>ab60d5eb41d168bc648d4f5d65a569242</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>ArSyncTask *</type>
      <name>findNonRecursive</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a653b9ab67a08f4754ca0e482748f0461</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor *</type>
      <name>getFunctor</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>aa2e018da424851e241d14409fab31261</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getName</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a0fd254bc0f505f8ec686f3405b4f491b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArRetFunctor&lt; bool &gt; *</type>
      <name>getNoTimeWarningCB</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a6e7b4b5c77bd7b0fbb1f9b8bad59e690</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArSyncTask *</type>
      <name>getRunning</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a30484c31720c43b1f0803ed082db1767</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTaskState::State</type>
      <name>getState</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>aa54cd161efc0e62df449c7c4fa0b96dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArRetFunctor&lt; unsigned int &gt; *</type>
      <name>getWarningTimeCB</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a75e5480c165150c136bb24b0d211ce66</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>ad7431b54ad496bc36b8b1379a4d9736e</anchor>
      <arglist>(int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a8d3a54585ee343b816167b13dd290d92</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoTimeWarningCB</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a89b8af3a59f6337b0ac35bb0eb7a4984</anchor>
      <arglist>(ArRetFunctor&lt; bool &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a7c87d12503033c79957ae83040205855</anchor>
      <arglist>(ArTaskState::State state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWarningTimeCB</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>afa612ab734d748e9dc08f05625c60877</anchor>
      <arglist>(ArRetFunctor&lt; unsigned int &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArSyncTask</name>
      <anchorfile>classArSyncTask.html</anchorfile>
      <anchor>a1327f8bea0fd8910fa89ed718849e373</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSystemStatus</name>
    <filename>classArSystemStatus.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getCPU</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a79045c8d15935c747f63ccc527eab02b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getCPUPercent</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>aeb353a10fc730f1a9bde091b42f8a9fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getCPUPercentAsString</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>aa7cc800bb3d09c5f02688d9c82835b99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArRetFunctor&lt; double &gt; *</type>
      <name>getCPUPercentFunctor</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a80df01a8c879cff6a3d761cdbd5fa742</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getMTXWirelessIpAddress1</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>abe9336ea0c0921bf5d84b8466f442847</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getMTXWirelessIpAddressString</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>adc3173c14e743b6048d14e1f732add2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getMTXWirelessLink</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>aca54a5ae53ed41767e46855192c94135</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getMTXWirelessQuality</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>acf968a992d9ac42ded963e58a4ac29d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned long</type>
      <name>getProgramUptime</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a5e4da5cb9a2fbddd97865ff57eb8bbc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArRetFunctor&lt; unsigned long &gt; *</type>
      <name>getProgramUptimeFunctor</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a246a9becc28788fdd0f7b5f74e2e1ae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned long</type>
      <name>getUptime</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a4058ebb27c1a23961e6974574684aaa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArRetFunctor&lt; unsigned long &gt; *</type>
      <name>getUptimeFunctor</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>acca5d2be7731dd28aa19123700bd470e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getUptimeHours</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a4f5725a036598193ff54cfc13bf6f0c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getUptimeHoursAsString</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a60af862bfab3feb049913f64b50cb7f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArRetFunctor&lt; double &gt; *</type>
      <name>getUptimeHoursFunctor</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a25ff17d3fd8433a538bb1ad8b61c6b6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getWirelessDiscardedPackets</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a5d4854ce13b55781053c815aed311ab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getWirelessDiscardedPacketsBecauseNetConflict</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a5c91b50346a66c53f67c9f07a9c43b90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getWirelessLinkNoise</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>aa068022f9011e3f307d41a8dc731fc5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getWirelessLinkQuality</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>af22bb9c2a64a1d12508422add6f419c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getWirelessLinkSignal</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a48dbbe08bad1e69c65e0180c8e622a48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>refresh</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a274ecca735d3771e2c4a3d22efcc493c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runRefreshThread</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a121e1d1852d35e065ad6d9bbb9088b49</anchor>
      <arglist>(int refreshFrequency=5000)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>startPeriodicUpdate</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>ae6e5261ced138e54853baa719d53d1a0</anchor>
      <arglist>(int refreshFrequency=5000, ArLog::LogLevel logLevel=ArLog::Verbose)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stopPeriodicUpdate</name>
      <anchorfile>classArSystemStatus.html</anchorfile>
      <anchor>a5b2690493ccabdec4ea760f7935093f5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSZSeries</name>
    <filename>classArSZSeries.html</filename>
    <base>ArLaser</base>
    <member kind="function">
      <type></type>
      <name>ArSZSeries</name>
      <anchorfile>classArSZSeries.html</anchorfile>
      <anchor>a45a060e47f15da94a81128b3f8a55256</anchor>
      <arglist>(int laserNumber, const char *name=&quot;SZSeries&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArSZSeries.html</anchorfile>
      <anchor>a0e2607545308833ab4b77afa5305281e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArSZSeries</name>
      <anchorfile>classArSZSeries.html</anchorfile>
      <anchor>ad092e556dde2e4f8eb99135110465d28</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArSZSeriesPacketReceiver</name>
    <filename>classArSZSeriesPacketReceiver.html</filename>
    <member kind="function">
      <type></type>
      <name>ArSZSeriesPacketReceiver</name>
      <anchorfile>classArSZSeriesPacketReceiver.html</anchorfile>
      <anchor>a193901449b901d1e399495c002ad5d7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArDeviceConnection *</type>
      <name>getDeviceConnection</name>
      <anchorfile>classArSZSeriesPacketReceiver.html</anchorfile>
      <anchor>a3b2ed47a9f6c80b71fbfd03ec27a238b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArSZSeriesPacket *</type>
      <name>receivePacket</name>
      <anchorfile>classArSZSeriesPacketReceiver.html</anchorfile>
      <anchor>aec2734339b52378d278492ba8495b396</anchor>
      <arglist>(unsigned int msWait=0, bool shortcut=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceConnection</name>
      <anchorfile>classArSZSeriesPacketReceiver.html</anchorfile>
      <anchor>a04d92507ae98f45c6d2d871d72c71ae7</anchor>
      <arglist>(ArDeviceConnection *conn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArSZSeriesPacketReceiver</name>
      <anchorfile>classArSZSeriesPacketReceiver.html</anchorfile>
      <anchor>ad6a73bc7f6c919a60a697c7a93facb59</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArTaskState</name>
    <filename>classArTaskState.html</filename>
    <member kind="enumvalue">
      <name>ACTIVE</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32a2bbf39690bbaaf60a4e8e39d884498c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILURE</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32a2649ad5ac27d83be47cd21ea1f537f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INIT</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32ae5ea3624a3607e25b9bb4a70f2d616d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESUME</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32af76877371655e478ddf2e1f6a6c26520</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INIT</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32ae5ea3624a3607e25b9bb4a70f2d616d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESUME</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32af76877371655e478ddf2e1f6a6c26520</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTIVE</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32a2bbf39690bbaaf60a4e8e39d884498c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSPEND</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32a3b481fab6e0a8b9aa87524de5c1ef91b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUCCESS</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32af7db91909198fd1b96a9425dee1a8b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILURE</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32a2649ad5ac27d83be47cd21ea1f537f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>USER_START</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32a307b51b865693470463cd83d404196d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUCCESS</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32af7db91909198fd1b96a9425dee1a8b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUSPEND</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32a3b481fab6e0a8b9aa87524de5c1ef91b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>USER_START</name>
      <anchorfile>classArTaskState.html</anchorfile>
      <anchor>a0dd5be44785527104bb2453cef890c32a307b51b865693470463cd83d404196d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArTCM2</name>
    <filename>classArTCM2.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>blockingConnect</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a03d68f7ee1b1ee2b6cf876c0908f43af</anchor>
      <arglist>(unsigned long connectTimeout=5000)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>commandAutoCalibration</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>aaba360fbc82b2c25cd25a20f42e4c206</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>commandContinuousPackets</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a8b57b5ac6e217d7494cc72cfae61f171</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>commandJustCompass</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>af1af3c0170ed4c7a63fa6d00ce4a8d6b</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>commandOff</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a533b040e10e90d12bd9daebb409a200a</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>commandOnePacket</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a7922b19e37dd55443f8ca4fd60c3709a</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>commandSoftReset</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a932f31b8962d13d634e79b74337e817b</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>commandStopCalibration</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a43df9ef61d5f9b25ef56a268635711c9</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>commandUserCalibration</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a60d1e9687c237dec7f5c4df552694743</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>connect</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>aadac4c6e5254827cc598dbfab7e671fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCalibrationH</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a1d354c63ca69759dcef14f7d12a5d1bd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCalibrationM</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>adffff5238710ed005d2b85ad632ddc58</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCalibrationV</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a3c147f489fefc9b0b2180e5121ebe3ca</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCompass</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>acf62aab4d19e4f1924794ea6532d794f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getHeading</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a02eaefd0ee678b5e01f5d94ba883cd3f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPacCount</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>aef135653337700db560d061cb4722d46</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPitch</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a351381b91db9a6ecf47f68df800998f8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRoll</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a01a4ae402073f91a9e79dced2181a301</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTemperature</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a41ebde0196e3b1b7973bd8e7e7f1ed2d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getXMagnetic</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a65b7d3f541cef8f29557d4d43defc255</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getYMagnetic</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a72a1aa71f7981d8d3f121b7295688c66</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getZMagnetic</name>
      <anchorfile>classArTCM2.html</anchorfile>
      <anchor>a9d748cf260579ee8bdbdc8afd59c569b</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArTCMCompassDirect</name>
    <filename>classArTCMCompassDirect.html</filename>
    <base virtualness="virtual">ArTCM2</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commandAutoCalibration</name>
      <anchorfile>classArTCMCompassDirect.html</anchorfile>
      <anchor>ae86ed13fbcae5fa8e76d0e6ddc50f3fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commandJustCompass</name>
      <anchorfile>classArTCMCompassDirect.html</anchorfile>
      <anchor>a2419d8c6fdcca39494a579e698549cf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commandSoftReset</name>
      <anchorfile>classArTCMCompassDirect.html</anchorfile>
      <anchor>aae038b6b57851fbf2aed64cd0c08d872</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>connect</name>
      <anchorfile>classArTCMCompassDirect.html</anchorfile>
      <anchor>a62383530bc16af4d2b923ebfbc98faa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read</name>
      <anchorfile>classArTCMCompassDirect.html</anchorfile>
      <anchor>aebe52e5b8f1cdeca50c99e95e656dbcd</anchor>
      <arglist>(unsigned int msWait=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commandContinuousPackets</name>
      <anchorfile>classArTCMCompassDirect.html</anchorfile>
      <anchor>a9c392ac0c9968c0f9cdac57c547ebf61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commandContinuousPackets</name>
      <anchorfile>classArTCMCompassDirect.html</anchorfile>
      <anchor>a9c392ac0c9968c0f9cdac57c547ebf61</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArTCMCompassRobot</name>
    <filename>classArTCMCompassRobot.html</filename>
    <base virtualness="virtual">ArTCM2</base>
  </compound>
  <compound kind="class">
    <name>ArTcpConnection</name>
    <filename>classArTcpConnection.html</filename>
    <base>ArDeviceConnection</base>
    <member kind="enumeration">
      <type></type>
      <name>Open</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>abccb5841a624f42faceabff0703637b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_NET_FAIL</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>abccb5841a624f42faceabff0703637b8a00f2ba5a1c44e0cef03a2f466e7a8590</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_BAD_HOST</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>abccb5841a624f42faceabff0703637b8a44cd8a79a2d8c28e68dae6e637a2eb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_NO_ROUTE</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>abccb5841a624f42faceabff0703637b8a601216afe9155ecee3394942e50a4a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_CON_REFUSED</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>abccb5841a624f42faceabff0703637b8ac154c44ceb177cf41bebfadf81c6a6a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_BAD_HOST</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>abccb5841a624f42faceabff0703637b8a44cd8a79a2d8c28e68dae6e637a2eb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_CON_REFUSED</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>abccb5841a624f42faceabff0703637b8ac154c44ceb177cf41bebfadf81c6a6a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_NET_FAIL</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>abccb5841a624f42faceabff0703637b8a00f2ba5a1c44e0cef03a2f466e7a8590</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_NO_ROUTE</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>abccb5841a624f42faceabff0703637b8a601216afe9155ecee3394942e50a4a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArTcpConnection</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>a3d9e274eb2de1d9fbb04f8582e9219e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getHost</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>a8f569c84c270fe36277f6c05f49fc5ba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPort</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>ad09b8919ecf16458ee4975fd38f08daa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArSocket *</type>
      <name>getSocket</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>a09a3910297a0e5820702d2b8fd179940</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>internalOpen</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>ab724e586e3bace0e369b3380b6d257c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>open</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>a9a745deeb1d377fbf615e91eba755bde</anchor>
      <arglist>(const char *host=NULL, int port=8101)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSocket</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>a93e658637a2f037834d62da376923b67</anchor>
      <arglist>(ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>a54ba55134cca1bf1a08377d89b07f8db</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArTcpConnection</name>
      <anchorfile>classArTcpConnection.html</anchorfile>
      <anchor>a8705c9b0c2ac7d30a0e6f390c932fd0f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArThread</name>
    <filename>classArThread.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53acc18d305d0eccadd2588c4b42f5f94b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_NORESOURCE</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53a3a691b0c508247f05b57fdcdf26bcbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_NO_SUCH_THREAD</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53afb6a6a19ac7e5eae84ca230f90a577c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_INVALID</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53a8cabd345d26c252559a993ba7d4db196</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_JOIN_SELF</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53aa12716ae2e87670197b81ece3dbca9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_ALREADY_DETATCHED</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53ac31e3677374b5ae653026a3be95c6274</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_ALREADY_DETATCHED</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53ac31e3677374b5ae653026a3be95c6274</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_FAILED</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53acc18d305d0eccadd2588c4b42f5f94b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_INVALID</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53a8cabd345d26c252559a993ba7d4db196</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_JOIN_SELF</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53aa12716ae2e87670197b81ece3dbca9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_NO_SUCH_THREAD</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53afb6a6a19ac7e5eae84ca230f90a577c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_NORESOURCE</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6d126a960a5af55f2ab3e05233e8b53a3a691b0c508247f05b57fdcdf26bcbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArThread</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af6646fdb41042a80a0d54c778d1af3d9</anchor>
      <arglist>(bool blockAllSignals=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArThread</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>aff21160d49a502bfc018d0e2126959aa</anchor>
      <arglist>(ThreadType thread, bool joinable, bool blockAllSignals=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArThread</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a08068bcc611a53074d8999a5622f2289</anchor>
      <arglist>(ArFunctor *func, bool joinable=true, bool blockAllSignals=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>cancel</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a9f5c6ddc088c46736ce2e698a5ae3050</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>create</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>aefba216adf9aa5144c79bdfbd8978cbd</anchor>
      <arglist>(ArFunctor *func, bool joinable=true, bool lowerPriority=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>detach</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a70f8c5e5a01c432f8e5722487b11b9aa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBlockAllSignals</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>aa8dc1c54a7c07dc2affdef031a74833e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArFunctor *</type>
      <name>getFunc</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>acb7ba63e4e43e85f47ff9429de88c599</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getJoinable</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a48d0856b755e8950d820d71fd097fb0d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ThreadType</type>
      <name>getOSThread</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>ad57f4235fd1f9092f55aaec52a57068f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getRunning</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a544461d5afc9a1f1d50398ef06f55743</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getRunningWithLock</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a05333f5f05022f42ab46a6dd8a8f1958</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ThreadType *</type>
      <name>getThread</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a1f17f4a7f59d8e14399e03ee405380be</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getThreadActivity</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a281b9fdd83d89c68518c4bcd35e32a4c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getThreadName</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af3c3543b2749dccd4e94e96fad418780</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isThreadFinished</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af5868982670b17f27aab0bbbf0749cb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isThreadStarted</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a38dd0b805242f8144e14c0662eeee37c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>join</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>ab07c2ba39f6c537889db203d36291dd0</anchor>
      <arglist>(void **ret=NULL)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lock</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a0fa936e087d49e5151cb3cc1358ae1ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>logThreadInfo</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>ac971ee8ad4b23a5d87e6f0db02062cde</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRunning</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a6eb9bbbff1f1494a4218be4551c28073</anchor>
      <arglist>(bool running)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThreadName</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>af03075fb22fbfca1212d524f772f6c1c</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopRunning</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a5e19b180ac41f488cbd7ceef142c3177</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>threadFinished</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a718af06ca33f467f714a46f059e2455b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>threadStarted</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a2cec8be019396610a5ba10b6ffcd819e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tryLock</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>aeefc89261e7760985b91566029fc9c6c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unlock</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>aa95ba7294af22e4be13215f39de61b38</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArThread</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a02c1f44d7adb2b9524f0fc410158b554</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cancelAll</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>ae90c377080eb22ecd565617fbde986dc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArLog::LogLevel</type>
      <name>getLogLevel</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>ae730b583d5a313dd2d0b28a55b831e10</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ThreadType</type>
      <name>getThisOSThread</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a3f22bf6798bbb1f559d0fcb2dd340fe1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ThreadType *</type>
      <name>getThisThread</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a5f07974eaa1f04b40e7e29281063ae32</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getThisThreadName</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a2070e4319d8a11cb025fbeb0fdb36ade</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a602608b819fd0d206ece3e7108e897c1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>joinAll</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a669ea48142e11e67465cd389be8608db</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ThreadType</type>
      <name>osSelf</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a3deec9c656a29d1a9f33dc52ca05afa9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArThread *</type>
      <name>self</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a94f5c62be5ea634a63645b09d24618ea</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setLogLevel</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>aa8bdbdb6a182a26b083577d341d73025</anchor>
      <arglist>(ArLog::LogLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>shutdown</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>adceb0c14e9674056fc637c95142fdfad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stopAll</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>aeed26f3e82c2f329d8b7286b0c59a75d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yieldProcessor</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a16d8ee7da5d5ebc2540e38ca1ce2eeb2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myRunning</name>
      <anchorfile>classArThread.html</anchorfile>
      <anchor>a38947d1e811cabefda057a5da123539a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArTime</name>
    <filename>classArTime.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>addMSec</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>aec93cf7e4c896f690c76e0249a8f44a1</anchor>
      <arglist>(long ms)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addMSecLL</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a4445b935b9c1439658503d9724d12102</anchor>
      <arglist>(long long ms)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArTime</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gad21b5077d7f093e1dab8b95ca0610fc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArTime</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a4ca124bb884de5155c1a8cefe1047996</anchor>
      <arglist>(const ArTime &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>getMSec</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>abcf172e892ad0f943f4f2d8f0629517a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned long long</type>
      <name>getMSecLL</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a365d0575a2a1cf7a4b0dff1e3cd2c59f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>getSec</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>afff313300262382b1f67cef9f5b099da</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned long long</type>
      <name>getSecLL</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>ac99ca1778c60b8c3b7433b302287bb31</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAfter</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac6df7ba808b20b5c50badca67cd4e97c</anchor>
      <arglist>(ArTime testTime) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAt</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a76c3c23ef471f1ce741979fa431676be</anchor>
      <arglist>(ArTime testTime) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBefore</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga9cd60449c10e098341a9f9366d5f86ef</anchor>
      <arglist>(ArTime testTime) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaeb5db5d20c1794795ec0d141ac305aa1</anchor>
      <arglist>(const char *prefix=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>mSecSince</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gabfac503dbf12dac57c8dc133d0b034a1</anchor>
      <arglist>(ArTime since) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>mSecSince</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a6027e24409f986ca10664a583071c294</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>mSecSinceLL</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a6481dd152a6167cd5eda0fbfa1e81183</anchor>
      <arglist>(ArTime since) const </arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>mSecSinceLL</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a99468c5a30b8b474dead8bfba71acbd6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>mSecTo</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga0b2cfe4da4202d614d3278e298ffe01d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>mSecToLL</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a3a5ac4379cf01ad20888d5c9242b8b19</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArTime &amp;</type>
      <name>operator=</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a866196e6e9803ffa87acf7fe5c4a7401</anchor>
      <arglist>(const ArTime &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a594d7dea44a2f895a382be4e3641c145</anchor>
      <arglist>(const ArTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>secSince</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga5385636d566c665eb9d722af6f65aef5</anchor>
      <arglist>(ArTime since) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>secSince</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>ad2cc73991a4fbc0d5602232119bef0fe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>secSinceLL</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a5748ad151a3ec0cf8e9f01378d2c9924</anchor>
      <arglist>(ArTime since) const </arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>secSinceLL</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a88e44a202bb6ecaca79fea465ceb9d49</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>secTo</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga2cd20dd8a4845a5f50b55f16de1c4501</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>secToLL</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>af4f54e8055a36bb669bf6f81876dc60a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMSec</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a9f26b30411b755d004c33939bef5e474</anchor>
      <arglist>(unsigned long msec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMSecLL</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a48194a729f4e6bb6e900a64ade2b4473</anchor>
      <arglist>(unsigned long long msec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSec</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>ae916261bffd0b9507e33148185cd32ec</anchor>
      <arglist>(unsigned long sec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSecLL</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a63d4260499fd8853033ee5ce83fd39d1</anchor>
      <arglist>(unsigned long long sec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToNow</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga7c269e161c8e7cb56bde73dea501a619</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArTime</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a479d7575122542f0a415f4e7ca40e62b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>usingMonotonicClock</name>
      <anchorfile>classArTime.html</anchorfile>
      <anchor>a3893e10d6164636c708585c1b9a45f3e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArTimeChecker</name>
    <filename>classArTimeChecker.html</filename>
    <member kind="function">
      <type></type>
      <name>ArTimeChecker</name>
      <anchorfile>classArTimeChecker.html</anchorfile>
      <anchor>a172fe362e6dcadf8e7bfeea24a506c20</anchor>
      <arglist>(const char *name=&quot;Unknown&quot;, int defaultMSecs=100)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classArTimeChecker.html</anchorfile>
      <anchor>aecd3787916f852d93cd81bd8d0531b17</anchor>
      <arglist>(const char *subName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finish</name>
      <anchorfile>classArTimeChecker.html</anchorfile>
      <anchor>ac9f530bd0ca66f01177cdda40d78674b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastCheckTime</name>
      <anchorfile>classArTimeChecker.html</anchorfile>
      <anchor>aee3005dedd3ad60e6577dfc79ae3d404</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultMSecs</name>
      <anchorfile>classArTimeChecker.html</anchorfile>
      <anchor>ac4a23f4e1be2144a0a029cfcd6abdd5a</anchor>
      <arglist>(int defaultMSecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classArTimeChecker.html</anchorfile>
      <anchor>a680f9d318026a18a975eb0ce401798db</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classArTimeChecker.html</anchorfile>
      <anchor>aa87014e0a67407178f6f4aed3723177a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArTimeChecker</name>
      <anchorfile>classArTimeChecker.html</anchorfile>
      <anchor>a89a05121b0623c8a4cd839dee04aa77d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArTransform</name>
    <filename>classArTransform.html</filename>
    <member kind="function">
      <type></type>
      <name>ArTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>a633902e2c1683ee9073c621cc61d2d24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>a2095f3f24b79c8c53de2e0ea59a055bb</anchor>
      <arglist>(ArPose pose)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>aadc0878065550c14b8c44bed2aa2d609</anchor>
      <arglist>(ArPose pose1, ArPose pose2)</arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>doInvTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>a6c872d23e43d7d395dcab27f0d39a5c3</anchor>
      <arglist>(ArPose source)</arglist>
    </member>
    <member kind="function">
      <type>ArPoseWithTime</type>
      <name>doInvTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>a6f107f210c1b30d6ff9943c9de7c8bef</anchor>
      <arglist>(ArPoseWithTime source)</arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>doTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>a554ef621996267e83102df2b64cd40f5</anchor>
      <arglist>(ArPose source)</arglist>
    </member>
    <member kind="function">
      <type>ArPoseWithTime</type>
      <name>doTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>a3f65d222595c599f731c34ac90eed8db</anchor>
      <arglist>(ArPoseWithTime source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>ad1a3847600a6c7928eb5671c85b192cf</anchor>
      <arglist>(std::list&lt; ArPose * &gt; *poseList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>ab41a8d2711d0a714e3323cc95adfbe23</anchor>
      <arglist>(std::list&lt; ArPoseWithTime * &gt; *poseList)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTh</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>af006f02b61896c871d53bdef8dd03ff1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getX</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>a05dca73dbc437b671db02a3b431b3ffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getY</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>acc97cd9ad128fd284377000f85a82b21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>a9b5a2db92f8a4a8c6eb0449ee23b61a5</anchor>
      <arglist>(ArPose pose)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>aa7538fe226bef22ef8fbc4710e1e3cf0</anchor>
      <arglist>(ArPose pose1, ArPose pose2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransformLowLevel</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>aa457f455fa2dded5f74fd406b729106f</anchor>
      <arglist>(double x, double y, double th)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArTransform</name>
      <anchorfile>classArTransform.html</anchorfile>
      <anchor>a6766b5316ff2bbb644253387b2274cc2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArTrimbleGPS</name>
    <filename>classArTrimbleGPS.html</filename>
    <base virtualness="virtual">ArGPS</base>
    <member kind="function">
      <type>bool</type>
      <name>sendTSIPCommand</name>
      <anchorfile>classArTrimbleGPS.html</anchorfile>
      <anchor>a09fe5ad0830c939dd3a8e3c5264967de</anchor>
      <arglist>(char command, const char *data, size_t dataLen)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArTypes</name>
    <filename>classArTypes.html</filename>
    <member kind="typedef">
      <type>char</type>
      <name>Byte</name>
      <anchorfile>classArTypes.html</anchorfile>
      <anchor>a049ac44ab4c6e3a7f55a7ba68275da53</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short</type>
      <name>Byte2</name>
      <anchorfile>classArTypes.html</anchorfile>
      <anchor>aff7daca3c28eeaacc95b1ac07997661c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Byte4</name>
      <anchorfile>classArTypes.html</anchorfile>
      <anchor>aa9febccb890f2a2d72c3b88d2ab08855</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>Byte8</name>
      <anchorfile>classArTypes.html</anchorfile>
      <anchor>a0bebf1ecd0c9f9422d27fddf5bb8d716</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>UByte</name>
      <anchorfile>classArTypes.html</anchorfile>
      <anchor>a9870b6101609a525d21481cc16b4c685</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>UByte2</name>
      <anchorfile>classArTypes.html</anchorfile>
      <anchor>a0efae5ee63aec92972d78ecaffdbfcea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>UByte4</name>
      <anchorfile>classArTypes.html</anchorfile>
      <anchor>af596f738ccf86d1fa8a64af52ea2f061</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long long</type>
      <name>UByte8</name>
      <anchorfile>classArTypes.html</anchorfile>
      <anchor>a3d54ee98bc3e287fcfe95b8a5a539ed8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArUrg</name>
    <filename>classArUrg.html</filename>
    <base>ArLaser</base>
    <member kind="function">
      <type></type>
      <name>ArUrg</name>
      <anchorfile>classArUrg.html</anchorfile>
      <anchor>ad8e46a6ba4b498362db42d332f799696</anchor>
      <arglist>(int laserNumber, const char *name=&quot;urg&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArUrg.html</anchorfile>
      <anchor>a65cf5f5de2e32406037d0206ac43a73d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArUrg</name>
      <anchorfile>classArUrg.html</anchorfile>
      <anchor>a753acd9f6ccfb8b5a66b63471e48ed68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>internalConnect</name>
      <anchorfile>classArUrg.html</anchorfile>
      <anchor>ac1820bb8a2f708dd0c28620c56d08bbf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>readLine</name>
      <anchorfile>classArUrg.html</anchorfile>
      <anchor>a131bea5642d4a07c152ebd2c30ff4265</anchor>
      <arglist>(char *buf, unsigned int size, unsigned int msWait)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>sendCommandAndRecvStatus</name>
      <anchorfile>classArUrg.html</anchorfile>
      <anchor>a95ab4f588afba136ec831d5047ebc66f</anchor>
      <arglist>(const char *command, const char *commandDesc, char *status, unsigned int size, unsigned int msWait)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setParams</name>
      <anchorfile>classArUrg.html</anchorfile>
      <anchor>a5ea1dac40cc9a351b01a3f6d13b941d1</anchor>
      <arglist>(double startingDegrees=-135, double endingDegrees=135, double incrementDegrees=1, bool flipped=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setParamsBySteps</name>
      <anchorfile>classArUrg.html</anchorfile>
      <anchor>a2a2a65b50f919c0b58e6af1b869e8f9c</anchor>
      <arglist>(int startingStep=0, int endingStep=768, int clusterCount=3, bool flipped=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>writeLine</name>
      <anchorfile>classArUrg.html</anchorfile>
      <anchor>a4972fb82d584aa6044c7bcf5c2ed0512</anchor>
      <arglist>(const char *str)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArUrg_2_0</name>
    <filename>classArUrg__2__0.html</filename>
    <base>ArLaser</base>
    <member kind="function">
      <type></type>
      <name>ArUrg_2_0</name>
      <anchorfile>classArUrg__2__0.html</anchorfile>
      <anchor>aaa8e5fdede68339115a0005fa3790ff4</anchor>
      <arglist>(int laserNumber, const char *name=&quot;urg2.0&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArUrg__2__0.html</anchorfile>
      <anchor>aeff5133926e4ba950d1d2f25675fa4e8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArUrg_2_0</name>
      <anchorfile>classArUrg__2__0.html</anchorfile>
      <anchor>a520db3f37d0f6c24b9c510672e8e0827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>readLine</name>
      <anchorfile>classArUrg__2__0.html</anchorfile>
      <anchor>abb6abcc2ff7317f1e469b9add99864af</anchor>
      <arglist>(char *buf, unsigned int size, unsigned int msWait, bool noChecksum, bool stripLastSemicolon, ArTime *firstByte=NULL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>sendCommandAndRecvStatus</name>
      <anchorfile>classArUrg__2__0.html</anchorfile>
      <anchor>a5b15257bac4b8cdf5cb8ad72f7d48144</anchor>
      <arglist>(const char *command, const char *commandDesc, char *status, unsigned int size, unsigned int msWait)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setParams</name>
      <anchorfile>classArUrg__2__0.html</anchorfile>
      <anchor>a9adcf2ac7d18093e50e4f5d8649bf289</anchor>
      <arglist>(double startingDegrees=-135, double endingDegrees=135, double incrementDegrees=1, bool flipped=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setParamsBySteps</name>
      <anchorfile>classArUrg__2__0.html</anchorfile>
      <anchor>a339cf5f57ceebfc75aa0282695c15821</anchor>
      <arglist>(int startingStep=0, int endingStep=768, int clusterCount=3, bool flipped=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>writeLine</name>
      <anchorfile>classArUrg__2__0.html</anchorfile>
      <anchor>a63aba481b63ba2cf34030c2187dacfd8</anchor>
      <arglist>(const char *str)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArUtil</name>
    <filename>classArUtil.html</filename>
    <member kind="enumvalue">
      <name>BIT0</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada0554099ded8f4dc4683cfa1b6e0ba776</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT1</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadabb1338bd9284d6d2ebca223079214804</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT10</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada00a8d55d6bcd015ac7fdcd2b337e9c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT11</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada9a33aebaedff8c97ed9c0a2fbdd27e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT12</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada3cbd80e0aaae949343225fb766222ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT13</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada8d450816c7f4188ed522a95cac35f159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT14</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada6bc0449909f5dcabfa7d24ada336ff83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT15</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadaa8eebcbae86c6b4dc7ddbf3a23546a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT2</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadae0d67fd8e939d54812b02d1a728c5075</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT3</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada261df8c57cdaedbf6ee9e4ccbb1b912f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT4</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada52fc916728fb37dd1a26bd3e8a75f1ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT5</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadae59af3ca97f6a3261b2a0d9e07782f91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT6</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadadea62434f4ba9103a4bda5be5b97fa86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT7</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadad3530ac1d8686c6a24f969f714a051a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT8</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadae1b699aa174bb379f2d80fdc37886d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT9</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada8b7f8130c6f38d9f4cea32904e83e61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BITS</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT0</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada0554099ded8f4dc4683cfa1b6e0ba776</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT1</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadabb1338bd9284d6d2ebca223079214804</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT2</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadae0d67fd8e939d54812b02d1a728c5075</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT3</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada261df8c57cdaedbf6ee9e4ccbb1b912f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT4</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada52fc916728fb37dd1a26bd3e8a75f1ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT5</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadae59af3ca97f6a3261b2a0d9e07782f91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT6</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadadea62434f4ba9103a4bda5be5b97fa86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT7</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadad3530ac1d8686c6a24f969f714a051a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT8</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadae1b699aa174bb379f2d80fdc37886d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT9</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada8b7f8130c6f38d9f4cea32904e83e61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT10</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada00a8d55d6bcd015ac7fdcd2b337e9c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT11</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada9a33aebaedff8c97ed9c0a2fbdd27e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT12</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada3cbd80e0aaae949343225fb766222ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT13</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada8d450816c7f4188ed522a95cac35f159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT14</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdada6bc0449909f5dcabfa7d24ada336ff83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT15</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8dbaef80af16916fe5647dff5092fdadaa8eebcbae86c6b4dc7ddbf3a23546a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>REGKEY</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5edb8ea00fead31d95d83a60cc73e7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGKEY_CLASSES_ROOT</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5edb8ea00fead31d95d83a60cc73e7f2a5b8122b7c83189f317b0534c0dcffbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGKEY_CURRENT_CONFIG</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5edb8ea00fead31d95d83a60cc73e7f2ae08e882a7d114c155065fe8ac6f4e2e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGKEY_CURRENT_USER</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5edb8ea00fead31d95d83a60cc73e7f2a59190c42ab4b188994502cc486825faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGKEY_LOCAL_MACHINE</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5edb8ea00fead31d95d83a60cc73e7f2a2b29dab942e7b0ea37aa9ead982c9124</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGKEY_USERS</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5edb8ea00fead31d95d83a60cc73e7f2a7e59b9a94e1dfe79838de668c9061b6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGKEY_CLASSES_ROOT</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5edb8ea00fead31d95d83a60cc73e7f2a5b8122b7c83189f317b0534c0dcffbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGKEY_CURRENT_CONFIG</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5edb8ea00fead31d95d83a60cc73e7f2ae08e882a7d114c155065fe8ac6f4e2e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGKEY_CURRENT_USER</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5edb8ea00fead31d95d83a60cc73e7f2a59190c42ab4b188994502cc486825faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGKEY_LOCAL_MACHINE</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5edb8ea00fead31d95d83a60cc73e7f2a2b29dab942e7b0ea37aa9ead982c9124</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGKEY_USERS</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5edb8ea00fead31d95d83a60cc73e7f2a7e59b9a94e1dfe79838de668c9061b6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addDirectories</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a196eae227f3e6fc7387bb623b4ddea03</anchor>
      <arglist>(char *dest, size_t destLength, const char *baseDir, const char *insideDir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>appendSlash</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>acd8e6fd8ab58feaf25fd1eef4376306d</anchor>
      <arglist>(char *path, size_t pathLength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>appendSlash</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a602e82940dc83918d42fa74952773592</anchor>
      <arglist>(std::string &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>atof</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a63ac679f006f65c487a71790b1177707</anchor>
      <arglist>(const char *nptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>changeFileTimestamp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ab97031fd3fac6e44936406412896a6f0</anchor>
      <arglist>(const char *fileName, time_t timestamp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertBool</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a7ec7c56af3e62905f74194492bfef213</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>creat</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a76322201c6016961e5c9645d9796f2ba</anchor>
      <arglist>(const char *pathname, mode_t mode, bool closeOnExec=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deleteSet</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a6b5f17df33bafc1882eb3d5f519e1200</anchor>
      <arglist>(T begin, T end)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deleteSetPairs</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a2d327400c6ebecc3b6f1c2ce35df1c74</anchor>
      <arglist>(T begin, T end)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>escapeSpaces</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a99293bdfc662ba9afe57a9576a23941d</anchor>
      <arglist>(char *dest, const char *src, size_t maxLen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>feetToMeters</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ad90288baf1e8343d4c5929467d028012</anchor>
      <arglist>(const double f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>findFile</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a731729868fac7cf87c9894fe024f8a6c</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>findFirstStringInRegistry</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>add6206b3dfe5bc857604eb3e1fa467cd</anchor>
      <arglist>(const char *key, const char *value, char *str, int len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>findMax</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga7fc7330b06db74f4425fd4e0c3beff09</anchor>
      <arglist>(int first, int second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>findMax</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gad6ef4d90b07063cf2e6cc725ae73d4c3</anchor>
      <arglist>(double first, double second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>findMaxU</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gab185c9fb51fceba5736524d60870a3b3</anchor>
      <arglist>(unsigned int first, unsigned int second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>findMin</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gae56731db94fa119a2ec98ae3e1be29a5</anchor>
      <arglist>(int first, int second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>findMin</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaa40c308bbd855f066a500a5f2761f254</anchor>
      <arglist>(double first, double second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>findMinU</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga4b9123b4fa602266d5415c3e6a53983d</anchor>
      <arglist>(unsigned int first, unsigned int second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>fixBadCharacters</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a780b9f50e6181679a1e60105a7edccbb</anchor>
      <arglist>(std::string *strToFix, bool removeSpaces, bool fixOtherWhiteSpace=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fixSlashes</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a891a7c83c2f48b4acf9d7206247bbda8</anchor>
      <arglist>(char *path, size_t pathLength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fixSlashes</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ac03aa9478d9b406f63f4581ea6d22082</anchor>
      <arglist>(std::string &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fixSlashesBackward</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>abb7835bb32013eff18fa8f9c9be4f166</anchor>
      <arglist>(char *path, size_t pathLength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fixSlashesForward</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a0f3450a5c8fc6730c8d568aac611d7a8</anchor>
      <arglist>(char *path, size_t pathLength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>floatIsNormal</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a2b989cbc1c67fa6c726108179bddbe8c</anchor>
      <arglist>(double f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FILE *</type>
      <name>fopen</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a0c4d240777628983e66005d7f7a4939c</anchor>
      <arglist>(const char *path, const char *mode, bool closeOnExec=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>functorPrintf</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5ac5c1c71472c7ab13b6c348d37a3de7</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, const char *formatstr,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>functorPrintf</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>aa7fd04cf84fdc691a1c2b885a1408001</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, char *formatstr,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getDirectory</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a2f413a595a99815d60868978116783b7</anchor>
      <arglist>(const char *fileName, char *result, size_t resultLen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getFileName</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a6e583e7b62f24bc528c0dd2d30feb36b</anchor>
      <arglist>(const char *fileName, char *result, size_t resultLen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char</type>
      <name>getSlash</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a3b7e81c90d423f4ab45a5ccad3471d5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getStringFromFile</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a5a7f7406b64fe46adfb31feecc4dee5d</anchor>
      <arglist>(const char *fileName, char *str, size_t strLen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getStringFromRegistry</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a844eb4cb2378c04c8fd128327a8603a7</anchor>
      <arglist>(REGKEY root, const char *key, const char *value, char *str, int len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>getTime</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ad3496dfd2693d19553a399883a4e20e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isOnlyAlphaNumeric</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a0b9f925549544be43f8da80f28ead05d</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isOnlyNumeric</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>af78edf7d12d4e609d639ee774dc96929</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isStrEmpty</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>aca10655a71490117f5e89378e2a5b533</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isStrInList</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>abbe859dc636bedafbbd46c83a4d4a18d</anchor>
      <arglist>(const char *str, const std::list&lt; std::string &gt; &amp;list, bool isIgnoreCase=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>localtime</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a40c2583783ed4ce597593e0d3496c1b9</anchor>
      <arglist>(const time_t *timep, struct tm *result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>localtime</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a513dd8e7679a8c1b2e6e51554a981991</anchor>
      <arglist>(struct tm *result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>lower</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a754c3bc37df607f8157dad3521abac5e</anchor>
      <arglist>(char *dest, const char *src, size_t maxLen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>matchCase</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a8cacafc1a7171298772f965e94a7c00f</anchor>
      <arglist>(const char *baseDir, const char *fileName, char *result, size_t resultLen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>metersToFeet</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>adaca3f102cf711751bee3402dd214cfb</anchor>
      <arglist>(const double m)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>mSecToSec</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a18a4dc980f80dea347f1d7491551bba7</anchor>
      <arglist>(const double msec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>open</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a662965659c0517183ed1162d835bfe40</anchor>
      <arglist>(const char *pathname, int flags, bool closeOnExec=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>open</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ad3404a0caddfc4299c4a9ebb33004f68</anchor>
      <arglist>(const char *pathname, int flags, mode_t mode, bool closeOnExec=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static time_t</type>
      <name>parseTime</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a151af769c1afe54cf5b25f68d5a049ef</anchor>
      <arglist>(const char *str, bool *ok=NULL, bool toToday=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FILE *</type>
      <name>popen</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a17db04bd1d197cdc4ee3048fb2ff183c</anchor>
      <arglist>(const char *command, const char *type, bool closeOnExec=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>putCurrentDayInString</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a7c26ed6c4b24e7bd86d817bd3771e986</anchor>
      <arglist>(char *s, size_t len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>putCurrentHourInString</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>aebb76d96041c94145b683e0e1018a807</anchor>
      <arglist>(char *s, size_t len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>putCurrentMinuteInString</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a76e777a8b67d8af271f4c128b486bf3d</anchor>
      <arglist>(char *s, size_t len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>putCurrentMonthInString</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>abd53d34341eac7720762fe97474056b2</anchor>
      <arglist>(char *s, size_t len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>putCurrentSecondInString</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a96e45e795111480fa44b53d69d51bfbd</anchor>
      <arglist>(char *s, size_t len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>putCurrentYearInString</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a6176b06a59bff3126b91e60863a95e65</anchor>
      <arglist>(char *s, size_t len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>secToMSec</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a50fbd83a487dcf92689596c05e552533</anchor>
      <arglist>(const double sec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setFileCloseOnExec</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a2270328994403a3d1927c5b5c4da5725</anchor>
      <arglist>(int fd, bool closeOnExec=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setFileCloseOnExec</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a57c41bd83231483e3406544a5ee76206</anchor>
      <arglist>(FILE *file, bool closeOnExec=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>sizeFile</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a7674efc30afe02fb0cd37d773469ca2c</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>sizeFile</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ab9cc6e5071290a9dd66f79e25b6deb40</anchor>
      <arglist>(std::string fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sleep</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga4dfb878a3f9123b8dd96ae05b2fd94cb</anchor>
      <arglist>(unsigned int ms)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>strcasecmp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ab17364ae21df36b1d11942bc5d75b074</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;str2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>strcasecmp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a1951f269b99ad3b320c70d286122d5d3</anchor>
      <arglist>(const std::string &amp;str, const char *str2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>strcasecmp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ae497bcb1f1fe95750aa942c6e54bdf23</anchor>
      <arglist>(const char *str, const std::string &amp;str2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>strcasecmp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>af071db74ee72c55afbe07d26b801afdb</anchor>
      <arglist>(const char *str, const char *str2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>strcasequotecmp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>aef5b8a681b6c906ecc8b2cd5660925ad</anchor>
      <arglist>(const std::string &amp;str1, const std::string &amp;str2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>strcmp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a35643715dec6e4e781d6b14f9bb18dc6</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;str2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>strcmp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>aa3a3c3e93c9de270d85201f6f6f5f982</anchor>
      <arglist>(const std::string &amp;str, const char *str2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>strcmp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a2d79ca41ffb02f2a40c1385de5661f3f</anchor>
      <arglist>(const char *str, const std::string &amp;str2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>strcmp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a0027579e9a503b09c30e49505aa311de</anchor>
      <arglist>(const char *str, const char *str2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>stripQuotes</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a16d283861f64d1afb59005fd1213a8f6</anchor>
      <arglist>(char *dest, const char *src, size_t destLen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>stripQuotes</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>af910983b55521a60d39602d1964df7a8</anchor>
      <arglist>(std::string *strToStrip)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>strSuffixCaseCmp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>afab4ae5be002e0c005692e060175bed8</anchor>
      <arglist>(const char *str, const char *suffix)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>strSuffixCmp</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a46f4760389fe6b2cbd84ac5af1fbd8f4</anchor>
      <arglist>(const char *str, const char *suffix)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>writeToFile</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a6083b91ab76bc97401bfb902a2b51c0c</anchor>
      <arglist>(const char *str, FILE *file)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM1</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a55c1a819493603958b733b516065ddca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM10</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ade830770ba01aac6e9b3d9874a7666f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM11</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ac83a0a5e65db657513699f54f3443d04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM12</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ad710de074a77796717c3e1402f7fb561</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM13</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>aa665c4ccc7b77a4f76996395462e427d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM14</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>afe39158eef2a9c1692435ef35fbb347b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM15</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ae2a6a3218c49d1907a2c7c747c17fcd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM16</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a49b2caa20ab69334bb1ca18069fef241</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM2</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ae4b816acd32958a825f179c199e10155</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM3</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a32000b7eb4342c9b94728ef372ba6b44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM4</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a6be33894b08edc59d364f8069c6bf86d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM5</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a54d18b0ca1fe5e3636a2b268e8e90817</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM6</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a89076fea55d0de539b22a026d282c8b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM7</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a6b0ed2dcb7ba258f6d6ecc336854498e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM8</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>a6b63d1d15acf8368ece481497cf72e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>COM9</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ab4ff7b31d43b495ccaf4c080de56576f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>FALSESTRING</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ae7dfc63857b6667df01d7afcb51aa78a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>TRUESTRING</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>aa94be28712404c59fb0268e81b7b6bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::list&lt; std::string &gt;</type>
      <name>splitFileName</name>
      <anchorfile>classArUtil.html</anchorfile>
      <anchor>ae14ccc824edc9460821dc4fbb99926b1</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArVCC4</name>
    <filename>classArVCC4.html</filename>
    <base>ArPTZ</base>
    <member kind="function">
      <type>void</type>
      <name>addErrorCB</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a08d638b8810a2487c013c40c97c64130</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArVCC4</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a2ae2f4d13aca4640819257d256637033</anchor>
      <arglist>(ArRobot *robot, bool inverted=false, CommState commDirection=COMM_UNKNOWN, bool autoUpdate=true, bool disableLED=false, CameraType cameraType=CAMERA_VCC4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>autoFocus</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>addf864180252a4b91029133de456945b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>digitalZoom</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>ac789afd4861990488a18182a25f831b0</anchor>
      <arglist>(int deg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableIRFilterMode</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a4ca8f652a848ffb27f55480bf5482121</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableIRLEDs</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>ac2dad9426e7af830052a37fd2ea80dc5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableAutoUpdate</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a293a127fd6042f86e0f167ecb92234f8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableIRFilterMode</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a7f6f21086079995077a65121dee602e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableIRLEDs</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a41d5862406c378c7f6840b3d6b7e7e12</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>focusFar</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a413614cc8e2f2a2ecca801bdbe964b3c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>focusNear</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>abfcf9e45bace60c492d90d3d3b06a1bf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getFOVAtMaxZoom</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a61668dc434f1180c82910ae8469c86b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getFOVAtMinZoom</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a267d3042775aa8e866bddf2f5f016a3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIRFilterModeEnabled</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a8d6a781d3e3d199d683fe4fa53688686</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIRLEDsEnabled</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>afa6f7c06df7665d97e43ab82a6888cca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxPanSlew</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a7e46b25e4e2fe69b72e6bba265c3ce56</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxTiltSlew</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a7973ca895945196e64414cf0ba5bef1a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinPanSlew</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a4adba1da8b0a8a0d8d282621e6c36b98</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinTiltSlew</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a4414e53eedb142de426ae82f0d182bd3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPanSlew</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a42d7670076c9ac2e462adacc1b552ab8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getRealPanTilt</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a9a716e397e8af66c8e3d98db64dee025</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getRealZoomPos</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a4767634ce75fd51d972c6327b24196a6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTiltSlew</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a6690c27ee8c6c481da5ceff977c28e26</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haltPanTilt</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a601ebea550948ed76fe8d4b65916b356</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haltZoom</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a52782507b905249c5e476d03b8575284</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitted</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a1a4314f097f0dedefd028ac9db34a4d3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>manualFocus</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a453a474b3bcac3269c43af0527979033</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>panSlew</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>ac7005dff34943c5cf24868e0127cb5cf</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preparePacket</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a81bf4599ff6d4afc4160cf09d1214dc2</anchor>
      <arglist>(ArVCC4Packet *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remErrorCB</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a529db1d7108a065ce88523829fc03595</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLEDControlMode</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a5c045087b3b59e2bda9893aa5d7968ee</anchor>
      <arglist>(int controlMode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tiltSlew</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a0e97b610ad7f58cb6d02fd146dd53780</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasError</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a8b0d091fcfed34f207c2f328ba046f8d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArVCC4</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a074c2f7791c5aa192ac8f9c72affa093</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>CAM_ERROR_BUSY</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a98d7ffebce3a86a7c8c91c1d10c3a5aba3eccca5c419bffb84fbf926f7624e2e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>CAM_ERROR_MODE</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a98d7ffebce3a86a7c8c91c1d10c3a5aba8d7d3d39288a5a6d71c8486e0b79db31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>CAM_ERROR_NONE</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a98d7ffebce3a86a7c8c91c1d10c3a5aba34045e3e5c7a8083976a01faaa3999f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>CAM_ERROR_PARAM</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a98d7ffebce3a86a7c8c91c1d10c3a5aba6e3647459d59c5e995cea6c92ed001f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>CAM_ERROR_UNKNOWN</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a98d7ffebce3a86a7c8c91c1d10c3a5aba5a609b53d508d59871d3720e789f942c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>Error</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a98d7ffebce3a86a7c8c91c1d10c3a5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>CAM_ERROR_NONE</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a98d7ffebce3a86a7c8c91c1d10c3a5aba34045e3e5c7a8083976a01faaa3999f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>CAM_ERROR_BUSY</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a98d7ffebce3a86a7c8c91c1d10c3a5aba3eccca5c419bffb84fbf926f7624e2e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>CAM_ERROR_PARAM</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a98d7ffebce3a86a7c8c91c1d10c3a5aba6e3647459d59c5e995cea6c92ed001f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>CAM_ERROR_MODE</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a98d7ffebce3a86a7c8c91c1d10c3a5aba8d7d3d39288a5a6d71c8486e0b79db31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>CAM_ERROR_UNKNOWN</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a98d7ffebce3a86a7c8c91c1d10c3a5aba5a609b53d508d59871d3720e789f942c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>sendLEDControlMode</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a3912e5dab6b45915a72535f457f1f845</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ArPTZ *</type>
      <name>create</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>a7bac6125f63d30e561810642909bbfc3</anchor>
      <arglist>(size_t index, ArPTZParams params, ArArgumentParser *parser, ArRobot *robot)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArPTZConnector::GlobalPTZCreateFunc</type>
      <name>ourCreateFunc</name>
      <anchorfile>classArVCC4.html</anchorfile>
      <anchor>ae5c619fea20d268c4e959a4449f56bc6</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="classArVCC4" title="Command-Response details:">VCC4CommandDetails</docanchor>
    <docanchor file="classArVCC4" title="Unit Conversions:">VCC4UnitConversions</docanchor>
    <docanchor file="classArVCC4" title="C50i features:">VCC4C50iFeatures</docanchor>
  </compound>
  <compound kind="class">
    <name>ArVCC4Commands</name>
    <filename>classArVCC4Commands.html</filename>
    <member kind="enumvalue">
      <name>ANGLEREQ</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baabe7c04e18c42692fba786520acbab209</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTOFOCUS</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa296b55420323b6ff415fc6974741d04a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Command</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELIM</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa46d0ecfc7ce57c6eada28348d6d7b70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEVICEID</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa80f8b9adfa037b91aa5ad72ecb89872d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANSLEW</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baae0e0f2b469fea6f526838118acb733ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TILTSLEW</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa68d3f43e3584dd79823422210fc38caf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STOP</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baae2fb9a8646bf98bdbb2616682ae755b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INIT</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baaddd63c711029bd970aefc5644fdc69b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SLEWREQ</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa6aea722f1d8fe54af26c420112b1cd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANGLEREQ</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baabe7c04e18c42692fba786520acbab209</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILT</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa6c91ed07f599c9074b8bdf7233b1adb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETRANGE</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa1d264787609637190c36f85657a64095</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILTREQ</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baaa9227624866e522545a9354d07490f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INFRARED</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa02bf687d1eb65a70370a3c280f6d1514</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRODUCTNAME</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa0770538e3b837a79a628d812ca6a2e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEDCONTROL</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa577e5cc12efa229a241bf91bdcfde412</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTROL</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baaf54ab5175775f4872a10d51bffc030a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa1a832937439601d1f3abb3b69658f9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTOFOCUS</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa296b55420323b6ff415fc6974741d04a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZOOMSTOP</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa588bc6a647063b13159f3b6478772065</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GAIN</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa5c71e75b3f8d1d6f47ff00418881e2b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOCUS</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa3e50d710cb5bb2336c44fdf149bd6e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZOOM</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baadd548a9aa2d820be618b5519a1372e6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZOOMREQ</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa5611dfec68b30a695acbd9afc6c1ecf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IRCUTFILTER</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa5e0fe959c8ca2d4fc6c65a5597bce364</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIGITALZOOM</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa318016212ce59adb9fe881b19e7e3ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOOTER</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa0816ab2116854cc981f856c0d431d147</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa3acd3e5b5400e1c41a47edac2bfbf8cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HEADER</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa9a65ff01237d5eafc71149c5ec0f4392</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTROL</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baaf54ab5175775f4872a10d51bffc030a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELIM</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa46d0ecfc7ce57c6eada28348d6d7b70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEVICEID</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa80f8b9adfa037b91aa5ad72ecb89872d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIGITALZOOM</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa318016212ce59adb9fe881b19e7e3ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOCUS</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa3e50d710cb5bb2336c44fdf149bd6e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOOTER</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa0816ab2116854cc981f856c0d431d147</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GAIN</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa5c71e75b3f8d1d6f47ff00418881e2b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HEADER</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa9a65ff01237d5eafc71149c5ec0f4392</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INFRARED</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa02bf687d1eb65a70370a3c280f6d1514</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INIT</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baaddd63c711029bd970aefc5644fdc69b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IRCUTFILTER</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa5e0fe959c8ca2d4fc6c65a5597bce364</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEDCONTROL</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa577e5cc12efa229a241bf91bdcfde412</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANSLEW</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baae0e0f2b469fea6f526838118acb733ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILT</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa6c91ed07f599c9074b8bdf7233b1adb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PANTILTREQ</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baaa9227624866e522545a9354d07490f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POWER</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa1a832937439601d1f3abb3b69658f9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRODUCTNAME</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa0770538e3b837a79a628d812ca6a2e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa3acd3e5b5400e1c41a47edac2bfbf8cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETRANGE</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa1d264787609637190c36f85657a64095</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SLEWREQ</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa6aea722f1d8fe54af26c420112b1cd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STOP</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baae2fb9a8646bf98bdbb2616682ae755b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TILTSLEW</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa68d3f43e3584dd79823422210fc38caf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZOOM</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baadd548a9aa2d820be618b5519a1372e6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZOOMREQ</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa5611dfec68b30a695acbd9afc6c1ecf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZOOMSTOP</name>
      <anchorfile>classArVCC4Commands.html</anchorfile>
      <anchor>a1532c4d2e1fc9a791cb25b05760724baa588bc6a647063b13159f3b6478772065</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArVCC4Packet</name>
    <filename>classArVCC4Packet.html</filename>
    <base>ArBasePacket</base>
    <member kind="function">
      <type></type>
      <name>ArVCC4Packet</name>
      <anchorfile>classArVCC4Packet.html</anchorfile>
      <anchor>ab39b93c262233e57162aafc08b9bfe1d</anchor>
      <arglist>(ArTypes::UByte2 bufferSize=30)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArVCC4Packet</name>
      <anchorfile>classArVCC4Packet.html</anchorfile>
      <anchor>a273d9bf5bd0fb10a9cce5c84a2baec72</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArVersalogicIO</name>
    <filename>classArVersalogicIO.html</filename>
    <member kind="function">
      <type></type>
      <name>ArVersalogicIO</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>aed8be986d9d901ce34e5aaae841b8e58</anchor>
      <arglist>(const char *dev=&quot;/dev/amrio&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closeIO</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>af280c01496c4832e6e59cdaf7eeebd2d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAnalogValue</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>aa4c8f6195955d357db640158ff65b622</anchor>
      <arglist>(int port, double *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAnalogValueRaw</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>a17b57a16013f990872540f4c06c2e924</anchor>
      <arglist>(int port, int *val)</arglist>
    </member>
    <member kind="function">
      <type>Direction</type>
      <name>getDigitalBankDirection</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>a17e24a978cfbc54feb0f58305cfdfaf4</anchor>
      <arglist>(int bank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalBankInputs</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>aabeaff29b3ef9f6c8a4c0f525c8ca06f</anchor>
      <arglist>(int bank, unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDigitalBankOutputs</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>a2ce5104770db19796d492f44961a7189</anchor>
      <arglist>(int bank, unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSpecialControlRegister</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>aa9df4bd5e0b4a4b38d50d0086d904d49</anchor>
      <arglist>(unsigned char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAnalogSupported</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>a53182991c21fd0f6dceed1decb4df200</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>a0194347d04e6cec64c954e4ec2e51870</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lock</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>aaa823e82eb3a6eb8fbf08ea0a5b35b18</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDigitalBankDirection</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>a05c8da25c6eb898420556eb8ff29fa16</anchor>
      <arglist>(int bank, Direction dir)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDigitalBankOutputs</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>a47d3e871b3307049aee86044ead2f9fa</anchor>
      <arglist>(int bank, unsigned char val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tryLock</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>a8b28547dfbbec0b51b55304c63555f7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unlock</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>a963c09b9a601bb7eaaf826a153c1263d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArVersalogicIO</name>
      <anchorfile>classArVersalogicIO.html</anchorfile>
      <anchor>af52e1f6603d5b5ec3e82e43ffaddb56f</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArVideoParams</name>
    <filename>classArVideoParams.html</filename>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>classArVideoParams.html</anchorfile>
      <anchor>a2cf3f248a9eaa4a9eec449b24b00b06c</anchor>
      <arglist>(const ArVideoParams &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArWGS84</name>
    <filename>classArWGS84.html</filename>
  </compound>
  <compound kind="class">
    <name>ArZippable</name>
    <filename>classArZippable.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ModeType</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>af64b03ccec8f3a286a07638f43a2a1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>addAll</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>afd19ba1556c9d9c3b39e3699395c1b4b</anchor>
      <arglist>(const char *sourceDir, bool isIncludeSubDirs, bool isOverwrite, const char *password=NULL, int flush=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>addFile</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>a21d64c766cbc7bc4e13f7509abfd217a</anchor>
      <arglist>(const char *memberName, bool isOverwrite, const char *sourceFileName, const char *password, int flush=0)=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArZippable</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>a99bbf0628efef06c0cd60d3fc2704450</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>close</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>a57a1ebdf4751a7d54e6776f71ee1ddbc</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>contains</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>a0394eedc947a681ea78c9ae3d7859151</anchor>
      <arglist>(const char *memberName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>exists</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>accff736be8ce7afef3b9697851413196</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>extractAll</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>a836678bb27636d21a9c72d2b4ec259b1</anchor>
      <arglist>(const char *destDir, bool isOverwrite, const char *password=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>extractFile</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>a207637636716ff5e3cbc2ac1e569587b</anchor>
      <arglist>(const char *memberName, const char *destDir, bool isOverwrite, const char *destFileName=NULL, const char *password=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getFilePathName</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>a5c3466016c0f2a1634453aadf72fb9a3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>ade910107aa5f3eff321281f3ce13b590</anchor>
      <arglist>(ModeType mode)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArZippable</name>
      <anchorfile>classArZippable.html</anchorfile>
      <anchor>a5bcdbc19f221b1249babd897c4ee085a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArBatteryConnector::BatteryData</name>
    <filename>classArBatteryConnector_1_1BatteryData.html</filename>
    <member kind="variable">
      <type>ArBatteryMTX *</type>
      <name>myBattery</name>
      <anchorfile>classArBatteryConnector_1_1BatteryData.html</anchorfile>
      <anchor>a180647098b21d5fa602b40d5cffff20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>myBaud</name>
      <anchorfile>classArBatteryConnector_1_1BatteryData.html</anchorfile>
      <anchor>a66530442a968915a0199c32a44aa5800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>myNumber</name>
      <anchorfile>classArBatteryConnector_1_1BatteryData.html</anchorfile>
      <anchor>ac39be36fdc461babba9c4a34e1e1509b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArCameraCollection::CameraInfo</name>
    <filename>structArCameraCollection_1_1CameraInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>CameraInfo</name>
      <anchorfile>structArCameraCollection_1_1CameraInfo.html</anchorfile>
      <anchor>a92d4c96e6d002bd7f927bbb4f5829e56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CameraInfo</name>
      <anchorfile>structArCameraCollection_1_1CameraInfo.html</anchorfile>
      <anchor>a1ed234d2b5e6d79b8f8e0789799fac36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>myCameraName</name>
      <anchorfile>structArCameraCollection_1_1CameraInfo.html</anchorfile>
      <anchor>a234ef29cf0a8488e5792c54f534be91d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>myCameraType</name>
      <anchorfile>structArCameraCollection_1_1CameraInfo.html</anchorfile>
      <anchor>a856aa828b644eaa36636d20298fa60d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, CommandInfo * &gt;</type>
      <name>myCommandToInfoMap</name>
      <anchorfile>structArCameraCollection_1_1CameraInfo.html</anchorfile>
      <anchor>afb98e81fabcff2de2e3967d215a49d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>myDisplayName</name>
      <anchorfile>structArCameraCollection_1_1CameraInfo.html</anchorfile>
      <anchor>ab80c07435a23e5a351cb2d2a79ed7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>myDisplayType</name>
      <anchorfile>structArCameraCollection_1_1CameraInfo.html</anchorfile>
      <anchor>a326c242b9a1f0830d9d7d3f22ef8b6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, ParamInfo * &gt;</type>
      <name>myParamToInfoMap</name>
      <anchorfile>structArCameraCollection_1_1CameraInfo.html</anchorfile>
      <anchor>ac7f636948076a6a1c47608bf16d3dc1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArCameraCollection::CommandInfo</name>
    <filename>structArCameraCollection_1_1CommandInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>CommandInfo</name>
      <anchorfile>structArCameraCollection_1_1CommandInfo.html</anchorfile>
      <anchor>af794f070a74f242da877ce014bfd86a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CommandInfo</name>
      <anchorfile>structArCameraCollection_1_1CommandInfo.html</anchorfile>
      <anchor>a2e903ab98b221a40d958871bf7ca7d04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>myCameraCommandName</name>
      <anchorfile>structArCameraCollection_1_1CommandInfo.html</anchorfile>
      <anchor>a1b7ce2e195da0cb155e7a639336b4a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>myCommand</name>
      <anchorfile>structArCameraCollection_1_1CommandInfo.html</anchorfile>
      <anchor>aa2e2d320fe2f30c27a85ee6b2cf378f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>myRequestInterval</name>
      <anchorfile>structArCameraCollection_1_1CommandInfo.html</anchorfile>
      <anchor>afda32d2044dcc9b7dd450dff3a1df07f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArActionTriangleDriveTo::Data</name>
    <filename>classArActionTriangleDriveTo_1_1Data.html</filename>
  </compound>
  <compound kind="class">
    <name>ArSoundsQueue::Item</name>
    <filename>classArSoundsQueue_1_1Item.html</filename>
    <member kind="function">
      <type>void</type>
      <name>done</name>
      <anchorfile>classArSoundsQueue_1_1Item.html</anchorfile>
      <anchor>a3e35023ce74f5a007189d01626200745</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interrupt</name>
      <anchorfile>classArSoundsQueue_1_1Item.html</anchorfile>
      <anchor>a19e7c7f25dc43228a537d8015c3b4928</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classArSoundsQueue_1_1Item.html</anchorfile>
      <anchor>aca85d80aaca414979ec1dd00845d9950</anchor>
      <arglist>(const Item &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classArSoundsQueue_1_1Item.html</anchorfile>
      <anchor>a99431b62b187a027e02493355367853a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLaserConnector::LaserData</name>
    <filename>classArLaserConnector_1_1LaserData.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>myAdditionalIgnoreReadings</name>
      <anchorfile>classArLaserConnector_1_1LaserData.html</anchorfile>
      <anchor>a7b5e6fdf2c82157ff54580c70cb97257</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>myAutoBaud</name>
      <anchorfile>classArLaserConnector_1_1LaserData.html</anchorfile>
      <anchor>a269bbae1bcfaf5caf38feed1b584f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArLaser *</type>
      <name>myLaser</name>
      <anchorfile>classArLaserConnector_1_1LaserData.html</anchorfile>
      <anchor>aca280a1190a45fea7c0a55ccaaa25a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>myLaserIsPlaceholder</name>
      <anchorfile>classArLaserConnector_1_1LaserData.html</anchorfile>
      <anchor>abbba19443a2b096efc4b54d1217073d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>myNumber</name>
      <anchorfile>classArLaserConnector_1_1LaserData.html</anchorfile>
      <anchor>a2ad4f6c315f4ba3d1c5221cee2f630fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>myOwnPlaceholder</name>
      <anchorfile>classArLaserConnector_1_1LaserData.html</anchorfile>
      <anchor>a2f552f041b93fe109cab54a3bb4a3b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>myReflectorBits</name>
      <anchorfile>classArLaserConnector_1_1LaserData.html</anchorfile>
      <anchor>a8508a582288cd01ddd7405eec14fe900</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>myStartingBaud</name>
      <anchorfile>classArLaserConnector_1_1LaserData.html</anchorfile>
      <anchor>a871e162efb2e80ac1bf9f2026f1f4a98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>myUnits</name>
      <anchorfile>classArLaserConnector_1_1LaserData.html</anchorfile>
      <anchor>a2594266113844b642cde3095b82bbd1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArLCDConnector::LCDData</name>
    <filename>classArLCDConnector_1_1LCDData.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>myBaud</name>
      <anchorfile>classArLCDConnector_1_1LCDData.html</anchorfile>
      <anchor>a323117035bf93624ded5826118f4d405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArLCDMTX *</type>
      <name>myLCD</name>
      <anchorfile>classArLCDConnector_1_1LCDData.html</anchorfile>
      <anchor>a6fd3c0da39303ebdf1a94670a85cfbc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>myNumber</name>
      <anchorfile>classArLCDConnector_1_1LCDData.html</anchorfile>
      <anchor>ae0f154a41be8a6cb57e1dfe69f865871</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArNMEAParser::Message</name>
    <filename>structArNMEAParser_1_1Message.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>structArNMEAParser_1_1Message.html</anchorfile>
      <anchor>a8a0a99a7fb7d0cb7bc2bb16403b997e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArNMEAParser::MessageVector *</type>
      <name>message</name>
      <anchorfile>structArNMEAParser_1_1Message.html</anchorfile>
      <anchor>a1ecfbccd256c12346a21a7c31752d802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>prefix</name>
      <anchorfile>structArNMEAParser_1_1Message.html</anchorfile>
      <anchor>a2d403bd7f4343906a7b28e75d902d2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArTime</type>
      <name>timeParseStarted</name>
      <anchorfile>structArNMEAParser_1_1Message.html</anchorfile>
      <anchor>ada8be1649b516126178f219709e1a596</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>P2ArmJoint</name>
    <filename>classP2ArmJoint.html</filename>
  </compound>
  <compound kind="struct">
    <name>ArCameraCollection::ParamInfo</name>
    <filename>structArCameraCollection_1_1ParamInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>ParamInfo</name>
      <anchorfile>structArCameraCollection_1_1ParamInfo.html</anchorfile>
      <anchor>a2ea33a4e0d46ca045dbb0beb00aa4da6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ParamInfo</name>
      <anchorfile>structArCameraCollection_1_1ParamInfo.html</anchorfile>
      <anchor>af5802393d3cae37e6c2abd843b2c23e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ArConfigArg</type>
      <name>myParam</name>
      <anchorfile>structArCameraCollection_1_1ParamInfo.html</anchorfile>
      <anchor>acb2ae9e8bc8a47f1150cec4d1be635e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArCameraParameterSource *</type>
      <name>mySource</name>
      <anchorfile>structArCameraCollection_1_1ParamInfo.html</anchorfile>
      <anchor>a20ed03fb28cb4427e29c696bafd1e803</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArConfig::ProcessFileCBType</name>
    <filename>classArConfig_1_1ProcessFileCBType.html</filename>
  </compound>
  <compound kind="class">
    <name>ArSonarConnector::SonarData</name>
    <filename>classArSonarConnector_1_1SonarData.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setAutoConn</name>
      <anchorfile>classArSonarConnector_1_1SonarData.html</anchorfile>
      <anchor>a0421577ec88de81d69123d8ff0526204</anchor>
      <arglist>(bool a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBaud</name>
      <anchorfile>classArSonarConnector_1_1SonarData.html</anchorfile>
      <anchor>a7571fbd33b2788fe112509dfe57be036</anchor>
      <arglist>(int baud)</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>myBaud</name>
      <anchorfile>classArSonarConnector_1_1SonarData.html</anchorfile>
      <anchor>a4f48b250fb0a8b1957ee43ae7bce1d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>myNumber</name>
      <anchorfile>classArSonarConnector_1_1SonarData.html</anchorfile>
      <anchor>a6ba5582a892af8aafbf59120b8099c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArSonarMTX *</type>
      <name>mySonar</name>
      <anchorfile>classArSonarConnector_1_1SonarData.html</anchorfile>
      <anchor>a3f4fee958c6d3c9b056fe6a34dc6230f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ImportantClasses</name>
    <title>Important Classes</title>
    <filename>group__ImportantClasses.html</filename>
    <class kind="class">ArArgumentBuilder</class>
    <class kind="class">ArArgumentParser</class>
    <class kind="class">ArFunctor</class>
    <class kind="class">Aria</class>
    <class kind="class">ArLaser</class>
    <class kind="class">ArLaserConnector</class>
    <class kind="class">ArLog</class>
    <class kind="class">ArRangeDevice</class>
    <class kind="class">ArRobot</class>
    <class kind="class">ArRobotConnector</class>
    <class kind="class">ArSonarDevice</class>
    <class kind="class">ArUtil</class>
  </compound>
  <compound kind="group">
    <name>OptionalClasses</name>
    <title>Optional Classes</title>
    <filename>group__OptionalClasses.html</filename>
    <class kind="class">ArAction</class>
    <class kind="class">ArActionGroup</class>
    <class kind="class">ArACTS_1_2</class>
    <class kind="class">ArAnalogGyro</class>
    <class kind="class">ArCameraCollection</class>
    <class kind="class">ArCommands</class>
    <class kind="class">ArConfig</class>
    <class kind="class">ArDaemonizer</class>
    <class kind="class">ArDataLogger</class>
    <class kind="class">ArDPPTUCommands</class>
    <class kind="class">ArFileParser</class>
    <class kind="class">ArForbiddenRangeDevice</class>
    <class kind="class">ArGPS</class>
    <class kind="class">ArGPSConnector</class>
    <class kind="class">ArGripper</class>
    <class kind="class">ArIRs</class>
    <class kind="class">ArJoyHandler</class>
    <class kind="class">ArKeyHandler</class>
    <class kind="class">ArLineFinder</class>
    <class kind="class">ArMap</class>
    <class kind="class">ArMode</class>
    <class kind="class">ArMTXIO</class>
    <class kind="class">ArNetServer</class>
    <class kind="class">ArP2Arm</class>
    <class kind="class">ArPTZ</class>
    <class kind="class">ArPTZConnector</class>
    <class kind="class">ArRatioInputJoydrive</class>
    <class kind="class">ArRatioInputKeydrive</class>
    <class kind="class">ArRatioInputRobotJoydrive</class>
    <class kind="class">ArRobotJoyHandler</class>
    <class kind="class">ArStringInfoGroup</class>
    <class kind="class">ArTCM2</class>
    <class kind="class">ArVersalogicIO</class>
  </compound>
  <compound kind="group">
    <name>ActionClasses</name>
    <title>Predefined ArAction Classes</title>
    <filename>group__ActionClasses.html</filename>
    <class kind="class">ArAction</class>
    <class kind="class">ArActionAvoidFront</class>
    <class kind="class">ArActionAvoidSide</class>
    <class kind="class">ArActionBumpers</class>
    <class kind="class">ArActionColorFollow</class>
    <class kind="class">ArActionConstantVelocity</class>
    <class kind="class">ArActionDeceleratingLimiter</class>
    <class kind="class">ArActionDriveDistance</class>
    <class kind="class">ArActionGoto</class>
    <class kind="class">ArActionGotoStraight</class>
    <class kind="class">ArActionGroup</class>
    <class kind="class">ArActionInput</class>
    <class kind="class">ArActionIRs</class>
    <class kind="class">ArActionJoydrive</class>
    <class kind="class">ArActionKeydrive</class>
    <class kind="class">ArActionLimiterBackwards</class>
    <class kind="class">ArActionLimiterForwards</class>
    <class kind="class">ArActionLimiterRot</class>
    <class kind="class">ArActionLimiterTableSensor</class>
    <class kind="class">ArActionMovementParameters</class>
    <class kind="class">ArActionMovementParametersDebugging</class>
    <class kind="class">ArActionRatioInput</class>
    <class kind="class">ArActionRobotJoydrive</class>
    <class kind="class">ArActionStallRecover</class>
    <class kind="class">ArActionStop</class>
    <class kind="class">ArActionTriangleDriveTo</class>
    <class kind="class">ArActionTurn</class>
  </compound>
  <compound kind="group">
    <name>DeviceClasses</name>
    <title>Device Interface Classes</title>
    <filename>group__DeviceClasses.html</filename>
    <class kind="class">ArBumpers</class>
    <class kind="class">ArGPS</class>
    <class kind="class">ArGPSConnector</class>
    <class kind="class">ArGripper</class>
    <class kind="class">ArIRs</class>
    <class kind="class">ArLaser</class>
    <class kind="class">ArLaserConnector</class>
    <class kind="class">ArMTXIO</class>
    <class kind="class">ArP2Arm</class>
    <class kind="class">ArPTZ</class>
    <class kind="class">ArPTZConnector</class>
    <class kind="class">ArRobot</class>
    <class kind="class">ArRobotConnector</class>
    <class kind="class">ArSerialConnection</class>
    <class kind="class">ArSonarDevice</class>
    <class kind="class">ArTCM2</class>
    <class kind="class">ArVersalogicIO</class>
  </compound>
  <compound kind="group">
    <name>UtilityClasses</name>
    <title>Utility Classes</title>
    <filename>group__UtilityClasses.html</filename>
    <class kind="class">Ar3DPoint</class>
    <class kind="class">ArASyncTask</class>
    <class kind="class">ArCallbackList</class>
    <class kind="class">ArCondition</class>
    <class kind="class">ArDaemonizer</class>
    <class kind="class">ArECEFCoords</class>
    <class kind="class">ArENUCoords</class>
    <class kind="class">ArInterpolation</class>
    <class kind="class">ArLine</class>
    <class kind="class">ArLineFinder</class>
    <class kind="class">ArLineSegment</class>
    <class kind="struct">ArLineSegmentCmpOp</class>
    <class kind="class">ArLLACoords</class>
    <class kind="class">ArMapGPSCoords</class>
    <class kind="class">ArMath</class>
    <class kind="class">ArMD5Calculator</class>
    <class kind="class">ArMutex</class>
    <class kind="class">ArPose</class>
    <class kind="struct">ArPoseCmpOp</class>
    <class kind="class">ArPoseWithTime</class>
    <class kind="class">ArRecurrentTask</class>
    <class kind="class">ArRingQueue</class>
    <class kind="class">ArRootMeanSquareCalculator</class>
    <class kind="class">ArRunningAverage</class>
    <class kind="class">ArScopedLock</class>
    <class kind="class">ArSectors</class>
    <class kind="class">ArSerialConnection</class>
    <class kind="class">ArSocket</class>
    <class kind="class">ArSoundPlayer</class>
    <class kind="class">ArSoundsQueue</class>
    <class kind="struct">ArStrCaseCmpOp</class>
    <class kind="class">ArSystemStatus</class>
    <class kind="class">ArTcpConnection</class>
    <class kind="class">ArTime</class>
    <class kind="class">ArTransform</class>
    <class kind="class">ArUtil</class>
    <class kind="class">ArWGS84</class>
  </compound>
  <compound kind="group">
    <name>MTX</name>
    <title>MTX/Pioneer LX Specific Classes</title>
    <filename>group__MTX.html</filename>
    <class kind="class">ArLCDMTX</class>
    <class kind="class">ArMTXIO</class>
  </compound>
  <compound kind="group">
    <name>easy</name>
    <title>Easy Subset of ARIA for Beginners</title>
    <filename>group__easy.html</filename>
    <class kind="class">ArLog</class>
    <class kind="class">ArMath</class>
    <class kind="class">ArPose</class>
    <member kind="function">
      <type>bool</type>
      <name>addAction</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga9ab030786d423237d3e4aa06c0e9d8ce</anchor>
      <arglist>(ArAction *action, int priority)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>addAngle</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga1f04eeb3c55892aef6fc179f48eaba18</anchor>
      <arglist>(double ang1, double ang2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>angleBetween</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga67e1a8742f38e6cfbe48cdb89ab8a740</anchor>
      <arglist>(double angle, double startAngle, double endAngle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArTime</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gad21b5077d7f093e1dab8b95ca0610fc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>atan2</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gadd5c8cde271a71c44bbfa0b6376ba1ec</anchor>
      <arglist>(double y, double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>cos</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga953ffdd0b569b33cbfd5a8f69cf3c69a</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>degToRad</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga8ba5702dba30a0c26b27b86c91550a95</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableMotors</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga834f25d63f93cd8a2f83cbbdb902b36d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableSonar</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga1ece2f034d28b16bbc864d3379430b97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>distanceBetween</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga039288e2f8735206972f51b99ac9f281</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableMotors</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaa3657bebab0086dd14ed0c8c3f76dc8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableSonar</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gadc8434bd495c10f0200e16c811347fcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>findAngleTo</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gab8cf284a0149394bf8735c35f71a6138</anchor>
      <arglist>(const ArPose pose)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>findDeltaHeadingTo</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga0092f3289d46d70211fd42e88bf13af3</anchor>
      <arglist>(const ArPose pose)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>findDistanceTo</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gae933c1570c1a267632a8ca8db112195a</anchor>
      <arglist>(const ArPose pose)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>findMax</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga7fc7330b06db74f4425fd4e0c3beff09</anchor>
      <arglist>(int first, int second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>findMax</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gad6ef4d90b07063cf2e6cc725ae73d4c3</anchor>
      <arglist>(double first, double second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>findMaxU</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gab185c9fb51fceba5736524d60870a3b3</anchor>
      <arglist>(unsigned int first, unsigned int second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>findMin</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gae56731db94fa119a2ec98ae3e1be29a5</anchor>
      <arglist>(int first, int second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>findMin</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaa40c308bbd855f066a500a5f2761f254</anchor>
      <arglist>(double first, double second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>findMinU</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga4b9123b4fa602266d5415c3e6a53983d</anchor>
      <arglist>(unsigned int first, unsigned int second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>fixAngle</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga56e81d05c4a713bcc04b0c620b787d50</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getClosestSonarNumber</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga30d3f70890eee08e172b21aace11ad39</anchor>
      <arglist>(double startAngle, double endAngle) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getClosestSonarRange</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga5a1512a405e305ff4a7ebd47e22b9fbb</anchor>
      <arglist>(double startAngle, double endAngle) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSonar</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gae417de0a49281c6fcaec4a5092b87382</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getPose</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga25c215578baa598a8916947bdf6e1285</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotLength</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaa0e1c24c9714c4d089bbbc3ddc755f0b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotRadius</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaf046fe8e8e70911d2f4871b945a9d738</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRobotWidth</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaf49fc54179b7ff3139aaf7f62e9f003b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRotVel</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac2abfcd681cccdc2cf091d2901f0ba5b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSonarRange</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gabde522dc0c3d3b0057f59ee66e016dda</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function">
      <type>ArSensorReading *</type>
      <name>getSonarReading</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaaecbf0186c6fee1ca750723358a8a6ca</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTh</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaefe932449c50da9ca0f8084cd9639583</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVel</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gad75dbd9aede7b7f57c9a38902b8aa1ce</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getX</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga4c994926aaefc4c86380f1a74e508a76</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getY</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga9164db66102fdf9d422feefdadffca92</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAfter</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac6df7ba808b20b5c50badca67cd4e97c</anchor>
      <arglist>(ArTime testTime) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBefore</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga9cd60449c10e098341a9f9366d5f86ef</anchor>
      <arglist>(ArTime testTime) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga98b5d608fb9f33aec47a3fe1995dc5b6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHeadingDone</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga189ad51451c91c3c5b9a67a5c33b7b4d</anchor>
      <arglist>(double delta=0.0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMoveDone</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gab74884fb32bdc6e006b556f131343880</anchor>
      <arglist>(double delta=0.0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga808f67ab5b35165c2605b3002df4b499</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStopped</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga1902afde7e420f1db7de2caa4966751a</anchor>
      <arglist>(double stoppedVel=0.0, double stoppedRotVel=0.0, double stoppedLatVel=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaeb5db5d20c1794795ec0d141ac305aa1</anchor>
      <arglist>(const char *prefix=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logActions</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga7052d7939d765fd189e1a30eb54fa2e5</anchor>
      <arglist>(bool logDeactivated=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga09016d00e1f3ac9a502344d9e2cd548e</anchor>
      <arglist>(double distance)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>mSecSince</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gabfac503dbf12dac57c8dc133d0b034a1</anchor>
      <arglist>(ArTime since) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>mSecTo</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga0b2cfe4da4202d614d3278e298ffe01d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>radToDeg</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga6301ec48137480318f9c2c8e06ab3b09</anchor>
      <arglist>(double rad)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>randomInRange</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga4ef94ed579aafcf73419b20ecc7a7138</anchor>
      <arglist>(long m, long n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remAction</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac6e11dce7c909cb2b148f0abb0993982</anchor>
      <arglist>(ArAction *action)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remAction</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga38a1196e4c6af08645ad785fbc0d3bea</anchor>
      <arglist>(const char *actionName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaaade8cc11da585cbdcec45f6c8fbe4a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runAsync</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac4425ceba89af5001dec83246190273a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>secSince</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga5385636d566c665eb9d722af6f65aef5</anchor>
      <arglist>(ArTime since) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>secTo</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga2cd20dd8a4845a5f50b55f16de1c4501</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeltaHeading</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga033038331dbe4cbaabad2d0bc67653f0</anchor>
      <arglist>(double deltaHeading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeading</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gafbbe47b4351cc9baf2559d188803ee72</anchor>
      <arglist>(double heading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotVel</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga613157de1936d0c34ed73e32787ae661</anchor>
      <arglist>(double velocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToNow</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga7c269e161c8e7cb56bde73dea501a619</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVel</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac4c369f0f8d8a41f2b3f2290bdcbb03c</anchor>
      <arglist>(double velocity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>sin</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaeb05754b7747988dd97a961eaded6830</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sleep</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga4dfb878a3f9123b8dd96ae05b2fd94cb</anchor>
      <arglist>(unsigned int ms)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gac354fe63f9e58b33343f38923f1588fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRunning</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaff02cf7043c2e7239ec6b6e11ff6b146</anchor>
      <arglist>(bool doDisconnect=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>subAngle</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaaddbe148df227cf5f85aff738379adbc</anchor>
      <arglist>(double ang1, double ang2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>tan</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gaad297269fc57d48d6ee91e64f2917610</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>WaitState</type>
      <name>waitForConnect</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>gafb0d553568d1001318593afe634721c8</anchor>
      <arglist>(unsigned int msecs=0)</arglist>
    </member>
    <member kind="function">
      <type>WaitState</type>
      <name>waitForRunExit</name>
      <anchorfile>group__easy.html</anchorfile>
      <anchor>ga95201be7c39b521983b51e6f5d9303e4</anchor>
      <arglist>(unsigned int msecs=0)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>ParamFiles</name>
    <title>Robot Parameter Files</title>
    <filename>ParamFiles</filename>
    <docanchor file="ParamFiles" title="Device Parameters">ParamFileDeviceParams</docanchor>
    <docanchor file="ParamFiles" title="General Robot Parameters">ParamFileGeneralParams</docanchor>
    <docanchor file="ParamFiles" title="Laser Rangefinding Devices">ParamFileLaserParams</docanchor>
    <docanchor file="ParamFiles" title="GPS Devices">ParamFileGPSParams</docanchor>
    <docanchor file="ParamFiles" title="Other Accessory Device Flags and Options">ParamFileOtherDeviceParams</docanchor>
  </compound>
  <compound kind="page">
    <name>CommandLineOptions</name>
    <title>Command Line Option Summary</title>
    <filename>CommandLineOptions</filename>
    <docanchor file="CommandLineOptions">ArRobotConnector</docanchor>
    <docanchor file="CommandLineOptions">ArLaserConnector</docanchor>
    <docanchor file="CommandLineOptions">ArPTZConnector</docanchor>
    <docanchor file="CommandLineOptions">ArGPSConnector</docanchor>
    <docanchor file="CommandLineOptions">ArCompassConnector</docanchor>
    <docanchor file="CommandLineOptions">ArSonarConnector</docanchor>
    <docanchor file="CommandLineOptions">ArBatteryConnector</docanchor>
    <docanchor file="CommandLineOptions">ArLCDConnector</docanchor>
  </compound>
  <compound kind="page">
    <name>LaserLogFileFormat</name>
    <title>Laser Scan Log File Format</title>
    <filename>LaserLogFileFormat</filename>
  </compound>
  <compound kind="page">
    <name>MapFileFormat</name>
    <title>Map File Format</title>
    <filename>MapFileFormat</filename>
    <docanchor file="MapFileFormat" title="Defining Custom Map Objects">MapCustomObjects</docanchor>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>ARIA Developer&apos;s Reference Manual</title>
    <filename>index</filename>
    <docanchor file="index" title="Contents">toc</docanchor>
    <docanchor file="index" title="Additional tools in the ARIA toolbox:">tocToolbox</docanchor>
    <docanchor file="index" title="Helpful information about C++ development with ARIA:">tocDevHelp</docanchor>
    <docanchor file="index" title="Advanced Usage:">tocAdv</docanchor>
    <docanchor file="index" title="Introduction">intro</docanchor>
    <docanchor file="index" title="What is ARIA? How does it relate to other MobileRobots software?">whouses</docanchor>
    <docanchor file="index" title="Java and Python">javapython</docanchor>
    <docanchor file="index" title="Matlab">matlab</docanchor>
    <docanchor file="index" title="License and Sharing">licensing</docanchor>
    <docanchor file="index" title="The ARIA Package">AriaPackage</docanchor>
    <docanchor file="index" title="ARIA/">arpack</docanchor>
    <docanchor file="index" title="Other ARIA Files of Note">arpackother</docanchor>
    <docanchor file="index" title="Documentation and Coding Convention">codingConventions</docanchor>
    <docanchor file="index" title="ARIA-Robot Client-Server Relationship">arCliServ</docanchor>
    <docanchor file="index" title="Robot Communication">commClasses</docanchor>
    <docanchor file="index" title="Connecting with a Robot or the Simulator">connectRobot</docanchor>
    <docanchor file="index" title="Specifying Details about Robot and Device Connections">HardwareConfiguration</docanchor>
    <docanchor file="index" title="Robot Parameter Files">RobotParameterFiles</docanchor>
    <docanchor file="index" title="Program Runtime Options">RuntimeOptions</docanchor>
    <docanchor file="index" title="ArRobot">robot</docanchor>
    <docanchor file="index" title="Client Commands and Server Information Packets">commands</docanchor>
    <docanchor file="index" title="Packet Handlers">packetHandlers</docanchor>
    <docanchor file="index" title="Command Packets">CommandPackets</docanchor>
    <docanchor file="index" title="Robot Synchronization Cycle">syncRobot</docanchor>
    <docanchor file="index" title="State Reflection">stateReflection</docanchor>
    <docanchor file="index" title="Robot Callbacks">callback</docanchor>
    <docanchor file="index" title="Controlling the robot with Commands and Actions">ClientCommands</docanchor>
    <docanchor file="index" title="Direct Commands">robotDirectCommands</docanchor>
    <docanchor file="index" title="Motion Command Functions">robotMotionCommands</docanchor>
    <docanchor file="index" title="Actions">actions</docanchor>
    <docanchor file="index" title="Action Desired">actionDesired</docanchor>
    <docanchor file="index" title="The Action Resolver">resolvers</docanchor>
    <docanchor file="index" title="Predefined Actions">predefinedActions</docanchor>
    <docanchor file="index" title="Mixing Actions">actionInteractions</docanchor>
    <docanchor file="index" title="Action Groups">actionGroups</docanchor>
    <docanchor file="index" title="Range Devices">rangeDevices</docanchor>
    <docanchor file="index" title="Functors">functors</docanchor>
    <docanchor file="index" title="Keyboard and Joystick Input">userInput</docanchor>
    <docanchor file="index" title="Threading">threading</docanchor>
    <docanchor file="index" title="Thread Syncronizing Objects">syncObject</docanchor>
    <docanchor file="index" title="Asynchronous Task Class">asynctasks</docanchor>
    <docanchor file="index" title="Global Data">aria</docanchor>
    <docanchor file="index" title="Device and Accessory Interface Classes">devices</docanchor>
    <docanchor file="index" title="Utility Classes">utility</docanchor>
    <docanchor file="index" title="ArConfig">arconfig</docanchor>
    <docanchor file="index" title="Shared Info Groups">arinfogroup</docanchor>
    <docanchor file="index" title="Maps">maps</docanchor>
    <docanchor file="index" title="Sockets">sockets</docanchor>
    <docanchor file="index" title="ArNetworking">ArNetworking</docanchor>
    <docanchor file="index" title="Sound and Speech">sound</docanchor>
    <docanchor file="index" title="Emacs">emacs</docanchor>
    <docanchor file="index" title="Non-everyday use of C++">noneverydayC</docanchor>
    <docanchor file="index" title="Standard Template Library">stl</docanchor>
    <docanchor file="index" title="Default Arguments">defaultArgs</docanchor>
    <docanchor file="index" title="Constructor Chaining">constructorChaining</docanchor>
    <docanchor file="index" title="Chars and Strings, Win workaround">charsAndStrings</docanchor>
    <docanchor file="index" title="AREXPORT">arexport</docanchor>
    <docanchor file="index" title="Exceptions">exceptions</docanchor>
    <docanchor file="index" title="Topics and Esoterica">Advanced</docanchor>
    <docanchor file="index" title="Piecemeal Use of ARIA">pieceMealUse</docanchor>
    <docanchor file="index" title="Connecting with a Robot or the Simulator the hard way">hardConnectRobot</docanchor>
    <docanchor file="index" title="Opening the Connection">openDevice</docanchor>
    <docanchor file="index" title="Robot Client-Server Connection">devConnect</docanchor>
    <docanchor file="index" title="Connection Read, Write, Close and Timestamping">connrw</docanchor>
  </compound>
</tagfile>
